

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Mar 20 10:12:51 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	dabs	1,0x620,48
    64                           	dabs	1,0x5BC,52
    65                           	dabs	1,0x238C,0,_sb_data
    66                           	dabs	1,0x7E,2
    67  0000                     
    68                           ; Version 1.44
    69                           ; Generated 14/09/2017 GMT
    70                           ; 
    71                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F18875 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  000F                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001C                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001D                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  008C                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  008E                     	;# 
   140  008F                     	;# 
   141  0090                     	;# 
   142  0090                     	;# 
   143  0091                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0110                     	;# 
   162  0110                     	;# 
   163  0111                     	;# 
   164  0112                     	;# 
   165  0112                     	;# 
   166  0113                     	;# 
   167  0114                     	;# 
   168  0114                     	;# 
   169  0115                     	;# 
   170  0116                     	;# 
   171  0116                     	;# 
   172  0117                     	;# 
   173  0119                     	;# 
   174  0119                     	;# 
   175  0119                     	;# 
   176  011A                     	;# 
   177  011A                     	;# 
   178  011A                     	;# 
   179  011B                     	;# 
   180  011B                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011B                     	;# 
   184  011C                     	;# 
   185  011C                     	;# 
   186  011C                     	;# 
   187  011D                     	;# 
   188  011D                     	;# 
   189  011D                     	;# 
   190  011E                     	;# 
   191  011E                     	;# 
   192  011E                     	;# 
   193  011F                     	;# 
   194  011F                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  011F                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  018E                     	;# 
   201  018F                     	;# 
   202  0190                     	;# 
   203  0191                     	;# 
   204  0192                     	;# 
   205  0196                     	;# 
   206  0197                     	;# 
   207  0198                     	;# 
   208  0199                     	;# 
   209  019A                     	;# 
   210  019B                     	;# 
   211  019C                     	;# 
   212  020C                     	;# 
   213  020C                     	;# 
   214  020D                     	;# 
   215  020E                     	;# 
   216  020F                     	;# 
   217  020F                     	;# 
   218  0210                     	;# 
   219  0210                     	;# 
   220  0211                     	;# 
   221  0211                     	;# 
   222  0212                     	;# 
   223  0212                     	;# 
   224  0213                     	;# 
   225  0214                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0216                     	;# 
   229  0216                     	;# 
   230  0217                     	;# 
   231  0217                     	;# 
   232  0218                     	;# 
   233  0218                     	;# 
   234  0219                     	;# 
   235  021A                     	;# 
   236  021B                     	;# 
   237  021B                     	;# 
   238  021C                     	;# 
   239  021C                     	;# 
   240  021D                     	;# 
   241  021D                     	;# 
   242  021E                     	;# 
   243  021F                     	;# 
   244  028C                     	;# 
   245  028C                     	;# 
   246  028D                     	;# 
   247  028D                     	;# 
   248  028E                     	;# 
   249  028F                     	;# 
   250  0290                     	;# 
   251  0290                     	;# 
   252  0291                     	;# 
   253  0292                     	;# 
   254  0292                     	;# 
   255  0293                     	;# 
   256  0293                     	;# 
   257  0294                     	;# 
   258  0295                     	;# 
   259  0296                     	;# 
   260  0296                     	;# 
   261  0297                     	;# 
   262  0298                     	;# 
   263  0298                     	;# 
   264  0299                     	;# 
   265  0299                     	;# 
   266  029A                     	;# 
   267  029B                     	;# 
   268  029C                     	;# 
   269  029C                     	;# 
   270  029D                     	;# 
   271  030C                     	;# 
   272  030C                     	;# 
   273  030D                     	;# 
   274  030E                     	;# 
   275  030F                     	;# 
   276  0310                     	;# 
   277  0310                     	;# 
   278  0311                     	;# 
   279  0312                     	;# 
   280  0313                     	;# 
   281  0314                     	;# 
   282  0314                     	;# 
   283  0315                     	;# 
   284  0316                     	;# 
   285  0317                     	;# 
   286  0318                     	;# 
   287  0318                     	;# 
   288  0319                     	;# 
   289  031A                     	;# 
   290  031B                     	;# 
   291  031C                     	;# 
   292  031C                     	;# 
   293  031D                     	;# 
   294  031E                     	;# 
   295  031F                     	;# 
   296  038C                     	;# 
   297  038D                     	;# 
   298  038E                     	;# 
   299  0390                     	;# 
   300  0391                     	;# 
   301  0392                     	;# 
   302  040C                     	;# 
   303  040D                     	;# 
   304  040E                     	;# 
   305  040F                     	;# 
   306  0410                     	;# 
   307  0411                     	;# 
   308  0416                     	;# 
   309  0416                     	;# 
   310  0417                     	;# 
   311  0418                     	;# 
   312  0418                     	;# 
   313  0419                     	;# 
   314  041A                     	;# 
   315  041A                     	;# 
   316  041B                     	;# 
   317  041C                     	;# 
   318  041C                     	;# 
   319  041D                     	;# 
   320  041E                     	;# 
   321  041F                     	;# 
   322  048C                     	;# 
   323  048C                     	;# 
   324  048D                     	;# 
   325  048E                     	;# 
   326  048F                     	;# 
   327  048F                     	;# 
   328  0490                     	;# 
   329  0491                     	;# 
   330  0492                     	;# 
   331  0492                     	;# 
   332  0493                     	;# 
   333  0494                     	;# 
   334  0495                     	;# 
   335  0495                     	;# 
   336  0496                     	;# 
   337  0497                     	;# 
   338  0498                     	;# 
   339  0499                     	;# 
   340  049A                     	;# 
   341  049B                     	;# 
   342  049C                     	;# 
   343  049D                     	;# 
   344  050C                     	;# 
   345  050C                     	;# 
   346  050D                     	;# 
   347  050E                     	;# 
   348  050F                     	;# 
   349  050F                     	;# 
   350  0510                     	;# 
   351  0511                     	;# 
   352  0512                     	;# 
   353  0512                     	;# 
   354  0513                     	;# 
   355  0514                     	;# 
   356  0515                     	;# 
   357  0515                     	;# 
   358  0516                     	;# 
   359  0517                     	;# 
   360  0518                     	;# 
   361  0519                     	;# 
   362  051A                     	;# 
   363  051B                     	;# 
   364  051C                     	;# 
   365  051D                     	;# 
   366  058C                     	;# 
   367  058C                     	;# 
   368  058D                     	;# 
   369  058E                     	;# 
   370  058F                     	;# 
   371  058F                     	;# 
   372  0590                     	;# 
   373  0591                     	;# 
   374  0592                     	;# 
   375  0593                     	;# 
   376  060C                     	;# 
   377  060D                     	;# 
   378  060E                     	;# 
   379  060F                     	;# 
   380  0610                     	;# 
   381  0611                     	;# 
   382  0612                     	;# 
   383  0613                     	;# 
   384  0614                     	;# 
   385  0616                     	;# 
   386  0617                     	;# 
   387  0618                     	;# 
   388  0619                     	;# 
   389  061A                     	;# 
   390  061B                     	;# 
   391  061C                     	;# 
   392  061D                     	;# 
   393  061E                     	;# 
   394  068C                     	;# 
   395  068D                     	;# 
   396  068E                     	;# 
   397  068F                     	;# 
   398  0690                     	;# 
   399  0691                     	;# 
   400  0692                     	;# 
   401  0693                     	;# 
   402  0694                     	;# 
   403  070C                     	;# 
   404  070D                     	;# 
   405  070E                     	;# 
   406  070F                     	;# 
   407  0710                     	;# 
   408  0711                     	;# 
   409  0712                     	;# 
   410  0713                     	;# 
   411  0714                     	;# 
   412  0716                     	;# 
   413  0717                     	;# 
   414  0718                     	;# 
   415  0719                     	;# 
   416  071A                     	;# 
   417  071B                     	;# 
   418  071C                     	;# 
   419  071D                     	;# 
   420  071E                     	;# 
   421  0796                     	;# 
   422  0797                     	;# 
   423  0798                     	;# 
   424  0799                     	;# 
   425  079A                     	;# 
   426  079B                     	;# 
   427  080C                     	;# 
   428  080D                     	;# 
   429  080E                     	;# 
   430  080F                     	;# 
   431  0810                     	;# 
   432  0811                     	;# 
   433  0812                     	;# 
   434  0813                     	;# 
   435  0814                     	;# 
   436  081A                     	;# 
   437  081B                     	;# 
   438  081C                     	;# 
   439  081D                     	;# 
   440  081E                     	;# 
   441  081F                     	;# 
   442  088C                     	;# 
   443  088D                     	;# 
   444  088E                     	;# 
   445  088F                     	;# 
   446  0890                     	;# 
   447  0891                     	;# 
   448  0892                     	;# 
   449  0893                     	;# 
   450  0895                     	;# 
   451  0896                     	;# 
   452  0897                     	;# 
   453  0898                     	;# 
   454  0899                     	;# 
   455  089A                     	;# 
   456  089B                     	;# 
   457  090C                     	;# 
   458  090E                     	;# 
   459  090F                     	;# 
   460  091F                     	;# 
   461  091F                     	;# 
   462  098F                     	;# 
   463  098F                     	;# 
   464  0990                     	;# 
   465  0991                     	;# 
   466  0992                     	;# 
   467  0993                     	;# 
   468  0994                     	;# 
   469  0995                     	;# 
   470  0996                     	;# 
   471  0997                     	;# 
   472  0E0F                     	;# 
   473  0E10                     	;# 
   474  0E11                     	;# 
   475  0E12                     	;# 
   476  0E13                     	;# 
   477  0E14                     	;# 
   478  0E15                     	;# 
   479  0E16                     	;# 
   480  0E17                     	;# 
   481  0E18                     	;# 
   482  0E19                     	;# 
   483  0E1A                     	;# 
   484  0E1B                     	;# 
   485  0E1C                     	;# 
   486  0E1D                     	;# 
   487  0E1E                     	;# 
   488  0E1F                     	;# 
   489  0E20                     	;# 
   490  0E21                     	;# 
   491  0E22                     	;# 
   492  0E23                     	;# 
   493  0E24                     	;# 
   494  0E25                     	;# 
   495  0E26                     	;# 
   496  0E27                     	;# 
   497  0E28                     	;# 
   498  0E29                     	;# 
   499  0E2A                     	;# 
   500  0E2B                     	;# 
   501  0E2C                     	;# 
   502  0E2D                     	;# 
   503  0E2E                     	;# 
   504  0E2F                     	;# 
   505  0E30                     	;# 
   506  0E31                     	;# 
   507  0E32                     	;# 
   508  0E33                     	;# 
   509  0E34                     	;# 
   510  0E35                     	;# 
   511  0E36                     	;# 
   512  0E37                     	;# 
   513  0E8F                     	;# 
   514  0E90                     	;# 
   515  0E91                     	;# 
   516  0E92                     	;# 
   517  0E93                     	;# 
   518  0E94                     	;# 
   519  0E95                     	;# 
   520  0E96                     	;# 
   521  0E97                     	;# 
   522  0E9C                     	;# 
   523  0E9D                     	;# 
   524  0E9E                     	;# 
   525  0EA1                     	;# 
   526  0EA2                     	;# 
   527  0EA3                     	;# 
   528  0EA4                     	;# 
   529  0EA5                     	;# 
   530  0EA9                     	;# 
   531  0EAA                     	;# 
   532  0EAB                     	;# 
   533  0EAC                     	;# 
   534  0EB1                     	;# 
   535  0EB2                     	;# 
   536  0EB3                     	;# 
   537  0EB8                     	;# 
   538  0EB9                     	;# 
   539  0EBA                     	;# 
   540  0EBB                     	;# 
   541  0EBC                     	;# 
   542  0EBD                     	;# 
   543  0EBE                     	;# 
   544  0EC3                     	;# 
   545  0EC5                     	;# 
   546  0EC6                     	;# 
   547  0EC7                     	;# 
   548  0EC8                     	;# 
   549  0EC9                     	;# 
   550  0ECA                     	;# 
   551  0ECB                     	;# 
   552  0ECC                     	;# 
   553  0F10                     	;# 
   554  0F11                     	;# 
   555  0F12                     	;# 
   556  0F13                     	;# 
   557  0F14                     	;# 
   558  0F15                     	;# 
   559  0F16                     	;# 
   560  0F17                     	;# 
   561  0F18                     	;# 
   562  0F19                     	;# 
   563  0F1A                     	;# 
   564  0F1B                     	;# 
   565  0F1C                     	;# 
   566  0F1D                     	;# 
   567  0F1E                     	;# 
   568  0F1F                     	;# 
   569  0F20                     	;# 
   570  0F21                     	;# 
   571  0F22                     	;# 
   572  0F23                     	;# 
   573  0F24                     	;# 
   574  0F25                     	;# 
   575  0F26                     	;# 
   576  0F27                     	;# 
   577  0F28                     	;# 
   578  0F29                     	;# 
   579  0F2A                     	;# 
   580  0F2B                     	;# 
   581  0F2C                     	;# 
   582  0F2D                     	;# 
   583  0F2E                     	;# 
   584  0F2F                     	;# 
   585  0F30                     	;# 
   586  0F31                     	;# 
   587  0F32                     	;# 
   588  0F38                     	;# 
   589  0F39                     	;# 
   590  0F3A                     	;# 
   591  0F3B                     	;# 
   592  0F3C                     	;# 
   593  0F3D                     	;# 
   594  0F3E                     	;# 
   595  0F3F                     	;# 
   596  0F40                     	;# 
   597  0F41                     	;# 
   598  0F43                     	;# 
   599  0F44                     	;# 
   600  0F45                     	;# 
   601  0F46                     	;# 
   602  0F47                     	;# 
   603  0F48                     	;# 
   604  0F49                     	;# 
   605  0F4A                     	;# 
   606  0F4B                     	;# 
   607  0F4C                     	;# 
   608  0F4E                     	;# 
   609  0F4F                     	;# 
   610  0F50                     	;# 
   611  0F51                     	;# 
   612  0F52                     	;# 
   613  0F53                     	;# 
   614  0F54                     	;# 
   615  0F55                     	;# 
   616  0F56                     	;# 
   617  0F57                     	;# 
   618  0F59                     	;# 
   619  0F5A                     	;# 
   620  0F5B                     	;# 
   621  0F5C                     	;# 
   622  0F5D                     	;# 
   623  0F61                     	;# 
   624  0F62                     	;# 
   625  0F64                     	;# 
   626  0F65                     	;# 
   627  0F66                     	;# 
   628  0F67                     	;# 
   629  0F68                     	;# 
   630  0F69                     	;# 
   631  0F6A                     	;# 
   632  0F6B                     	;# 
   633  0F6C                     	;# 
   634  0F6D                     	;# 
   635  0FE4                     	;# 
   636  0FE5                     	;# 
   637  0FE6                     	;# 
   638  0FE7                     	;# 
   639  0FE8                     	;# 
   640  0FE9                     	;# 
   641  0FEA                     	;# 
   642  0FEB                     	;# 
   643  0FED                     	;# 
   644  0FEE                     	;# 
   645  0FEF                     	;# 
   646  0000                     	;# 
   647  0001                     	;# 
   648  0002                     	;# 
   649  0003                     	;# 
   650  0004                     	;# 
   651  0005                     	;# 
   652  0006                     	;# 
   653  0007                     	;# 
   654  0008                     	;# 
   655  0009                     	;# 
   656  000A                     	;# 
   657  000B                     	;# 
   658  000C                     	;# 
   659  000D                     	;# 
   660  000E                     	;# 
   661  000F                     	;# 
   662  0010                     	;# 
   663  0011                     	;# 
   664  0012                     	;# 
   665  0013                     	;# 
   666  0014                     	;# 
   667  0015                     	;# 
   668  0016                     	;# 
   669  0017                     	;# 
   670  0018                     	;# 
   671  0019                     	;# 
   672  001A                     	;# 
   673  001C                     	;# 
   674  001C                     	;# 
   675  001D                     	;# 
   676  001D                     	;# 
   677  001E                     	;# 
   678  001F                     	;# 
   679  008C                     	;# 
   680  008C                     	;# 
   681  008D                     	;# 
   682  008E                     	;# 
   683  008E                     	;# 
   684  008F                     	;# 
   685  0090                     	;# 
   686  0090                     	;# 
   687  0091                     	;# 
   688  0093                     	;# 
   689  0094                     	;# 
   690  0095                     	;# 
   691  0096                     	;# 
   692  0097                     	;# 
   693  0098                     	;# 
   694  0099                     	;# 
   695  009A                     	;# 
   696  009B                     	;# 
   697  009C                     	;# 
   698  009D                     	;# 
   699  009E                     	;# 
   700  010C                     	;# 
   701  010D                     	;# 
   702  010E                     	;# 
   703  010E                     	;# 
   704  010F                     	;# 
   705  0110                     	;# 
   706  0110                     	;# 
   707  0111                     	;# 
   708  0112                     	;# 
   709  0112                     	;# 
   710  0113                     	;# 
   711  0114                     	;# 
   712  0114                     	;# 
   713  0115                     	;# 
   714  0116                     	;# 
   715  0116                     	;# 
   716  0117                     	;# 
   717  0119                     	;# 
   718  0119                     	;# 
   719  0119                     	;# 
   720  011A                     	;# 
   721  011A                     	;# 
   722  011A                     	;# 
   723  011B                     	;# 
   724  011B                     	;# 
   725  011B                     	;# 
   726  011B                     	;# 
   727  011B                     	;# 
   728  011C                     	;# 
   729  011C                     	;# 
   730  011C                     	;# 
   731  011D                     	;# 
   732  011D                     	;# 
   733  011D                     	;# 
   734  011E                     	;# 
   735  011E                     	;# 
   736  011E                     	;# 
   737  011F                     	;# 
   738  011F                     	;# 
   739  011F                     	;# 
   740  011F                     	;# 
   741  011F                     	;# 
   742  018C                     	;# 
   743  018D                     	;# 
   744  018E                     	;# 
   745  018F                     	;# 
   746  0190                     	;# 
   747  0191                     	;# 
   748  0192                     	;# 
   749  0196                     	;# 
   750  0197                     	;# 
   751  0198                     	;# 
   752  0199                     	;# 
   753  019A                     	;# 
   754  019B                     	;# 
   755  019C                     	;# 
   756  020C                     	;# 
   757  020C                     	;# 
   758  020D                     	;# 
   759  020E                     	;# 
   760  020F                     	;# 
   761  020F                     	;# 
   762  0210                     	;# 
   763  0210                     	;# 
   764  0211                     	;# 
   765  0211                     	;# 
   766  0212                     	;# 
   767  0212                     	;# 
   768  0213                     	;# 
   769  0214                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0216                     	;# 
   773  0216                     	;# 
   774  0217                     	;# 
   775  0217                     	;# 
   776  0218                     	;# 
   777  0218                     	;# 
   778  0219                     	;# 
   779  021A                     	;# 
   780  021B                     	;# 
   781  021B                     	;# 
   782  021C                     	;# 
   783  021C                     	;# 
   784  021D                     	;# 
   785  021D                     	;# 
   786  021E                     	;# 
   787  021F                     	;# 
   788  028C                     	;# 
   789  028C                     	;# 
   790  028D                     	;# 
   791  028D                     	;# 
   792  028E                     	;# 
   793  028F                     	;# 
   794  0290                     	;# 
   795  0290                     	;# 
   796  0291                     	;# 
   797  0292                     	;# 
   798  0292                     	;# 
   799  0293                     	;# 
   800  0293                     	;# 
   801  0294                     	;# 
   802  0295                     	;# 
   803  0296                     	;# 
   804  0296                     	;# 
   805  0297                     	;# 
   806  0298                     	;# 
   807  0298                     	;# 
   808  0299                     	;# 
   809  0299                     	;# 
   810  029A                     	;# 
   811  029B                     	;# 
   812  029C                     	;# 
   813  029C                     	;# 
   814  029D                     	;# 
   815  030C                     	;# 
   816  030C                     	;# 
   817  030D                     	;# 
   818  030E                     	;# 
   819  030F                     	;# 
   820  0310                     	;# 
   821  0310                     	;# 
   822  0311                     	;# 
   823  0312                     	;# 
   824  0313                     	;# 
   825  0314                     	;# 
   826  0314                     	;# 
   827  0315                     	;# 
   828  0316                     	;# 
   829  0317                     	;# 
   830  0318                     	;# 
   831  0318                     	;# 
   832  0319                     	;# 
   833  031A                     	;# 
   834  031B                     	;# 
   835  031C                     	;# 
   836  031C                     	;# 
   837  031D                     	;# 
   838  031E                     	;# 
   839  031F                     	;# 
   840  038C                     	;# 
   841  038D                     	;# 
   842  038E                     	;# 
   843  0390                     	;# 
   844  0391                     	;# 
   845  0392                     	;# 
   846  040C                     	;# 
   847  040D                     	;# 
   848  040E                     	;# 
   849  040F                     	;# 
   850  0410                     	;# 
   851  0411                     	;# 
   852  0416                     	;# 
   853  0416                     	;# 
   854  0417                     	;# 
   855  0418                     	;# 
   856  0418                     	;# 
   857  0419                     	;# 
   858  041A                     	;# 
   859  041A                     	;# 
   860  041B                     	;# 
   861  041C                     	;# 
   862  041C                     	;# 
   863  041D                     	;# 
   864  041E                     	;# 
   865  041F                     	;# 
   866  048C                     	;# 
   867  048C                     	;# 
   868  048D                     	;# 
   869  048E                     	;# 
   870  048F                     	;# 
   871  048F                     	;# 
   872  0490                     	;# 
   873  0491                     	;# 
   874  0492                     	;# 
   875  0492                     	;# 
   876  0493                     	;# 
   877  0494                     	;# 
   878  0495                     	;# 
   879  0495                     	;# 
   880  0496                     	;# 
   881  0497                     	;# 
   882  0498                     	;# 
   883  0499                     	;# 
   884  049A                     	;# 
   885  049B                     	;# 
   886  049C                     	;# 
   887  049D                     	;# 
   888  050C                     	;# 
   889  050C                     	;# 
   890  050D                     	;# 
   891  050E                     	;# 
   892  050F                     	;# 
   893  050F                     	;# 
   894  0510                     	;# 
   895  0511                     	;# 
   896  0512                     	;# 
   897  0512                     	;# 
   898  0513                     	;# 
   899  0514                     	;# 
   900  0515                     	;# 
   901  0515                     	;# 
   902  0516                     	;# 
   903  0517                     	;# 
   904  0518                     	;# 
   905  0519                     	;# 
   906  051A                     	;# 
   907  051B                     	;# 
   908  051C                     	;# 
   909  051D                     	;# 
   910  058C                     	;# 
   911  058C                     	;# 
   912  058D                     	;# 
   913  058E                     	;# 
   914  058F                     	;# 
   915  058F                     	;# 
   916  0590                     	;# 
   917  0591                     	;# 
   918  0592                     	;# 
   919  0593                     	;# 
   920  060C                     	;# 
   921  060D                     	;# 
   922  060E                     	;# 
   923  060F                     	;# 
   924  0610                     	;# 
   925  0611                     	;# 
   926  0612                     	;# 
   927  0613                     	;# 
   928  0614                     	;# 
   929  0616                     	;# 
   930  0617                     	;# 
   931  0618                     	;# 
   932  0619                     	;# 
   933  061A                     	;# 
   934  061B                     	;# 
   935  061C                     	;# 
   936  061D                     	;# 
   937  061E                     	;# 
   938  068C                     	;# 
   939  068D                     	;# 
   940  068E                     	;# 
   941  068F                     	;# 
   942  0690                     	;# 
   943  0691                     	;# 
   944  0692                     	;# 
   945  0693                     	;# 
   946  0694                     	;# 
   947  070C                     	;# 
   948  070D                     	;# 
   949  070E                     	;# 
   950  070F                     	;# 
   951  0710                     	;# 
   952  0711                     	;# 
   953  0712                     	;# 
   954  0713                     	;# 
   955  0714                     	;# 
   956  0716                     	;# 
   957  0717                     	;# 
   958  0718                     	;# 
   959  0719                     	;# 
   960  071A                     	;# 
   961  071B                     	;# 
   962  071C                     	;# 
   963  071D                     	;# 
   964  071E                     	;# 
   965  0796                     	;# 
   966  0797                     	;# 
   967  0798                     	;# 
   968  0799                     	;# 
   969  079A                     	;# 
   970  079B                     	;# 
   971  080C                     	;# 
   972  080D                     	;# 
   973  080E                     	;# 
   974  080F                     	;# 
   975  0810                     	;# 
   976  0811                     	;# 
   977  0812                     	;# 
   978  0813                     	;# 
   979  0814                     	;# 
   980  081A                     	;# 
   981  081B                     	;# 
   982  081C                     	;# 
   983  081D                     	;# 
   984  081E                     	;# 
   985  081F                     	;# 
   986  088C                     	;# 
   987  088D                     	;# 
   988  088E                     	;# 
   989  088F                     	;# 
   990  0890                     	;# 
   991  0891                     	;# 
   992  0892                     	;# 
   993  0893                     	;# 
   994  0895                     	;# 
   995  0896                     	;# 
   996  0897                     	;# 
   997  0898                     	;# 
   998  0899                     	;# 
   999  089A                     	;# 
  1000  089B                     	;# 
  1001  090C                     	;# 
  1002  090E                     	;# 
  1003  090F                     	;# 
  1004  091F                     	;# 
  1005  091F                     	;# 
  1006  098F                     	;# 
  1007  098F                     	;# 
  1008  0990                     	;# 
  1009  0991                     	;# 
  1010  0992                     	;# 
  1011  0993                     	;# 
  1012  0994                     	;# 
  1013  0995                     	;# 
  1014  0996                     	;# 
  1015  0997                     	;# 
  1016  0E0F                     	;# 
  1017  0E10                     	;# 
  1018  0E11                     	;# 
  1019  0E12                     	;# 
  1020  0E13                     	;# 
  1021  0E14                     	;# 
  1022  0E15                     	;# 
  1023  0E16                     	;# 
  1024  0E17                     	;# 
  1025  0E18                     	;# 
  1026  0E19                     	;# 
  1027  0E1A                     	;# 
  1028  0E1B                     	;# 
  1029  0E1C                     	;# 
  1030  0E1D                     	;# 
  1031  0E1E                     	;# 
  1032  0E1F                     	;# 
  1033  0E20                     	;# 
  1034  0E21                     	;# 
  1035  0E22                     	;# 
  1036  0E23                     	;# 
  1037  0E24                     	;# 
  1038  0E25                     	;# 
  1039  0E26                     	;# 
  1040  0E27                     	;# 
  1041  0E28                     	;# 
  1042  0E29                     	;# 
  1043  0E2A                     	;# 
  1044  0E2B                     	;# 
  1045  0E2C                     	;# 
  1046  0E2D                     	;# 
  1047  0E2E                     	;# 
  1048  0E2F                     	;# 
  1049  0E30                     	;# 
  1050  0E31                     	;# 
  1051  0E32                     	;# 
  1052  0E33                     	;# 
  1053  0E34                     	;# 
  1054  0E35                     	;# 
  1055  0E36                     	;# 
  1056  0E37                     	;# 
  1057  0E8F                     	;# 
  1058  0E90                     	;# 
  1059  0E91                     	;# 
  1060  0E92                     	;# 
  1061  0E93                     	;# 
  1062  0E94                     	;# 
  1063  0E95                     	;# 
  1064  0E96                     	;# 
  1065  0E97                     	;# 
  1066  0E9C                     	;# 
  1067  0E9D                     	;# 
  1068  0E9E                     	;# 
  1069  0EA1                     	;# 
  1070  0EA2                     	;# 
  1071  0EA3                     	;# 
  1072  0EA4                     	;# 
  1073  0EA5                     	;# 
  1074  0EA9                     	;# 
  1075  0EAA                     	;# 
  1076  0EAB                     	;# 
  1077  0EAC                     	;# 
  1078  0EB1                     	;# 
  1079  0EB2                     	;# 
  1080  0EB3                     	;# 
  1081  0EB8                     	;# 
  1082  0EB9                     	;# 
  1083  0EBA                     	;# 
  1084  0EBB                     	;# 
  1085  0EBC                     	;# 
  1086  0EBD                     	;# 
  1087  0EBE                     	;# 
  1088  0EC3                     	;# 
  1089  0EC5                     	;# 
  1090  0EC6                     	;# 
  1091  0EC7                     	;# 
  1092  0EC8                     	;# 
  1093  0EC9                     	;# 
  1094  0ECA                     	;# 
  1095  0ECB                     	;# 
  1096  0ECC                     	;# 
  1097  0F10                     	;# 
  1098  0F11                     	;# 
  1099  0F12                     	;# 
  1100  0F13                     	;# 
  1101  0F14                     	;# 
  1102  0F15                     	;# 
  1103  0F16                     	;# 
  1104  0F17                     	;# 
  1105  0F18                     	;# 
  1106  0F19                     	;# 
  1107  0F1A                     	;# 
  1108  0F1B                     	;# 
  1109  0F1C                     	;# 
  1110  0F1D                     	;# 
  1111  0F1E                     	;# 
  1112  0F1F                     	;# 
  1113  0F20                     	;# 
  1114  0F21                     	;# 
  1115  0F22                     	;# 
  1116  0F23                     	;# 
  1117  0F24                     	;# 
  1118  0F25                     	;# 
  1119  0F26                     	;# 
  1120  0F27                     	;# 
  1121  0F28                     	;# 
  1122  0F29                     	;# 
  1123  0F2A                     	;# 
  1124  0F2B                     	;# 
  1125  0F2C                     	;# 
  1126  0F2D                     	;# 
  1127  0F2E                     	;# 
  1128  0F2F                     	;# 
  1129  0F30                     	;# 
  1130  0F31                     	;# 
  1131  0F32                     	;# 
  1132  0F38                     	;# 
  1133  0F39                     	;# 
  1134  0F3A                     	;# 
  1135  0F3B                     	;# 
  1136  0F3C                     	;# 
  1137  0F3D                     	;# 
  1138  0F3E                     	;# 
  1139  0F3F                     	;# 
  1140  0F40                     	;# 
  1141  0F41                     	;# 
  1142  0F43                     	;# 
  1143  0F44                     	;# 
  1144  0F45                     	;# 
  1145  0F46                     	;# 
  1146  0F47                     	;# 
  1147  0F48                     	;# 
  1148  0F49                     	;# 
  1149  0F4A                     	;# 
  1150  0F4B                     	;# 
  1151  0F4C                     	;# 
  1152  0F4E                     	;# 
  1153  0F4F                     	;# 
  1154  0F50                     	;# 
  1155  0F51                     	;# 
  1156  0F52                     	;# 
  1157  0F53                     	;# 
  1158  0F54                     	;# 
  1159  0F55                     	;# 
  1160  0F56                     	;# 
  1161  0F57                     	;# 
  1162  0F59                     	;# 
  1163  0F5A                     	;# 
  1164  0F5B                     	;# 
  1165  0F5C                     	;# 
  1166  0F5D                     	;# 
  1167  0F61                     	;# 
  1168  0F62                     	;# 
  1169  0F64                     	;# 
  1170  0F65                     	;# 
  1171  0F66                     	;# 
  1172  0F67                     	;# 
  1173  0F68                     	;# 
  1174  0F69                     	;# 
  1175  0F6A                     	;# 
  1176  0F6B                     	;# 
  1177  0F6C                     	;# 
  1178  0F6D                     	;# 
  1179  0FE4                     	;# 
  1180  0FE5                     	;# 
  1181  0FE6                     	;# 
  1182  0FE7                     	;# 
  1183  0FE8                     	;# 
  1184  0FE9                     	;# 
  1185  0FEA                     	;# 
  1186  0FEB                     	;# 
  1187  0FED                     	;# 
  1188  0FEE                     	;# 
  1189  0FEF                     	;# 
  1190  0000                     	;# 
  1191  0001                     	;# 
  1192  0002                     	;# 
  1193  0003                     	;# 
  1194  0004                     	;# 
  1195  0005                     	;# 
  1196  0006                     	;# 
  1197  0007                     	;# 
  1198  0008                     	;# 
  1199  0009                     	;# 
  1200  000A                     	;# 
  1201  000B                     	;# 
  1202  000C                     	;# 
  1203  000D                     	;# 
  1204  000E                     	;# 
  1205  000F                     	;# 
  1206  0010                     	;# 
  1207  0011                     	;# 
  1208  0012                     	;# 
  1209  0013                     	;# 
  1210  0014                     	;# 
  1211  0015                     	;# 
  1212  0016                     	;# 
  1213  0017                     	;# 
  1214  0018                     	;# 
  1215  0019                     	;# 
  1216  001A                     	;# 
  1217  001C                     	;# 
  1218  001C                     	;# 
  1219  001D                     	;# 
  1220  001D                     	;# 
  1221  001E                     	;# 
  1222  001F                     	;# 
  1223  008C                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  008E                     	;# 
  1227  008E                     	;# 
  1228  008F                     	;# 
  1229  0090                     	;# 
  1230  0090                     	;# 
  1231  0091                     	;# 
  1232  0093                     	;# 
  1233  0094                     	;# 
  1234  0095                     	;# 
  1235  0096                     	;# 
  1236  0097                     	;# 
  1237  0098                     	;# 
  1238  0099                     	;# 
  1239  009A                     	;# 
  1240  009B                     	;# 
  1241  009C                     	;# 
  1242  009D                     	;# 
  1243  009E                     	;# 
  1244  010C                     	;# 
  1245  010D                     	;# 
  1246  010E                     	;# 
  1247  010E                     	;# 
  1248  010F                     	;# 
  1249  0110                     	;# 
  1250  0110                     	;# 
  1251  0111                     	;# 
  1252  0112                     	;# 
  1253  0112                     	;# 
  1254  0113                     	;# 
  1255  0114                     	;# 
  1256  0114                     	;# 
  1257  0115                     	;# 
  1258  0116                     	;# 
  1259  0116                     	;# 
  1260  0117                     	;# 
  1261  0119                     	;# 
  1262  0119                     	;# 
  1263  0119                     	;# 
  1264  011A                     	;# 
  1265  011A                     	;# 
  1266  011A                     	;# 
  1267  011B                     	;# 
  1268  011B                     	;# 
  1269  011B                     	;# 
  1270  011B                     	;# 
  1271  011B                     	;# 
  1272  011C                     	;# 
  1273  011C                     	;# 
  1274  011C                     	;# 
  1275  011D                     	;# 
  1276  011D                     	;# 
  1277  011D                     	;# 
  1278  011E                     	;# 
  1279  011E                     	;# 
  1280  011E                     	;# 
  1281  011F                     	;# 
  1282  011F                     	;# 
  1283  011F                     	;# 
  1284  011F                     	;# 
  1285  011F                     	;# 
  1286  018C                     	;# 
  1287  018D                     	;# 
  1288  018E                     	;# 
  1289  018F                     	;# 
  1290  0190                     	;# 
  1291  0191                     	;# 
  1292  0192                     	;# 
  1293  0196                     	;# 
  1294  0197                     	;# 
  1295  0198                     	;# 
  1296  0199                     	;# 
  1297  019A                     	;# 
  1298  019B                     	;# 
  1299  019C                     	;# 
  1300  020C                     	;# 
  1301  020C                     	;# 
  1302  020D                     	;# 
  1303  020E                     	;# 
  1304  020F                     	;# 
  1305  020F                     	;# 
  1306  0210                     	;# 
  1307  0210                     	;# 
  1308  0211                     	;# 
  1309  0211                     	;# 
  1310  0212                     	;# 
  1311  0212                     	;# 
  1312  0213                     	;# 
  1313  0214                     	;# 
  1314  0215                     	;# 
  1315  0215                     	;# 
  1316  0216                     	;# 
  1317  0216                     	;# 
  1318  0217                     	;# 
  1319  0217                     	;# 
  1320  0218                     	;# 
  1321  0218                     	;# 
  1322  0219                     	;# 
  1323  021A                     	;# 
  1324  021B                     	;# 
  1325  021B                     	;# 
  1326  021C                     	;# 
  1327  021C                     	;# 
  1328  021D                     	;# 
  1329  021D                     	;# 
  1330  021E                     	;# 
  1331  021F                     	;# 
  1332  028C                     	;# 
  1333  028C                     	;# 
  1334  028D                     	;# 
  1335  028D                     	;# 
  1336  028E                     	;# 
  1337  028F                     	;# 
  1338  0290                     	;# 
  1339  0290                     	;# 
  1340  0291                     	;# 
  1341  0292                     	;# 
  1342  0292                     	;# 
  1343  0293                     	;# 
  1344  0293                     	;# 
  1345  0294                     	;# 
  1346  0295                     	;# 
  1347  0296                     	;# 
  1348  0296                     	;# 
  1349  0297                     	;# 
  1350  0298                     	;# 
  1351  0298                     	;# 
  1352  0299                     	;# 
  1353  0299                     	;# 
  1354  029A                     	;# 
  1355  029B                     	;# 
  1356  029C                     	;# 
  1357  029C                     	;# 
  1358  029D                     	;# 
  1359  030C                     	;# 
  1360  030C                     	;# 
  1361  030D                     	;# 
  1362  030E                     	;# 
  1363  030F                     	;# 
  1364  0310                     	;# 
  1365  0310                     	;# 
  1366  0311                     	;# 
  1367  0312                     	;# 
  1368  0313                     	;# 
  1369  0314                     	;# 
  1370  0314                     	;# 
  1371  0315                     	;# 
  1372  0316                     	;# 
  1373  0317                     	;# 
  1374  0318                     	;# 
  1375  0318                     	;# 
  1376  0319                     	;# 
  1377  031A                     	;# 
  1378  031B                     	;# 
  1379  031C                     	;# 
  1380  031C                     	;# 
  1381  031D                     	;# 
  1382  031E                     	;# 
  1383  031F                     	;# 
  1384  038C                     	;# 
  1385  038D                     	;# 
  1386  038E                     	;# 
  1387  0390                     	;# 
  1388  0391                     	;# 
  1389  0392                     	;# 
  1390  040C                     	;# 
  1391  040D                     	;# 
  1392  040E                     	;# 
  1393  040F                     	;# 
  1394  0410                     	;# 
  1395  0411                     	;# 
  1396  0416                     	;# 
  1397  0416                     	;# 
  1398  0417                     	;# 
  1399  0418                     	;# 
  1400  0418                     	;# 
  1401  0419                     	;# 
  1402  041A                     	;# 
  1403  041A                     	;# 
  1404  041B                     	;# 
  1405  041C                     	;# 
  1406  041C                     	;# 
  1407  041D                     	;# 
  1408  041E                     	;# 
  1409  041F                     	;# 
  1410  048C                     	;# 
  1411  048C                     	;# 
  1412  048D                     	;# 
  1413  048E                     	;# 
  1414  048F                     	;# 
  1415  048F                     	;# 
  1416  0490                     	;# 
  1417  0491                     	;# 
  1418  0492                     	;# 
  1419  0492                     	;# 
  1420  0493                     	;# 
  1421  0494                     	;# 
  1422  0495                     	;# 
  1423  0495                     	;# 
  1424  0496                     	;# 
  1425  0497                     	;# 
  1426  0498                     	;# 
  1427  0499                     	;# 
  1428  049A                     	;# 
  1429  049B                     	;# 
  1430  049C                     	;# 
  1431  049D                     	;# 
  1432  050C                     	;# 
  1433  050C                     	;# 
  1434  050D                     	;# 
  1435  050E                     	;# 
  1436  050F                     	;# 
  1437  050F                     	;# 
  1438  0510                     	;# 
  1439  0511                     	;# 
  1440  0512                     	;# 
  1441  0512                     	;# 
  1442  0513                     	;# 
  1443  0514                     	;# 
  1444  0515                     	;# 
  1445  0515                     	;# 
  1446  0516                     	;# 
  1447  0517                     	;# 
  1448  0518                     	;# 
  1449  0519                     	;# 
  1450  051A                     	;# 
  1451  051B                     	;# 
  1452  051C                     	;# 
  1453  051D                     	;# 
  1454  058C                     	;# 
  1455  058C                     	;# 
  1456  058D                     	;# 
  1457  058E                     	;# 
  1458  058F                     	;# 
  1459  058F                     	;# 
  1460  0590                     	;# 
  1461  0591                     	;# 
  1462  0592                     	;# 
  1463  0593                     	;# 
  1464  060C                     	;# 
  1465  060D                     	;# 
  1466  060E                     	;# 
  1467  060F                     	;# 
  1468  0610                     	;# 
  1469  0611                     	;# 
  1470  0612                     	;# 
  1471  0613                     	;# 
  1472  0614                     	;# 
  1473  0616                     	;# 
  1474  0617                     	;# 
  1475  0618                     	;# 
  1476  0619                     	;# 
  1477  061A                     	;# 
  1478  061B                     	;# 
  1479  061C                     	;# 
  1480  061D                     	;# 
  1481  061E                     	;# 
  1482  068C                     	;# 
  1483  068D                     	;# 
  1484  068E                     	;# 
  1485  068F                     	;# 
  1486  0690                     	;# 
  1487  0691                     	;# 
  1488  0692                     	;# 
  1489  0693                     	;# 
  1490  0694                     	;# 
  1491  070C                     	;# 
  1492  070D                     	;# 
  1493  070E                     	;# 
  1494  070F                     	;# 
  1495  0710                     	;# 
  1496  0711                     	;# 
  1497  0712                     	;# 
  1498  0713                     	;# 
  1499  0714                     	;# 
  1500  0716                     	;# 
  1501  0717                     	;# 
  1502  0718                     	;# 
  1503  0719                     	;# 
  1504  071A                     	;# 
  1505  071B                     	;# 
  1506  071C                     	;# 
  1507  071D                     	;# 
  1508  071E                     	;# 
  1509  0796                     	;# 
  1510  0797                     	;# 
  1511  0798                     	;# 
  1512  0799                     	;# 
  1513  079A                     	;# 
  1514  079B                     	;# 
  1515  080C                     	;# 
  1516  080D                     	;# 
  1517  080E                     	;# 
  1518  080F                     	;# 
  1519  0810                     	;# 
  1520  0811                     	;# 
  1521  0812                     	;# 
  1522  0813                     	;# 
  1523  0814                     	;# 
  1524  081A                     	;# 
  1525  081B                     	;# 
  1526  081C                     	;# 
  1527  081D                     	;# 
  1528  081E                     	;# 
  1529  081F                     	;# 
  1530  088C                     	;# 
  1531  088D                     	;# 
  1532  088E                     	;# 
  1533  088F                     	;# 
  1534  0890                     	;# 
  1535  0891                     	;# 
  1536  0892                     	;# 
  1537  0893                     	;# 
  1538  0895                     	;# 
  1539  0896                     	;# 
  1540  0897                     	;# 
  1541  0898                     	;# 
  1542  0899                     	;# 
  1543  089A                     	;# 
  1544  089B                     	;# 
  1545  090C                     	;# 
  1546  090E                     	;# 
  1547  090F                     	;# 
  1548  091F                     	;# 
  1549  091F                     	;# 
  1550  098F                     	;# 
  1551  098F                     	;# 
  1552  0990                     	;# 
  1553  0991                     	;# 
  1554  0992                     	;# 
  1555  0993                     	;# 
  1556  0994                     	;# 
  1557  0995                     	;# 
  1558  0996                     	;# 
  1559  0997                     	;# 
  1560  0E0F                     	;# 
  1561  0E10                     	;# 
  1562  0E11                     	;# 
  1563  0E12                     	;# 
  1564  0E13                     	;# 
  1565  0E14                     	;# 
  1566  0E15                     	;# 
  1567  0E16                     	;# 
  1568  0E17                     	;# 
  1569  0E18                     	;# 
  1570  0E19                     	;# 
  1571  0E1A                     	;# 
  1572  0E1B                     	;# 
  1573  0E1C                     	;# 
  1574  0E1D                     	;# 
  1575  0E1E                     	;# 
  1576  0E1F                     	;# 
  1577  0E20                     	;# 
  1578  0E21                     	;# 
  1579  0E22                     	;# 
  1580  0E23                     	;# 
  1581  0E24                     	;# 
  1582  0E25                     	;# 
  1583  0E26                     	;# 
  1584  0E27                     	;# 
  1585  0E28                     	;# 
  1586  0E29                     	;# 
  1587  0E2A                     	;# 
  1588  0E2B                     	;# 
  1589  0E2C                     	;# 
  1590  0E2D                     	;# 
  1591  0E2E                     	;# 
  1592  0E2F                     	;# 
  1593  0E30                     	;# 
  1594  0E31                     	;# 
  1595  0E32                     	;# 
  1596  0E33                     	;# 
  1597  0E34                     	;# 
  1598  0E35                     	;# 
  1599  0E36                     	;# 
  1600  0E37                     	;# 
  1601  0E8F                     	;# 
  1602  0E90                     	;# 
  1603  0E91                     	;# 
  1604  0E92                     	;# 
  1605  0E93                     	;# 
  1606  0E94                     	;# 
  1607  0E95                     	;# 
  1608  0E96                     	;# 
  1609  0E97                     	;# 
  1610  0E9C                     	;# 
  1611  0E9D                     	;# 
  1612  0E9E                     	;# 
  1613  0EA1                     	;# 
  1614  0EA2                     	;# 
  1615  0EA3                     	;# 
  1616  0EA4                     	;# 
  1617  0EA5                     	;# 
  1618  0EA9                     	;# 
  1619  0EAA                     	;# 
  1620  0EAB                     	;# 
  1621  0EAC                     	;# 
  1622  0EB1                     	;# 
  1623  0EB2                     	;# 
  1624  0EB3                     	;# 
  1625  0EB8                     	;# 
  1626  0EB9                     	;# 
  1627  0EBA                     	;# 
  1628  0EBB                     	;# 
  1629  0EBC                     	;# 
  1630  0EBD                     	;# 
  1631  0EBE                     	;# 
  1632  0EC3                     	;# 
  1633  0EC5                     	;# 
  1634  0EC6                     	;# 
  1635  0EC7                     	;# 
  1636  0EC8                     	;# 
  1637  0EC9                     	;# 
  1638  0ECA                     	;# 
  1639  0ECB                     	;# 
  1640  0ECC                     	;# 
  1641  0F10                     	;# 
  1642  0F11                     	;# 
  1643  0F12                     	;# 
  1644  0F13                     	;# 
  1645  0F14                     	;# 
  1646  0F15                     	;# 
  1647  0F16                     	;# 
  1648  0F17                     	;# 
  1649  0F18                     	;# 
  1650  0F19                     	;# 
  1651  0F1A                     	;# 
  1652  0F1B                     	;# 
  1653  0F1C                     	;# 
  1654  0F1D                     	;# 
  1655  0F1E                     	;# 
  1656  0F1F                     	;# 
  1657  0F20                     	;# 
  1658  0F21                     	;# 
  1659  0F22                     	;# 
  1660  0F23                     	;# 
  1661  0F24                     	;# 
  1662  0F25                     	;# 
  1663  0F26                     	;# 
  1664  0F27                     	;# 
  1665  0F28                     	;# 
  1666  0F29                     	;# 
  1667  0F2A                     	;# 
  1668  0F2B                     	;# 
  1669  0F2C                     	;# 
  1670  0F2D                     	;# 
  1671  0F2E                     	;# 
  1672  0F2F                     	;# 
  1673  0F30                     	;# 
  1674  0F31                     	;# 
  1675  0F32                     	;# 
  1676  0F38                     	;# 
  1677  0F39                     	;# 
  1678  0F3A                     	;# 
  1679  0F3B                     	;# 
  1680  0F3C                     	;# 
  1681  0F3D                     	;# 
  1682  0F3E                     	;# 
  1683  0F3F                     	;# 
  1684  0F40                     	;# 
  1685  0F41                     	;# 
  1686  0F43                     	;# 
  1687  0F44                     	;# 
  1688  0F45                     	;# 
  1689  0F46                     	;# 
  1690  0F47                     	;# 
  1691  0F48                     	;# 
  1692  0F49                     	;# 
  1693  0F4A                     	;# 
  1694  0F4B                     	;# 
  1695  0F4C                     	;# 
  1696  0F4E                     	;# 
  1697  0F4F                     	;# 
  1698  0F50                     	;# 
  1699  0F51                     	;# 
  1700  0F52                     	;# 
  1701  0F53                     	;# 
  1702  0F54                     	;# 
  1703  0F55                     	;# 
  1704  0F56                     	;# 
  1705  0F57                     	;# 
  1706  0F59                     	;# 
  1707  0F5A                     	;# 
  1708  0F5B                     	;# 
  1709  0F5C                     	;# 
  1710  0F5D                     	;# 
  1711  0F61                     	;# 
  1712  0F62                     	;# 
  1713  0F64                     	;# 
  1714  0F65                     	;# 
  1715  0F66                     	;# 
  1716  0F67                     	;# 
  1717  0F68                     	;# 
  1718  0F69                     	;# 
  1719  0F6A                     	;# 
  1720  0F6B                     	;# 
  1721  0F6C                     	;# 
  1722  0F6D                     	;# 
  1723  0FE4                     	;# 
  1724  0FE5                     	;# 
  1725  0FE6                     	;# 
  1726  0FE7                     	;# 
  1727  0FE8                     	;# 
  1728  0FE9                     	;# 
  1729  0FEA                     	;# 
  1730  0FEB                     	;# 
  1731  0FED                     	;# 
  1732  0FEE                     	;# 
  1733  0FEF                     	;# 
  1734  0000                     	;# 
  1735  0001                     	;# 
  1736  0002                     	;# 
  1737  0003                     	;# 
  1738  0004                     	;# 
  1739  0005                     	;# 
  1740  0006                     	;# 
  1741  0007                     	;# 
  1742  0008                     	;# 
  1743  0009                     	;# 
  1744  000A                     	;# 
  1745  000B                     	;# 
  1746  000C                     	;# 
  1747  000D                     	;# 
  1748  000E                     	;# 
  1749  000F                     	;# 
  1750  0010                     	;# 
  1751  0011                     	;# 
  1752  0012                     	;# 
  1753  0013                     	;# 
  1754  0014                     	;# 
  1755  0015                     	;# 
  1756  0016                     	;# 
  1757  0017                     	;# 
  1758  0018                     	;# 
  1759  0019                     	;# 
  1760  001A                     	;# 
  1761  001C                     	;# 
  1762  001C                     	;# 
  1763  001D                     	;# 
  1764  001D                     	;# 
  1765  001E                     	;# 
  1766  001F                     	;# 
  1767  008C                     	;# 
  1768  008C                     	;# 
  1769  008D                     	;# 
  1770  008E                     	;# 
  1771  008E                     	;# 
  1772  008F                     	;# 
  1773  0090                     	;# 
  1774  0090                     	;# 
  1775  0091                     	;# 
  1776  0093                     	;# 
  1777  0094                     	;# 
  1778  0095                     	;# 
  1779  0096                     	;# 
  1780  0097                     	;# 
  1781  0098                     	;# 
  1782  0099                     	;# 
  1783  009A                     	;# 
  1784  009B                     	;# 
  1785  009C                     	;# 
  1786  009D                     	;# 
  1787  009E                     	;# 
  1788  010C                     	;# 
  1789  010D                     	;# 
  1790  010E                     	;# 
  1791  010E                     	;# 
  1792  010F                     	;# 
  1793  0110                     	;# 
  1794  0110                     	;# 
  1795  0111                     	;# 
  1796  0112                     	;# 
  1797  0112                     	;# 
  1798  0113                     	;# 
  1799  0114                     	;# 
  1800  0114                     	;# 
  1801  0115                     	;# 
  1802  0116                     	;# 
  1803  0116                     	;# 
  1804  0117                     	;# 
  1805  0119                     	;# 
  1806  0119                     	;# 
  1807  0119                     	;# 
  1808  011A                     	;# 
  1809  011A                     	;# 
  1810  011A                     	;# 
  1811  011B                     	;# 
  1812  011B                     	;# 
  1813  011B                     	;# 
  1814  011B                     	;# 
  1815  011B                     	;# 
  1816  011C                     	;# 
  1817  011C                     	;# 
  1818  011C                     	;# 
  1819  011D                     	;# 
  1820  011D                     	;# 
  1821  011D                     	;# 
  1822  011E                     	;# 
  1823  011E                     	;# 
  1824  011E                     	;# 
  1825  011F                     	;# 
  1826  011F                     	;# 
  1827  011F                     	;# 
  1828  011F                     	;# 
  1829  011F                     	;# 
  1830  018C                     	;# 
  1831  018D                     	;# 
  1832  018E                     	;# 
  1833  018F                     	;# 
  1834  0190                     	;# 
  1835  0191                     	;# 
  1836  0192                     	;# 
  1837  0196                     	;# 
  1838  0197                     	;# 
  1839  0198                     	;# 
  1840  0199                     	;# 
  1841  019A                     	;# 
  1842  019B                     	;# 
  1843  019C                     	;# 
  1844  020C                     	;# 
  1845  020C                     	;# 
  1846  020D                     	;# 
  1847  020E                     	;# 
  1848  020F                     	;# 
  1849  020F                     	;# 
  1850  0210                     	;# 
  1851  0210                     	;# 
  1852  0211                     	;# 
  1853  0211                     	;# 
  1854  0212                     	;# 
  1855  0212                     	;# 
  1856  0213                     	;# 
  1857  0214                     	;# 
  1858  0215                     	;# 
  1859  0215                     	;# 
  1860  0216                     	;# 
  1861  0216                     	;# 
  1862  0217                     	;# 
  1863  0217                     	;# 
  1864  0218                     	;# 
  1865  0218                     	;# 
  1866  0219                     	;# 
  1867  021A                     	;# 
  1868  021B                     	;# 
  1869  021B                     	;# 
  1870  021C                     	;# 
  1871  021C                     	;# 
  1872  021D                     	;# 
  1873  021D                     	;# 
  1874  021E                     	;# 
  1875  021F                     	;# 
  1876  028C                     	;# 
  1877  028C                     	;# 
  1878  028D                     	;# 
  1879  028D                     	;# 
  1880  028E                     	;# 
  1881  028F                     	;# 
  1882  0290                     	;# 
  1883  0290                     	;# 
  1884  0291                     	;# 
  1885  0292                     	;# 
  1886  0292                     	;# 
  1887  0293                     	;# 
  1888  0293                     	;# 
  1889  0294                     	;# 
  1890  0295                     	;# 
  1891  0296                     	;# 
  1892  0296                     	;# 
  1893  0297                     	;# 
  1894  0298                     	;# 
  1895  0298                     	;# 
  1896  0299                     	;# 
  1897  0299                     	;# 
  1898  029A                     	;# 
  1899  029B                     	;# 
  1900  029C                     	;# 
  1901  029C                     	;# 
  1902  029D                     	;# 
  1903  030C                     	;# 
  1904  030C                     	;# 
  1905  030D                     	;# 
  1906  030E                     	;# 
  1907  030F                     	;# 
  1908  0310                     	;# 
  1909  0310                     	;# 
  1910  0311                     	;# 
  1911  0312                     	;# 
  1912  0313                     	;# 
  1913  0314                     	;# 
  1914  0314                     	;# 
  1915  0315                     	;# 
  1916  0316                     	;# 
  1917  0317                     	;# 
  1918  0318                     	;# 
  1919  0318                     	;# 
  1920  0319                     	;# 
  1921  031A                     	;# 
  1922  031B                     	;# 
  1923  031C                     	;# 
  1924  031C                     	;# 
  1925  031D                     	;# 
  1926  031E                     	;# 
  1927  031F                     	;# 
  1928  038C                     	;# 
  1929  038D                     	;# 
  1930  038E                     	;# 
  1931  0390                     	;# 
  1932  0391                     	;# 
  1933  0392                     	;# 
  1934  040C                     	;# 
  1935  040D                     	;# 
  1936  040E                     	;# 
  1937  040F                     	;# 
  1938  0410                     	;# 
  1939  0411                     	;# 
  1940  0416                     	;# 
  1941  0416                     	;# 
  1942  0417                     	;# 
  1943  0418                     	;# 
  1944  0418                     	;# 
  1945  0419                     	;# 
  1946  041A                     	;# 
  1947  041A                     	;# 
  1948  041B                     	;# 
  1949  041C                     	;# 
  1950  041C                     	;# 
  1951  041D                     	;# 
  1952  041E                     	;# 
  1953  041F                     	;# 
  1954  048C                     	;# 
  1955  048C                     	;# 
  1956  048D                     	;# 
  1957  048E                     	;# 
  1958  048F                     	;# 
  1959  048F                     	;# 
  1960  0490                     	;# 
  1961  0491                     	;# 
  1962  0492                     	;# 
  1963  0492                     	;# 
  1964  0493                     	;# 
  1965  0494                     	;# 
  1966  0495                     	;# 
  1967  0495                     	;# 
  1968  0496                     	;# 
  1969  0497                     	;# 
  1970  0498                     	;# 
  1971  0499                     	;# 
  1972  049A                     	;# 
  1973  049B                     	;# 
  1974  049C                     	;# 
  1975  049D                     	;# 
  1976  050C                     	;# 
  1977  050C                     	;# 
  1978  050D                     	;# 
  1979  050E                     	;# 
  1980  050F                     	;# 
  1981  050F                     	;# 
  1982  0510                     	;# 
  1983  0511                     	;# 
  1984  0512                     	;# 
  1985  0512                     	;# 
  1986  0513                     	;# 
  1987  0514                     	;# 
  1988  0515                     	;# 
  1989  0515                     	;# 
  1990  0516                     	;# 
  1991  0517                     	;# 
  1992  0518                     	;# 
  1993  0519                     	;# 
  1994  051A                     	;# 
  1995  051B                     	;# 
  1996  051C                     	;# 
  1997  051D                     	;# 
  1998  058C                     	;# 
  1999  058C                     	;# 
  2000  058D                     	;# 
  2001  058E                     	;# 
  2002  058F                     	;# 
  2003  058F                     	;# 
  2004  0590                     	;# 
  2005  0591                     	;# 
  2006  0592                     	;# 
  2007  0593                     	;# 
  2008  060C                     	;# 
  2009  060D                     	;# 
  2010  060E                     	;# 
  2011  060F                     	;# 
  2012  0610                     	;# 
  2013  0611                     	;# 
  2014  0612                     	;# 
  2015  0613                     	;# 
  2016  0614                     	;# 
  2017  0616                     	;# 
  2018  0617                     	;# 
  2019  0618                     	;# 
  2020  0619                     	;# 
  2021  061A                     	;# 
  2022  061B                     	;# 
  2023  061C                     	;# 
  2024  061D                     	;# 
  2025  061E                     	;# 
  2026  068C                     	;# 
  2027  068D                     	;# 
  2028  068E                     	;# 
  2029  068F                     	;# 
  2030  0690                     	;# 
  2031  0691                     	;# 
  2032  0692                     	;# 
  2033  0693                     	;# 
  2034  0694                     	;# 
  2035  070C                     	;# 
  2036  070D                     	;# 
  2037  070E                     	;# 
  2038  070F                     	;# 
  2039  0710                     	;# 
  2040  0711                     	;# 
  2041  0712                     	;# 
  2042  0713                     	;# 
  2043  0714                     	;# 
  2044  0716                     	;# 
  2045  0717                     	;# 
  2046  0718                     	;# 
  2047  0719                     	;# 
  2048  071A                     	;# 
  2049  071B                     	;# 
  2050  071C                     	;# 
  2051  071D                     	;# 
  2052  071E                     	;# 
  2053  0796                     	;# 
  2054  0797                     	;# 
  2055  0798                     	;# 
  2056  0799                     	;# 
  2057  079A                     	;# 
  2058  079B                     	;# 
  2059  080C                     	;# 
  2060  080D                     	;# 
  2061  080E                     	;# 
  2062  080F                     	;# 
  2063  0810                     	;# 
  2064  0811                     	;# 
  2065  0812                     	;# 
  2066  0813                     	;# 
  2067  0814                     	;# 
  2068  081A                     	;# 
  2069  081B                     	;# 
  2070  081C                     	;# 
  2071  081D                     	;# 
  2072  081E                     	;# 
  2073  081F                     	;# 
  2074  088C                     	;# 
  2075  088D                     	;# 
  2076  088E                     	;# 
  2077  088F                     	;# 
  2078  0890                     	;# 
  2079  0891                     	;# 
  2080  0892                     	;# 
  2081  0893                     	;# 
  2082  0895                     	;# 
  2083  0896                     	;# 
  2084  0897                     	;# 
  2085  0898                     	;# 
  2086  0899                     	;# 
  2087  089A                     	;# 
  2088  089B                     	;# 
  2089  090C                     	;# 
  2090  090E                     	;# 
  2091  090F                     	;# 
  2092  091F                     	;# 
  2093  091F                     	;# 
  2094  098F                     	;# 
  2095  098F                     	;# 
  2096  0990                     	;# 
  2097  0991                     	;# 
  2098  0992                     	;# 
  2099  0993                     	;# 
  2100  0994                     	;# 
  2101  0995                     	;# 
  2102  0996                     	;# 
  2103  0997                     	;# 
  2104  0E0F                     	;# 
  2105  0E10                     	;# 
  2106  0E11                     	;# 
  2107  0E12                     	;# 
  2108  0E13                     	;# 
  2109  0E14                     	;# 
  2110  0E15                     	;# 
  2111  0E16                     	;# 
  2112  0E17                     	;# 
  2113  0E18                     	;# 
  2114  0E19                     	;# 
  2115  0E1A                     	;# 
  2116  0E1B                     	;# 
  2117  0E1C                     	;# 
  2118  0E1D                     	;# 
  2119  0E1E                     	;# 
  2120  0E1F                     	;# 
  2121  0E20                     	;# 
  2122  0E21                     	;# 
  2123  0E22                     	;# 
  2124  0E23                     	;# 
  2125  0E24                     	;# 
  2126  0E25                     	;# 
  2127  0E26                     	;# 
  2128  0E27                     	;# 
  2129  0E28                     	;# 
  2130  0E29                     	;# 
  2131  0E2A                     	;# 
  2132  0E2B                     	;# 
  2133  0E2C                     	;# 
  2134  0E2D                     	;# 
  2135  0E2E                     	;# 
  2136  0E2F                     	;# 
  2137  0E30                     	;# 
  2138  0E31                     	;# 
  2139  0E32                     	;# 
  2140  0E33                     	;# 
  2141  0E34                     	;# 
  2142  0E35                     	;# 
  2143  0E36                     	;# 
  2144  0E37                     	;# 
  2145  0E8F                     	;# 
  2146  0E90                     	;# 
  2147  0E91                     	;# 
  2148  0E92                     	;# 
  2149  0E93                     	;# 
  2150  0E94                     	;# 
  2151  0E95                     	;# 
  2152  0E96                     	;# 
  2153  0E97                     	;# 
  2154  0E9C                     	;# 
  2155  0E9D                     	;# 
  2156  0E9E                     	;# 
  2157  0EA1                     	;# 
  2158  0EA2                     	;# 
  2159  0EA3                     	;# 
  2160  0EA4                     	;# 
  2161  0EA5                     	;# 
  2162  0EA9                     	;# 
  2163  0EAA                     	;# 
  2164  0EAB                     	;# 
  2165  0EAC                     	;# 
  2166  0EB1                     	;# 
  2167  0EB2                     	;# 
  2168  0EB3                     	;# 
  2169  0EB8                     	;# 
  2170  0EB9                     	;# 
  2171  0EBA                     	;# 
  2172  0EBB                     	;# 
  2173  0EBC                     	;# 
  2174  0EBD                     	;# 
  2175  0EBE                     	;# 
  2176  0EC3                     	;# 
  2177  0EC5                     	;# 
  2178  0EC6                     	;# 
  2179  0EC7                     	;# 
  2180  0EC8                     	;# 
  2181  0EC9                     	;# 
  2182  0ECA                     	;# 
  2183  0ECB                     	;# 
  2184  0ECC                     	;# 
  2185  0F10                     	;# 
  2186  0F11                     	;# 
  2187  0F12                     	;# 
  2188  0F13                     	;# 
  2189  0F14                     	;# 
  2190  0F15                     	;# 
  2191  0F16                     	;# 
  2192  0F17                     	;# 
  2193  0F18                     	;# 
  2194  0F19                     	;# 
  2195  0F1A                     	;# 
  2196  0F1B                     	;# 
  2197  0F1C                     	;# 
  2198  0F1D                     	;# 
  2199  0F1E                     	;# 
  2200  0F1F                     	;# 
  2201  0F20                     	;# 
  2202  0F21                     	;# 
  2203  0F22                     	;# 
  2204  0F23                     	;# 
  2205  0F24                     	;# 
  2206  0F25                     	;# 
  2207  0F26                     	;# 
  2208  0F27                     	;# 
  2209  0F28                     	;# 
  2210  0F29                     	;# 
  2211  0F2A                     	;# 
  2212  0F2B                     	;# 
  2213  0F2C                     	;# 
  2214  0F2D                     	;# 
  2215  0F2E                     	;# 
  2216  0F2F                     	;# 
  2217  0F30                     	;# 
  2218  0F31                     	;# 
  2219  0F32                     	;# 
  2220  0F38                     	;# 
  2221  0F39                     	;# 
  2222  0F3A                     	;# 
  2223  0F3B                     	;# 
  2224  0F3C                     	;# 
  2225  0F3D                     	;# 
  2226  0F3E                     	;# 
  2227  0F3F                     	;# 
  2228  0F40                     	;# 
  2229  0F41                     	;# 
  2230  0F43                     	;# 
  2231  0F44                     	;# 
  2232  0F45                     	;# 
  2233  0F46                     	;# 
  2234  0F47                     	;# 
  2235  0F48                     	;# 
  2236  0F49                     	;# 
  2237  0F4A                     	;# 
  2238  0F4B                     	;# 
  2239  0F4C                     	;# 
  2240  0F4E                     	;# 
  2241  0F4F                     	;# 
  2242  0F50                     	;# 
  2243  0F51                     	;# 
  2244  0F52                     	;# 
  2245  0F53                     	;# 
  2246  0F54                     	;# 
  2247  0F55                     	;# 
  2248  0F56                     	;# 
  2249  0F57                     	;# 
  2250  0F59                     	;# 
  2251  0F5A                     	;# 
  2252  0F5B                     	;# 
  2253  0F5C                     	;# 
  2254  0F5D                     	;# 
  2255  0F61                     	;# 
  2256  0F62                     	;# 
  2257  0F64                     	;# 
  2258  0F65                     	;# 
  2259  0F66                     	;# 
  2260  0F67                     	;# 
  2261  0F68                     	;# 
  2262  0F69                     	;# 
  2263  0F6A                     	;# 
  2264  0F6B                     	;# 
  2265  0F6C                     	;# 
  2266  0F6D                     	;# 
  2267  0FE4                     	;# 
  2268  0FE5                     	;# 
  2269  0FE6                     	;# 
  2270  0FE7                     	;# 
  2271  0FE8                     	;# 
  2272  0FE9                     	;# 
  2273  0FEA                     	;# 
  2274  0FEB                     	;# 
  2275  0FED                     	;# 
  2276  0FEE                     	;# 
  2277  0FEF                     	;# 
  2278  0000                     	;# 
  2279  0001                     	;# 
  2280  0002                     	;# 
  2281  0003                     	;# 
  2282  0004                     	;# 
  2283  0005                     	;# 
  2284  0006                     	;# 
  2285  0007                     	;# 
  2286  0008                     	;# 
  2287  0009                     	;# 
  2288  000A                     	;# 
  2289  000B                     	;# 
  2290  000C                     	;# 
  2291  000D                     	;# 
  2292  000E                     	;# 
  2293  000F                     	;# 
  2294  0010                     	;# 
  2295  0011                     	;# 
  2296  0012                     	;# 
  2297  0013                     	;# 
  2298  0014                     	;# 
  2299  0015                     	;# 
  2300  0016                     	;# 
  2301  0017                     	;# 
  2302  0018                     	;# 
  2303  0019                     	;# 
  2304  001A                     	;# 
  2305  001C                     	;# 
  2306  001C                     	;# 
  2307  001D                     	;# 
  2308  001D                     	;# 
  2309  001E                     	;# 
  2310  001F                     	;# 
  2311  008C                     	;# 
  2312  008C                     	;# 
  2313  008D                     	;# 
  2314  008E                     	;# 
  2315  008E                     	;# 
  2316  008F                     	;# 
  2317  0090                     	;# 
  2318  0090                     	;# 
  2319  0091                     	;# 
  2320  0093                     	;# 
  2321  0094                     	;# 
  2322  0095                     	;# 
  2323  0096                     	;# 
  2324  0097                     	;# 
  2325  0098                     	;# 
  2326  0099                     	;# 
  2327  009A                     	;# 
  2328  009B                     	;# 
  2329  009C                     	;# 
  2330  009D                     	;# 
  2331  009E                     	;# 
  2332  010C                     	;# 
  2333  010D                     	;# 
  2334  010E                     	;# 
  2335  010E                     	;# 
  2336  010F                     	;# 
  2337  0110                     	;# 
  2338  0110                     	;# 
  2339  0111                     	;# 
  2340  0112                     	;# 
  2341  0112                     	;# 
  2342  0113                     	;# 
  2343  0114                     	;# 
  2344  0114                     	;# 
  2345  0115                     	;# 
  2346  0116                     	;# 
  2347  0116                     	;# 
  2348  0117                     	;# 
  2349  0119                     	;# 
  2350  0119                     	;# 
  2351  0119                     	;# 
  2352  011A                     	;# 
  2353  011A                     	;# 
  2354  011A                     	;# 
  2355  011B                     	;# 
  2356  011B                     	;# 
  2357  011B                     	;# 
  2358  011B                     	;# 
  2359  011B                     	;# 
  2360  011C                     	;# 
  2361  011C                     	;# 
  2362  011C                     	;# 
  2363  011D                     	;# 
  2364  011D                     	;# 
  2365  011D                     	;# 
  2366  011E                     	;# 
  2367  011E                     	;# 
  2368  011E                     	;# 
  2369  011F                     	;# 
  2370  011F                     	;# 
  2371  011F                     	;# 
  2372  011F                     	;# 
  2373  011F                     	;# 
  2374  018C                     	;# 
  2375  018D                     	;# 
  2376  018E                     	;# 
  2377  018F                     	;# 
  2378  0190                     	;# 
  2379  0191                     	;# 
  2380  0192                     	;# 
  2381  0196                     	;# 
  2382  0197                     	;# 
  2383  0198                     	;# 
  2384  0199                     	;# 
  2385  019A                     	;# 
  2386  019B                     	;# 
  2387  019C                     	;# 
  2388  020C                     	;# 
  2389  020C                     	;# 
  2390  020D                     	;# 
  2391  020E                     	;# 
  2392  020F                     	;# 
  2393  020F                     	;# 
  2394  0210                     	;# 
  2395  0210                     	;# 
  2396  0211                     	;# 
  2397  0211                     	;# 
  2398  0212                     	;# 
  2399  0212                     	;# 
  2400  0213                     	;# 
  2401  0214                     	;# 
  2402  0215                     	;# 
  2403  0215                     	;# 
  2404  0216                     	;# 
  2405  0216                     	;# 
  2406  0217                     	;# 
  2407  0217                     	;# 
  2408  0218                     	;# 
  2409  0218                     	;# 
  2410  0219                     	;# 
  2411  021A                     	;# 
  2412  021B                     	;# 
  2413  021B                     	;# 
  2414  021C                     	;# 
  2415  021C                     	;# 
  2416  021D                     	;# 
  2417  021D                     	;# 
  2418  021E                     	;# 
  2419  021F                     	;# 
  2420  028C                     	;# 
  2421  028C                     	;# 
  2422  028D                     	;# 
  2423  028D                     	;# 
  2424  028E                     	;# 
  2425  028F                     	;# 
  2426  0290                     	;# 
  2427  0290                     	;# 
  2428  0291                     	;# 
  2429  0292                     	;# 
  2430  0292                     	;# 
  2431  0293                     	;# 
  2432  0293                     	;# 
  2433  0294                     	;# 
  2434  0295                     	;# 
  2435  0296                     	;# 
  2436  0296                     	;# 
  2437  0297                     	;# 
  2438  0298                     	;# 
  2439  0298                     	;# 
  2440  0299                     	;# 
  2441  0299                     	;# 
  2442  029A                     	;# 
  2443  029B                     	;# 
  2444  029C                     	;# 
  2445  029C                     	;# 
  2446  029D                     	;# 
  2447  030C                     	;# 
  2448  030C                     	;# 
  2449  030D                     	;# 
  2450  030E                     	;# 
  2451  030F                     	;# 
  2452  0310                     	;# 
  2453  0310                     	;# 
  2454  0311                     	;# 
  2455  0312                     	;# 
  2456  0313                     	;# 
  2457  0314                     	;# 
  2458  0314                     	;# 
  2459  0315                     	;# 
  2460  0316                     	;# 
  2461  0317                     	;# 
  2462  0318                     	;# 
  2463  0318                     	;# 
  2464  0319                     	;# 
  2465  031A                     	;# 
  2466  031B                     	;# 
  2467  031C                     	;# 
  2468  031C                     	;# 
  2469  031D                     	;# 
  2470  031E                     	;# 
  2471  031F                     	;# 
  2472  038C                     	;# 
  2473  038D                     	;# 
  2474  038E                     	;# 
  2475  0390                     	;# 
  2476  0391                     	;# 
  2477  0392                     	;# 
  2478  040C                     	;# 
  2479  040D                     	;# 
  2480  040E                     	;# 
  2481  040F                     	;# 
  2482  0410                     	;# 
  2483  0411                     	;# 
  2484  0416                     	;# 
  2485  0416                     	;# 
  2486  0417                     	;# 
  2487  0418                     	;# 
  2488  0418                     	;# 
  2489  0419                     	;# 
  2490  041A                     	;# 
  2491  041A                     	;# 
  2492  041B                     	;# 
  2493  041C                     	;# 
  2494  041C                     	;# 
  2495  041D                     	;# 
  2496  041E                     	;# 
  2497  041F                     	;# 
  2498  048C                     	;# 
  2499  048C                     	;# 
  2500  048D                     	;# 
  2501  048E                     	;# 
  2502  048F                     	;# 
  2503  048F                     	;# 
  2504  0490                     	;# 
  2505  0491                     	;# 
  2506  0492                     	;# 
  2507  0492                     	;# 
  2508  0493                     	;# 
  2509  0494                     	;# 
  2510  0495                     	;# 
  2511  0495                     	;# 
  2512  0496                     	;# 
  2513  0497                     	;# 
  2514  0498                     	;# 
  2515  0499                     	;# 
  2516  049A                     	;# 
  2517  049B                     	;# 
  2518  049C                     	;# 
  2519  049D                     	;# 
  2520  050C                     	;# 
  2521  050C                     	;# 
  2522  050D                     	;# 
  2523  050E                     	;# 
  2524  050F                     	;# 
  2525  050F                     	;# 
  2526  0510                     	;# 
  2527  0511                     	;# 
  2528  0512                     	;# 
  2529  0512                     	;# 
  2530  0513                     	;# 
  2531  0514                     	;# 
  2532  0515                     	;# 
  2533  0515                     	;# 
  2534  0516                     	;# 
  2535  0517                     	;# 
  2536  0518                     	;# 
  2537  0519                     	;# 
  2538  051A                     	;# 
  2539  051B                     	;# 
  2540  051C                     	;# 
  2541  051D                     	;# 
  2542  058C                     	;# 
  2543  058C                     	;# 
  2544  058D                     	;# 
  2545  058E                     	;# 
  2546  058F                     	;# 
  2547  058F                     	;# 
  2548  0590                     	;# 
  2549  0591                     	;# 
  2550  0592                     	;# 
  2551  0593                     	;# 
  2552  060C                     	;# 
  2553  060D                     	;# 
  2554  060E                     	;# 
  2555  060F                     	;# 
  2556  0610                     	;# 
  2557  0611                     	;# 
  2558  0612                     	;# 
  2559  0613                     	;# 
  2560  0614                     	;# 
  2561  0616                     	;# 
  2562  0617                     	;# 
  2563  0618                     	;# 
  2564  0619                     	;# 
  2565  061A                     	;# 
  2566  061B                     	;# 
  2567  061C                     	;# 
  2568  061D                     	;# 
  2569  061E                     	;# 
  2570  068C                     	;# 
  2571  068D                     	;# 
  2572  068E                     	;# 
  2573  068F                     	;# 
  2574  0690                     	;# 
  2575  0691                     	;# 
  2576  0692                     	;# 
  2577  0693                     	;# 
  2578  0694                     	;# 
  2579  070C                     	;# 
  2580  070D                     	;# 
  2581  070E                     	;# 
  2582  070F                     	;# 
  2583  0710                     	;# 
  2584  0711                     	;# 
  2585  0712                     	;# 
  2586  0713                     	;# 
  2587  0714                     	;# 
  2588  0716                     	;# 
  2589  0717                     	;# 
  2590  0718                     	;# 
  2591  0719                     	;# 
  2592  071A                     	;# 
  2593  071B                     	;# 
  2594  071C                     	;# 
  2595  071D                     	;# 
  2596  071E                     	;# 
  2597  0796                     	;# 
  2598  0797                     	;# 
  2599  0798                     	;# 
  2600  0799                     	;# 
  2601  079A                     	;# 
  2602  079B                     	;# 
  2603  080C                     	;# 
  2604  080D                     	;# 
  2605  080E                     	;# 
  2606  080F                     	;# 
  2607  0810                     	;# 
  2608  0811                     	;# 
  2609  0812                     	;# 
  2610  0813                     	;# 
  2611  0814                     	;# 
  2612  081A                     	;# 
  2613  081B                     	;# 
  2614  081C                     	;# 
  2615  081D                     	;# 
  2616  081E                     	;# 
  2617  081F                     	;# 
  2618  088C                     	;# 
  2619  088D                     	;# 
  2620  088E                     	;# 
  2621  088F                     	;# 
  2622  0890                     	;# 
  2623  0891                     	;# 
  2624  0892                     	;# 
  2625  0893                     	;# 
  2626  0895                     	;# 
  2627  0896                     	;# 
  2628  0897                     	;# 
  2629  0898                     	;# 
  2630  0899                     	;# 
  2631  089A                     	;# 
  2632  089B                     	;# 
  2633  090C                     	;# 
  2634  090E                     	;# 
  2635  090F                     	;# 
  2636  091F                     	;# 
  2637  091F                     	;# 
  2638  098F                     	;# 
  2639  098F                     	;# 
  2640  0990                     	;# 
  2641  0991                     	;# 
  2642  0992                     	;# 
  2643  0993                     	;# 
  2644  0994                     	;# 
  2645  0995                     	;# 
  2646  0996                     	;# 
  2647  0997                     	;# 
  2648  0E0F                     	;# 
  2649  0E10                     	;# 
  2650  0E11                     	;# 
  2651  0E12                     	;# 
  2652  0E13                     	;# 
  2653  0E14                     	;# 
  2654  0E15                     	;# 
  2655  0E16                     	;# 
  2656  0E17                     	;# 
  2657  0E18                     	;# 
  2658  0E19                     	;# 
  2659  0E1A                     	;# 
  2660  0E1B                     	;# 
  2661  0E1C                     	;# 
  2662  0E1D                     	;# 
  2663  0E1E                     	;# 
  2664  0E1F                     	;# 
  2665  0E20                     	;# 
  2666  0E21                     	;# 
  2667  0E22                     	;# 
  2668  0E23                     	;# 
  2669  0E24                     	;# 
  2670  0E25                     	;# 
  2671  0E26                     	;# 
  2672  0E27                     	;# 
  2673  0E28                     	;# 
  2674  0E29                     	;# 
  2675  0E2A                     	;# 
  2676  0E2B                     	;# 
  2677  0E2C                     	;# 
  2678  0E2D                     	;# 
  2679  0E2E                     	;# 
  2680  0E2F                     	;# 
  2681  0E30                     	;# 
  2682  0E31                     	;# 
  2683  0E32                     	;# 
  2684  0E33                     	;# 
  2685  0E34                     	;# 
  2686  0E35                     	;# 
  2687  0E36                     	;# 
  2688  0E37                     	;# 
  2689  0E8F                     	;# 
  2690  0E90                     	;# 
  2691  0E91                     	;# 
  2692  0E92                     	;# 
  2693  0E93                     	;# 
  2694  0E94                     	;# 
  2695  0E95                     	;# 
  2696  0E96                     	;# 
  2697  0E97                     	;# 
  2698  0E9C                     	;# 
  2699  0E9D                     	;# 
  2700  0E9E                     	;# 
  2701  0EA1                     	;# 
  2702  0EA2                     	;# 
  2703  0EA3                     	;# 
  2704  0EA4                     	;# 
  2705  0EA5                     	;# 
  2706  0EA9                     	;# 
  2707  0EAA                     	;# 
  2708  0EAB                     	;# 
  2709  0EAC                     	;# 
  2710  0EB1                     	;# 
  2711  0EB2                     	;# 
  2712  0EB3                     	;# 
  2713  0EB8                     	;# 
  2714  0EB9                     	;# 
  2715  0EBA                     	;# 
  2716  0EBB                     	;# 
  2717  0EBC                     	;# 
  2718  0EBD                     	;# 
  2719  0EBE                     	;# 
  2720  0EC3                     	;# 
  2721  0EC5                     	;# 
  2722  0EC6                     	;# 
  2723  0EC7                     	;# 
  2724  0EC8                     	;# 
  2725  0EC9                     	;# 
  2726  0ECA                     	;# 
  2727  0ECB                     	;# 
  2728  0ECC                     	;# 
  2729  0F10                     	;# 
  2730  0F11                     	;# 
  2731  0F12                     	;# 
  2732  0F13                     	;# 
  2733  0F14                     	;# 
  2734  0F15                     	;# 
  2735  0F16                     	;# 
  2736  0F17                     	;# 
  2737  0F18                     	;# 
  2738  0F19                     	;# 
  2739  0F1A                     	;# 
  2740  0F1B                     	;# 
  2741  0F1C                     	;# 
  2742  0F1D                     	;# 
  2743  0F1E                     	;# 
  2744  0F1F                     	;# 
  2745  0F20                     	;# 
  2746  0F21                     	;# 
  2747  0F22                     	;# 
  2748  0F23                     	;# 
  2749  0F24                     	;# 
  2750  0F25                     	;# 
  2751  0F26                     	;# 
  2752  0F27                     	;# 
  2753  0F28                     	;# 
  2754  0F29                     	;# 
  2755  0F2A                     	;# 
  2756  0F2B                     	;# 
  2757  0F2C                     	;# 
  2758  0F2D                     	;# 
  2759  0F2E                     	;# 
  2760  0F2F                     	;# 
  2761  0F30                     	;# 
  2762  0F31                     	;# 
  2763  0F32                     	;# 
  2764  0F38                     	;# 
  2765  0F39                     	;# 
  2766  0F3A                     	;# 
  2767  0F3B                     	;# 
  2768  0F3C                     	;# 
  2769  0F3D                     	;# 
  2770  0F3E                     	;# 
  2771  0F3F                     	;# 
  2772  0F40                     	;# 
  2773  0F41                     	;# 
  2774  0F43                     	;# 
  2775  0F44                     	;# 
  2776  0F45                     	;# 
  2777  0F46                     	;# 
  2778  0F47                     	;# 
  2779  0F48                     	;# 
  2780  0F49                     	;# 
  2781  0F4A                     	;# 
  2782  0F4B                     	;# 
  2783  0F4C                     	;# 
  2784  0F4E                     	;# 
  2785  0F4F                     	;# 
  2786  0F50                     	;# 
  2787  0F51                     	;# 
  2788  0F52                     	;# 
  2789  0F53                     	;# 
  2790  0F54                     	;# 
  2791  0F55                     	;# 
  2792  0F56                     	;# 
  2793  0F57                     	;# 
  2794  0F59                     	;# 
  2795  0F5A                     	;# 
  2796  0F5B                     	;# 
  2797  0F5C                     	;# 
  2798  0F5D                     	;# 
  2799  0F61                     	;# 
  2800  0F62                     	;# 
  2801  0F64                     	;# 
  2802  0F65                     	;# 
  2803  0F66                     	;# 
  2804  0F67                     	;# 
  2805  0F68                     	;# 
  2806  0F69                     	;# 
  2807  0F6A                     	;# 
  2808  0F6B                     	;# 
  2809  0F6C                     	;# 
  2810  0F6D                     	;# 
  2811  0FE4                     	;# 
  2812  0FE5                     	;# 
  2813  0FE6                     	;# 
  2814  0FE7                     	;# 
  2815  0FE8                     	;# 
  2816  0FE9                     	;# 
  2817  0FEA                     	;# 
  2818  0FEB                     	;# 
  2819  0FED                     	;# 
  2820  0FEE                     	;# 
  2821  0FEF                     	;# 
  2822  0000                     	;# 
  2823  0001                     	;# 
  2824  0002                     	;# 
  2825  0003                     	;# 
  2826  0004                     	;# 
  2827  0005                     	;# 
  2828  0006                     	;# 
  2829  0007                     	;# 
  2830  0008                     	;# 
  2831  0009                     	;# 
  2832  000A                     	;# 
  2833  000B                     	;# 
  2834  000C                     	;# 
  2835  000D                     	;# 
  2836  000E                     	;# 
  2837  000F                     	;# 
  2838  0010                     	;# 
  2839  0011                     	;# 
  2840  0012                     	;# 
  2841  0013                     	;# 
  2842  0014                     	;# 
  2843  0015                     	;# 
  2844  0016                     	;# 
  2845  0017                     	;# 
  2846  0018                     	;# 
  2847  0019                     	;# 
  2848  001A                     	;# 
  2849  001C                     	;# 
  2850  001C                     	;# 
  2851  001D                     	;# 
  2852  001D                     	;# 
  2853  001E                     	;# 
  2854  001F                     	;# 
  2855  008C                     	;# 
  2856  008C                     	;# 
  2857  008D                     	;# 
  2858  008E                     	;# 
  2859  008E                     	;# 
  2860  008F                     	;# 
  2861  0090                     	;# 
  2862  0090                     	;# 
  2863  0091                     	;# 
  2864  0093                     	;# 
  2865  0094                     	;# 
  2866  0095                     	;# 
  2867  0096                     	;# 
  2868  0097                     	;# 
  2869  0098                     	;# 
  2870  0099                     	;# 
  2871  009A                     	;# 
  2872  009B                     	;# 
  2873  009C                     	;# 
  2874  009D                     	;# 
  2875  009E                     	;# 
  2876  010C                     	;# 
  2877  010D                     	;# 
  2878  010E                     	;# 
  2879  010E                     	;# 
  2880  010F                     	;# 
  2881  0110                     	;# 
  2882  0110                     	;# 
  2883  0111                     	;# 
  2884  0112                     	;# 
  2885  0112                     	;# 
  2886  0113                     	;# 
  2887  0114                     	;# 
  2888  0114                     	;# 
  2889  0115                     	;# 
  2890  0116                     	;# 
  2891  0116                     	;# 
  2892  0117                     	;# 
  2893  0119                     	;# 
  2894  0119                     	;# 
  2895  0119                     	;# 
  2896  011A                     	;# 
  2897  011A                     	;# 
  2898  011A                     	;# 
  2899  011B                     	;# 
  2900  011B                     	;# 
  2901  011B                     	;# 
  2902  011B                     	;# 
  2903  011B                     	;# 
  2904  011C                     	;# 
  2905  011C                     	;# 
  2906  011C                     	;# 
  2907  011D                     	;# 
  2908  011D                     	;# 
  2909  011D                     	;# 
  2910  011E                     	;# 
  2911  011E                     	;# 
  2912  011E                     	;# 
  2913  011F                     	;# 
  2914  011F                     	;# 
  2915  011F                     	;# 
  2916  011F                     	;# 
  2917  011F                     	;# 
  2918  018C                     	;# 
  2919  018D                     	;# 
  2920  018E                     	;# 
  2921  018F                     	;# 
  2922  0190                     	;# 
  2923  0191                     	;# 
  2924  0192                     	;# 
  2925  0196                     	;# 
  2926  0197                     	;# 
  2927  0198                     	;# 
  2928  0199                     	;# 
  2929  019A                     	;# 
  2930  019B                     	;# 
  2931  019C                     	;# 
  2932  020C                     	;# 
  2933  020C                     	;# 
  2934  020D                     	;# 
  2935  020E                     	;# 
  2936  020F                     	;# 
  2937  020F                     	;# 
  2938  0210                     	;# 
  2939  0210                     	;# 
  2940  0211                     	;# 
  2941  0211                     	;# 
  2942  0212                     	;# 
  2943  0212                     	;# 
  2944  0213                     	;# 
  2945  0214                     	;# 
  2946  0215                     	;# 
  2947  0215                     	;# 
  2948  0216                     	;# 
  2949  0216                     	;# 
  2950  0217                     	;# 
  2951  0217                     	;# 
  2952  0218                     	;# 
  2953  0218                     	;# 
  2954  0219                     	;# 
  2955  021A                     	;# 
  2956  021B                     	;# 
  2957  021B                     	;# 
  2958  021C                     	;# 
  2959  021C                     	;# 
  2960  021D                     	;# 
  2961  021D                     	;# 
  2962  021E                     	;# 
  2963  021F                     	;# 
  2964  028C                     	;# 
  2965  028C                     	;# 
  2966  028D                     	;# 
  2967  028D                     	;# 
  2968  028E                     	;# 
  2969  028F                     	;# 
  2970  0290                     	;# 
  2971  0290                     	;# 
  2972  0291                     	;# 
  2973  0292                     	;# 
  2974  0292                     	;# 
  2975  0293                     	;# 
  2976  0293                     	;# 
  2977  0294                     	;# 
  2978  0295                     	;# 
  2979  0296                     	;# 
  2980  0296                     	;# 
  2981  0297                     	;# 
  2982  0298                     	;# 
  2983  0298                     	;# 
  2984  0299                     	;# 
  2985  0299                     	;# 
  2986  029A                     	;# 
  2987  029B                     	;# 
  2988  029C                     	;# 
  2989  029C                     	;# 
  2990  029D                     	;# 
  2991  030C                     	;# 
  2992  030C                     	;# 
  2993  030D                     	;# 
  2994  030E                     	;# 
  2995  030F                     	;# 
  2996  0310                     	;# 
  2997  0310                     	;# 
  2998  0311                     	;# 
  2999  0312                     	;# 
  3000  0313                     	;# 
  3001  0314                     	;# 
  3002  0314                     	;# 
  3003  0315                     	;# 
  3004  0316                     	;# 
  3005  0317                     	;# 
  3006  0318                     	;# 
  3007  0318                     	;# 
  3008  0319                     	;# 
  3009  031A                     	;# 
  3010  031B                     	;# 
  3011  031C                     	;# 
  3012  031C                     	;# 
  3013  031D                     	;# 
  3014  031E                     	;# 
  3015  031F                     	;# 
  3016  038C                     	;# 
  3017  038D                     	;# 
  3018  038E                     	;# 
  3019  0390                     	;# 
  3020  0391                     	;# 
  3021  0392                     	;# 
  3022  040C                     	;# 
  3023  040D                     	;# 
  3024  040E                     	;# 
  3025  040F                     	;# 
  3026  0410                     	;# 
  3027  0411                     	;# 
  3028  0416                     	;# 
  3029  0416                     	;# 
  3030  0417                     	;# 
  3031  0418                     	;# 
  3032  0418                     	;# 
  3033  0419                     	;# 
  3034  041A                     	;# 
  3035  041A                     	;# 
  3036  041B                     	;# 
  3037  041C                     	;# 
  3038  041C                     	;# 
  3039  041D                     	;# 
  3040  041E                     	;# 
  3041  041F                     	;# 
  3042  048C                     	;# 
  3043  048C                     	;# 
  3044  048D                     	;# 
  3045  048E                     	;# 
  3046  048F                     	;# 
  3047  048F                     	;# 
  3048  0490                     	;# 
  3049  0491                     	;# 
  3050  0492                     	;# 
  3051  0492                     	;# 
  3052  0493                     	;# 
  3053  0494                     	;# 
  3054  0495                     	;# 
  3055  0495                     	;# 
  3056  0496                     	;# 
  3057  0497                     	;# 
  3058  0498                     	;# 
  3059  0499                     	;# 
  3060  049A                     	;# 
  3061  049B                     	;# 
  3062  049C                     	;# 
  3063  049D                     	;# 
  3064  050C                     	;# 
  3065  050C                     	;# 
  3066  050D                     	;# 
  3067  050E                     	;# 
  3068  050F                     	;# 
  3069  050F                     	;# 
  3070  0510                     	;# 
  3071  0511                     	;# 
  3072  0512                     	;# 
  3073  0512                     	;# 
  3074  0513                     	;# 
  3075  0514                     	;# 
  3076  0515                     	;# 
  3077  0515                     	;# 
  3078  0516                     	;# 
  3079  0517                     	;# 
  3080  0518                     	;# 
  3081  0519                     	;# 
  3082  051A                     	;# 
  3083  051B                     	;# 
  3084  051C                     	;# 
  3085  051D                     	;# 
  3086  058C                     	;# 
  3087  058C                     	;# 
  3088  058D                     	;# 
  3089  058E                     	;# 
  3090  058F                     	;# 
  3091  058F                     	;# 
  3092  0590                     	;# 
  3093  0591                     	;# 
  3094  0592                     	;# 
  3095  0593                     	;# 
  3096  060C                     	;# 
  3097  060D                     	;# 
  3098  060E                     	;# 
  3099  060F                     	;# 
  3100  0610                     	;# 
  3101  0611                     	;# 
  3102  0612                     	;# 
  3103  0613                     	;# 
  3104  0614                     	;# 
  3105  0616                     	;# 
  3106  0617                     	;# 
  3107  0618                     	;# 
  3108  0619                     	;# 
  3109  061A                     	;# 
  3110  061B                     	;# 
  3111  061C                     	;# 
  3112  061D                     	;# 
  3113  061E                     	;# 
  3114  068C                     	;# 
  3115  068D                     	;# 
  3116  068E                     	;# 
  3117  068F                     	;# 
  3118  0690                     	;# 
  3119  0691                     	;# 
  3120  0692                     	;# 
  3121  0693                     	;# 
  3122  0694                     	;# 
  3123  070C                     	;# 
  3124  070D                     	;# 
  3125  070E                     	;# 
  3126  070F                     	;# 
  3127  0710                     	;# 
  3128  0711                     	;# 
  3129  0712                     	;# 
  3130  0713                     	;# 
  3131  0714                     	;# 
  3132  0716                     	;# 
  3133  0717                     	;# 
  3134  0718                     	;# 
  3135  0719                     	;# 
  3136  071A                     	;# 
  3137  071B                     	;# 
  3138  071C                     	;# 
  3139  071D                     	;# 
  3140  071E                     	;# 
  3141  0796                     	;# 
  3142  0797                     	;# 
  3143  0798                     	;# 
  3144  0799                     	;# 
  3145  079A                     	;# 
  3146  079B                     	;# 
  3147  080C                     	;# 
  3148  080D                     	;# 
  3149  080E                     	;# 
  3150  080F                     	;# 
  3151  0810                     	;# 
  3152  0811                     	;# 
  3153  0812                     	;# 
  3154  0813                     	;# 
  3155  0814                     	;# 
  3156  081A                     	;# 
  3157  081B                     	;# 
  3158  081C                     	;# 
  3159  081D                     	;# 
  3160  081E                     	;# 
  3161  081F                     	;# 
  3162  088C                     	;# 
  3163  088D                     	;# 
  3164  088E                     	;# 
  3165  088F                     	;# 
  3166  0890                     	;# 
  3167  0891                     	;# 
  3168  0892                     	;# 
  3169  0893                     	;# 
  3170  0895                     	;# 
  3171  0896                     	;# 
  3172  0897                     	;# 
  3173  0898                     	;# 
  3174  0899                     	;# 
  3175  089A                     	;# 
  3176  089B                     	;# 
  3177  090C                     	;# 
  3178  090E                     	;# 
  3179  090F                     	;# 
  3180  091F                     	;# 
  3181  091F                     	;# 
  3182  098F                     	;# 
  3183  098F                     	;# 
  3184  0990                     	;# 
  3185  0991                     	;# 
  3186  0992                     	;# 
  3187  0993                     	;# 
  3188  0994                     	;# 
  3189  0995                     	;# 
  3190  0996                     	;# 
  3191  0997                     	;# 
  3192  0E0F                     	;# 
  3193  0E10                     	;# 
  3194  0E11                     	;# 
  3195  0E12                     	;# 
  3196  0E13                     	;# 
  3197  0E14                     	;# 
  3198  0E15                     	;# 
  3199  0E16                     	;# 
  3200  0E17                     	;# 
  3201  0E18                     	;# 
  3202  0E19                     	;# 
  3203  0E1A                     	;# 
  3204  0E1B                     	;# 
  3205  0E1C                     	;# 
  3206  0E1D                     	;# 
  3207  0E1E                     	;# 
  3208  0E1F                     	;# 
  3209  0E20                     	;# 
  3210  0E21                     	;# 
  3211  0E22                     	;# 
  3212  0E23                     	;# 
  3213  0E24                     	;# 
  3214  0E25                     	;# 
  3215  0E26                     	;# 
  3216  0E27                     	;# 
  3217  0E28                     	;# 
  3218  0E29                     	;# 
  3219  0E2A                     	;# 
  3220  0E2B                     	;# 
  3221  0E2C                     	;# 
  3222  0E2D                     	;# 
  3223  0E2E                     	;# 
  3224  0E2F                     	;# 
  3225  0E30                     	;# 
  3226  0E31                     	;# 
  3227  0E32                     	;# 
  3228  0E33                     	;# 
  3229  0E34                     	;# 
  3230  0E35                     	;# 
  3231  0E36                     	;# 
  3232  0E37                     	;# 
  3233  0E8F                     	;# 
  3234  0E90                     	;# 
  3235  0E91                     	;# 
  3236  0E92                     	;# 
  3237  0E93                     	;# 
  3238  0E94                     	;# 
  3239  0E95                     	;# 
  3240  0E96                     	;# 
  3241  0E97                     	;# 
  3242  0E9C                     	;# 
  3243  0E9D                     	;# 
  3244  0E9E                     	;# 
  3245  0EA1                     	;# 
  3246  0EA2                     	;# 
  3247  0EA3                     	;# 
  3248  0EA4                     	;# 
  3249  0EA5                     	;# 
  3250  0EA9                     	;# 
  3251  0EAA                     	;# 
  3252  0EAB                     	;# 
  3253  0EAC                     	;# 
  3254  0EB1                     	;# 
  3255  0EB2                     	;# 
  3256  0EB3                     	;# 
  3257  0EB8                     	;# 
  3258  0EB9                     	;# 
  3259  0EBA                     	;# 
  3260  0EBB                     	;# 
  3261  0EBC                     	;# 
  3262  0EBD                     	;# 
  3263  0EBE                     	;# 
  3264  0EC3                     	;# 
  3265  0EC5                     	;# 
  3266  0EC6                     	;# 
  3267  0EC7                     	;# 
  3268  0EC8                     	;# 
  3269  0EC9                     	;# 
  3270  0ECA                     	;# 
  3271  0ECB                     	;# 
  3272  0ECC                     	;# 
  3273  0F10                     	;# 
  3274  0F11                     	;# 
  3275  0F12                     	;# 
  3276  0F13                     	;# 
  3277  0F14                     	;# 
  3278  0F15                     	;# 
  3279  0F16                     	;# 
  3280  0F17                     	;# 
  3281  0F18                     	;# 
  3282  0F19                     	;# 
  3283  0F1A                     	;# 
  3284  0F1B                     	;# 
  3285  0F1C                     	;# 
  3286  0F1D                     	;# 
  3287  0F1E                     	;# 
  3288  0F1F                     	;# 
  3289  0F20                     	;# 
  3290  0F21                     	;# 
  3291  0F22                     	;# 
  3292  0F23                     	;# 
  3293  0F24                     	;# 
  3294  0F25                     	;# 
  3295  0F26                     	;# 
  3296  0F27                     	;# 
  3297  0F28                     	;# 
  3298  0F29                     	;# 
  3299  0F2A                     	;# 
  3300  0F2B                     	;# 
  3301  0F2C                     	;# 
  3302  0F2D                     	;# 
  3303  0F2E                     	;# 
  3304  0F2F                     	;# 
  3305  0F30                     	;# 
  3306  0F31                     	;# 
  3307  0F32                     	;# 
  3308  0F38                     	;# 
  3309  0F39                     	;# 
  3310  0F3A                     	;# 
  3311  0F3B                     	;# 
  3312  0F3C                     	;# 
  3313  0F3D                     	;# 
  3314  0F3E                     	;# 
  3315  0F3F                     	;# 
  3316  0F40                     	;# 
  3317  0F41                     	;# 
  3318  0F43                     	;# 
  3319  0F44                     	;# 
  3320  0F45                     	;# 
  3321  0F46                     	;# 
  3322  0F47                     	;# 
  3323  0F48                     	;# 
  3324  0F49                     	;# 
  3325  0F4A                     	;# 
  3326  0F4B                     	;# 
  3327  0F4C                     	;# 
  3328  0F4E                     	;# 
  3329  0F4F                     	;# 
  3330  0F50                     	;# 
  3331  0F51                     	;# 
  3332  0F52                     	;# 
  3333  0F53                     	;# 
  3334  0F54                     	;# 
  3335  0F55                     	;# 
  3336  0F56                     	;# 
  3337  0F57                     	;# 
  3338  0F59                     	;# 
  3339  0F5A                     	;# 
  3340  0F5B                     	;# 
  3341  0F5C                     	;# 
  3342  0F5D                     	;# 
  3343  0F61                     	;# 
  3344  0F62                     	;# 
  3345  0F64                     	;# 
  3346  0F65                     	;# 
  3347  0F66                     	;# 
  3348  0F67                     	;# 
  3349  0F68                     	;# 
  3350  0F69                     	;# 
  3351  0F6A                     	;# 
  3352  0F6B                     	;# 
  3353  0F6C                     	;# 
  3354  0F6D                     	;# 
  3355  0FE4                     	;# 
  3356  0FE5                     	;# 
  3357  0FE6                     	;# 
  3358  0FE7                     	;# 
  3359  0FE8                     	;# 
  3360  0FE9                     	;# 
  3361  0FEA                     	;# 
  3362  0FEB                     	;# 
  3363  0FED                     	;# 
  3364  0FEE                     	;# 
  3365  0FEF                     	;# 
  3366  0000                     	;# 
  3367  0001                     	;# 
  3368  0002                     	;# 
  3369  0003                     	;# 
  3370  0004                     	;# 
  3371  0005                     	;# 
  3372  0006                     	;# 
  3373  0007                     	;# 
  3374  0008                     	;# 
  3375  0009                     	;# 
  3376  000A                     	;# 
  3377  000B                     	;# 
  3378  000C                     	;# 
  3379  000D                     	;# 
  3380  000E                     	;# 
  3381  000F                     	;# 
  3382  0010                     	;# 
  3383  0011                     	;# 
  3384  0012                     	;# 
  3385  0013                     	;# 
  3386  0014                     	;# 
  3387  0015                     	;# 
  3388  0016                     	;# 
  3389  0017                     	;# 
  3390  0018                     	;# 
  3391  0019                     	;# 
  3392  001A                     	;# 
  3393  001C                     	;# 
  3394  001C                     	;# 
  3395  001D                     	;# 
  3396  001D                     	;# 
  3397  001E                     	;# 
  3398  001F                     	;# 
  3399  008C                     	;# 
  3400  008C                     	;# 
  3401  008D                     	;# 
  3402  008E                     	;# 
  3403  008E                     	;# 
  3404  008F                     	;# 
  3405  0090                     	;# 
  3406  0090                     	;# 
  3407  0091                     	;# 
  3408  0093                     	;# 
  3409  0094                     	;# 
  3410  0095                     	;# 
  3411  0096                     	;# 
  3412  0097                     	;# 
  3413  0098                     	;# 
  3414  0099                     	;# 
  3415  009A                     	;# 
  3416  009B                     	;# 
  3417  009C                     	;# 
  3418  009D                     	;# 
  3419  009E                     	;# 
  3420  010C                     	;# 
  3421  010D                     	;# 
  3422  010E                     	;# 
  3423  010E                     	;# 
  3424  010F                     	;# 
  3425  0110                     	;# 
  3426  0110                     	;# 
  3427  0111                     	;# 
  3428  0112                     	;# 
  3429  0112                     	;# 
  3430  0113                     	;# 
  3431  0114                     	;# 
  3432  0114                     	;# 
  3433  0115                     	;# 
  3434  0116                     	;# 
  3435  0116                     	;# 
  3436  0117                     	;# 
  3437  0119                     	;# 
  3438  0119                     	;# 
  3439  0119                     	;# 
  3440  011A                     	;# 
  3441  011A                     	;# 
  3442  011A                     	;# 
  3443  011B                     	;# 
  3444  011B                     	;# 
  3445  011B                     	;# 
  3446  011B                     	;# 
  3447  011B                     	;# 
  3448  011C                     	;# 
  3449  011C                     	;# 
  3450  011C                     	;# 
  3451  011D                     	;# 
  3452  011D                     	;# 
  3453  011D                     	;# 
  3454  011E                     	;# 
  3455  011E                     	;# 
  3456  011E                     	;# 
  3457  011F                     	;# 
  3458  011F                     	;# 
  3459  011F                     	;# 
  3460  011F                     	;# 
  3461  011F                     	;# 
  3462  018C                     	;# 
  3463  018D                     	;# 
  3464  018E                     	;# 
  3465  018F                     	;# 
  3466  0190                     	;# 
  3467  0191                     	;# 
  3468  0192                     	;# 
  3469  0196                     	;# 
  3470  0197                     	;# 
  3471  0198                     	;# 
  3472  0199                     	;# 
  3473  019A                     	;# 
  3474  019B                     	;# 
  3475  019C                     	;# 
  3476  020C                     	;# 
  3477  020C                     	;# 
  3478  020D                     	;# 
  3479  020E                     	;# 
  3480  020F                     	;# 
  3481  020F                     	;# 
  3482  0210                     	;# 
  3483  0210                     	;# 
  3484  0211                     	;# 
  3485  0211                     	;# 
  3486  0212                     	;# 
  3487  0212                     	;# 
  3488  0213                     	;# 
  3489  0214                     	;# 
  3490  0215                     	;# 
  3491  0215                     	;# 
  3492  0216                     	;# 
  3493  0216                     	;# 
  3494  0217                     	;# 
  3495  0217                     	;# 
  3496  0218                     	;# 
  3497  0218                     	;# 
  3498  0219                     	;# 
  3499  021A                     	;# 
  3500  021B                     	;# 
  3501  021B                     	;# 
  3502  021C                     	;# 
  3503  021C                     	;# 
  3504  021D                     	;# 
  3505  021D                     	;# 
  3506  021E                     	;# 
  3507  021F                     	;# 
  3508  028C                     	;# 
  3509  028C                     	;# 
  3510  028D                     	;# 
  3511  028D                     	;# 
  3512  028E                     	;# 
  3513  028F                     	;# 
  3514  0290                     	;# 
  3515  0290                     	;# 
  3516  0291                     	;# 
  3517  0292                     	;# 
  3518  0292                     	;# 
  3519  0293                     	;# 
  3520  0293                     	;# 
  3521  0294                     	;# 
  3522  0295                     	;# 
  3523  0296                     	;# 
  3524  0296                     	;# 
  3525  0297                     	;# 
  3526  0298                     	;# 
  3527  0298                     	;# 
  3528  0299                     	;# 
  3529  0299                     	;# 
  3530  029A                     	;# 
  3531  029B                     	;# 
  3532  029C                     	;# 
  3533  029C                     	;# 
  3534  029D                     	;# 
  3535  030C                     	;# 
  3536  030C                     	;# 
  3537  030D                     	;# 
  3538  030E                     	;# 
  3539  030F                     	;# 
  3540  0310                     	;# 
  3541  0310                     	;# 
  3542  0311                     	;# 
  3543  0312                     	;# 
  3544  0313                     	;# 
  3545  0314                     	;# 
  3546  0314                     	;# 
  3547  0315                     	;# 
  3548  0316                     	;# 
  3549  0317                     	;# 
  3550  0318                     	;# 
  3551  0318                     	;# 
  3552  0319                     	;# 
  3553  031A                     	;# 
  3554  031B                     	;# 
  3555  031C                     	;# 
  3556  031C                     	;# 
  3557  031D                     	;# 
  3558  031E                     	;# 
  3559  031F                     	;# 
  3560  038C                     	;# 
  3561  038D                     	;# 
  3562  038E                     	;# 
  3563  0390                     	;# 
  3564  0391                     	;# 
  3565  0392                     	;# 
  3566  040C                     	;# 
  3567  040D                     	;# 
  3568  040E                     	;# 
  3569  040F                     	;# 
  3570  0410                     	;# 
  3571  0411                     	;# 
  3572  0416                     	;# 
  3573  0416                     	;# 
  3574  0417                     	;# 
  3575  0418                     	;# 
  3576  0418                     	;# 
  3577  0419                     	;# 
  3578  041A                     	;# 
  3579  041A                     	;# 
  3580  041B                     	;# 
  3581  041C                     	;# 
  3582  041C                     	;# 
  3583  041D                     	;# 
  3584  041E                     	;# 
  3585  041F                     	;# 
  3586  048C                     	;# 
  3587  048C                     	;# 
  3588  048D                     	;# 
  3589  048E                     	;# 
  3590  048F                     	;# 
  3591  048F                     	;# 
  3592  0490                     	;# 
  3593  0491                     	;# 
  3594  0492                     	;# 
  3595  0492                     	;# 
  3596  0493                     	;# 
  3597  0494                     	;# 
  3598  0495                     	;# 
  3599  0495                     	;# 
  3600  0496                     	;# 
  3601  0497                     	;# 
  3602  0498                     	;# 
  3603  0499                     	;# 
  3604  049A                     	;# 
  3605  049B                     	;# 
  3606  049C                     	;# 
  3607  049D                     	;# 
  3608  050C                     	;# 
  3609  050C                     	;# 
  3610  050D                     	;# 
  3611  050E                     	;# 
  3612  050F                     	;# 
  3613  050F                     	;# 
  3614  0510                     	;# 
  3615  0511                     	;# 
  3616  0512                     	;# 
  3617  0512                     	;# 
  3618  0513                     	;# 
  3619  0514                     	;# 
  3620  0515                     	;# 
  3621  0515                     	;# 
  3622  0516                     	;# 
  3623  0517                     	;# 
  3624  0518                     	;# 
  3625  0519                     	;# 
  3626  051A                     	;# 
  3627  051B                     	;# 
  3628  051C                     	;# 
  3629  051D                     	;# 
  3630  058C                     	;# 
  3631  058C                     	;# 
  3632  058D                     	;# 
  3633  058E                     	;# 
  3634  058F                     	;# 
  3635  058F                     	;# 
  3636  0590                     	;# 
  3637  0591                     	;# 
  3638  0592                     	;# 
  3639  0593                     	;# 
  3640  060C                     	;# 
  3641  060D                     	;# 
  3642  060E                     	;# 
  3643  060F                     	;# 
  3644  0610                     	;# 
  3645  0611                     	;# 
  3646  0612                     	;# 
  3647  0613                     	;# 
  3648  0614                     	;# 
  3649  0616                     	;# 
  3650  0617                     	;# 
  3651  0618                     	;# 
  3652  0619                     	;# 
  3653  061A                     	;# 
  3654  061B                     	;# 
  3655  061C                     	;# 
  3656  061D                     	;# 
  3657  061E                     	;# 
  3658  068C                     	;# 
  3659  068D                     	;# 
  3660  068E                     	;# 
  3661  068F                     	;# 
  3662  0690                     	;# 
  3663  0691                     	;# 
  3664  0692                     	;# 
  3665  0693                     	;# 
  3666  0694                     	;# 
  3667  070C                     	;# 
  3668  070D                     	;# 
  3669  070E                     	;# 
  3670  070F                     	;# 
  3671  0710                     	;# 
  3672  0711                     	;# 
  3673  0712                     	;# 
  3674  0713                     	;# 
  3675  0714                     	;# 
  3676  0716                     	;# 
  3677  0717                     	;# 
  3678  0718                     	;# 
  3679  0719                     	;# 
  3680  071A                     	;# 
  3681  071B                     	;# 
  3682  071C                     	;# 
  3683  071D                     	;# 
  3684  071E                     	;# 
  3685  0796                     	;# 
  3686  0797                     	;# 
  3687  0798                     	;# 
  3688  0799                     	;# 
  3689  079A                     	;# 
  3690  079B                     	;# 
  3691  080C                     	;# 
  3692  080D                     	;# 
  3693  080E                     	;# 
  3694  080F                     	;# 
  3695  0810                     	;# 
  3696  0811                     	;# 
  3697  0812                     	;# 
  3698  0813                     	;# 
  3699  0814                     	;# 
  3700  081A                     	;# 
  3701  081B                     	;# 
  3702  081C                     	;# 
  3703  081D                     	;# 
  3704  081E                     	;# 
  3705  081F                     	;# 
  3706  088C                     	;# 
  3707  088D                     	;# 
  3708  088E                     	;# 
  3709  088F                     	;# 
  3710  0890                     	;# 
  3711  0891                     	;# 
  3712  0892                     	;# 
  3713  0893                     	;# 
  3714  0895                     	;# 
  3715  0896                     	;# 
  3716  0897                     	;# 
  3717  0898                     	;# 
  3718  0899                     	;# 
  3719  089A                     	;# 
  3720  089B                     	;# 
  3721  090C                     	;# 
  3722  090E                     	;# 
  3723  090F                     	;# 
  3724  091F                     	;# 
  3725  091F                     	;# 
  3726  098F                     	;# 
  3727  098F                     	;# 
  3728  0990                     	;# 
  3729  0991                     	;# 
  3730  0992                     	;# 
  3731  0993                     	;# 
  3732  0994                     	;# 
  3733  0995                     	;# 
  3734  0996                     	;# 
  3735  0997                     	;# 
  3736  0E0F                     	;# 
  3737  0E10                     	;# 
  3738  0E11                     	;# 
  3739  0E12                     	;# 
  3740  0E13                     	;# 
  3741  0E14                     	;# 
  3742  0E15                     	;# 
  3743  0E16                     	;# 
  3744  0E17                     	;# 
  3745  0E18                     	;# 
  3746  0E19                     	;# 
  3747  0E1A                     	;# 
  3748  0E1B                     	;# 
  3749  0E1C                     	;# 
  3750  0E1D                     	;# 
  3751  0E1E                     	;# 
  3752  0E1F                     	;# 
  3753  0E20                     	;# 
  3754  0E21                     	;# 
  3755  0E22                     	;# 
  3756  0E23                     	;# 
  3757  0E24                     	;# 
  3758  0E25                     	;# 
  3759  0E26                     	;# 
  3760  0E27                     	;# 
  3761  0E28                     	;# 
  3762  0E29                     	;# 
  3763  0E2A                     	;# 
  3764  0E2B                     	;# 
  3765  0E2C                     	;# 
  3766  0E2D                     	;# 
  3767  0E2E                     	;# 
  3768  0E2F                     	;# 
  3769  0E30                     	;# 
  3770  0E31                     	;# 
  3771  0E32                     	;# 
  3772  0E33                     	;# 
  3773  0E34                     	;# 
  3774  0E35                     	;# 
  3775  0E36                     	;# 
  3776  0E37                     	;# 
  3777  0E8F                     	;# 
  3778  0E90                     	;# 
  3779  0E91                     	;# 
  3780  0E92                     	;# 
  3781  0E93                     	;# 
  3782  0E94                     	;# 
  3783  0E95                     	;# 
  3784  0E96                     	;# 
  3785  0E97                     	;# 
  3786  0E9C                     	;# 
  3787  0E9D                     	;# 
  3788  0E9E                     	;# 
  3789  0EA1                     	;# 
  3790  0EA2                     	;# 
  3791  0EA3                     	;# 
  3792  0EA4                     	;# 
  3793  0EA5                     	;# 
  3794  0EA9                     	;# 
  3795  0EAA                     	;# 
  3796  0EAB                     	;# 
  3797  0EAC                     	;# 
  3798  0EB1                     	;# 
  3799  0EB2                     	;# 
  3800  0EB3                     	;# 
  3801  0EB8                     	;# 
  3802  0EB9                     	;# 
  3803  0EBA                     	;# 
  3804  0EBB                     	;# 
  3805  0EBC                     	;# 
  3806  0EBD                     	;# 
  3807  0EBE                     	;# 
  3808  0EC3                     	;# 
  3809  0EC5                     	;# 
  3810  0EC6                     	;# 
  3811  0EC7                     	;# 
  3812  0EC8                     	;# 
  3813  0EC9                     	;# 
  3814  0ECA                     	;# 
  3815  0ECB                     	;# 
  3816  0ECC                     	;# 
  3817  0F10                     	;# 
  3818  0F11                     	;# 
  3819  0F12                     	;# 
  3820  0F13                     	;# 
  3821  0F14                     	;# 
  3822  0F15                     	;# 
  3823  0F16                     	;# 
  3824  0F17                     	;# 
  3825  0F18                     	;# 
  3826  0F19                     	;# 
  3827  0F1A                     	;# 
  3828  0F1B                     	;# 
  3829  0F1C                     	;# 
  3830  0F1D                     	;# 
  3831  0F1E                     	;# 
  3832  0F1F                     	;# 
  3833  0F20                     	;# 
  3834  0F21                     	;# 
  3835  0F22                     	;# 
  3836  0F23                     	;# 
  3837  0F24                     	;# 
  3838  0F25                     	;# 
  3839  0F26                     	;# 
  3840  0F27                     	;# 
  3841  0F28                     	;# 
  3842  0F29                     	;# 
  3843  0F2A                     	;# 
  3844  0F2B                     	;# 
  3845  0F2C                     	;# 
  3846  0F2D                     	;# 
  3847  0F2E                     	;# 
  3848  0F2F                     	;# 
  3849  0F30                     	;# 
  3850  0F31                     	;# 
  3851  0F32                     	;# 
  3852  0F38                     	;# 
  3853  0F39                     	;# 
  3854  0F3A                     	;# 
  3855  0F3B                     	;# 
  3856  0F3C                     	;# 
  3857  0F3D                     	;# 
  3858  0F3E                     	;# 
  3859  0F3F                     	;# 
  3860  0F40                     	;# 
  3861  0F41                     	;# 
  3862  0F43                     	;# 
  3863  0F44                     	;# 
  3864  0F45                     	;# 
  3865  0F46                     	;# 
  3866  0F47                     	;# 
  3867  0F48                     	;# 
  3868  0F49                     	;# 
  3869  0F4A                     	;# 
  3870  0F4B                     	;# 
  3871  0F4C                     	;# 
  3872  0F4E                     	;# 
  3873  0F4F                     	;# 
  3874  0F50                     	;# 
  3875  0F51                     	;# 
  3876  0F52                     	;# 
  3877  0F53                     	;# 
  3878  0F54                     	;# 
  3879  0F55                     	;# 
  3880  0F56                     	;# 
  3881  0F57                     	;# 
  3882  0F59                     	;# 
  3883  0F5A                     	;# 
  3884  0F5B                     	;# 
  3885  0F5C                     	;# 
  3886  0F5D                     	;# 
  3887  0F61                     	;# 
  3888  0F62                     	;# 
  3889  0F64                     	;# 
  3890  0F65                     	;# 
  3891  0F66                     	;# 
  3892  0F67                     	;# 
  3893  0F68                     	;# 
  3894  0F69                     	;# 
  3895  0F6A                     	;# 
  3896  0F6B                     	;# 
  3897  0F6C                     	;# 
  3898  0F6D                     	;# 
  3899  0FE4                     	;# 
  3900  0FE5                     	;# 
  3901  0FE6                     	;# 
  3902  0FE7                     	;# 
  3903  0FE8                     	;# 
  3904  0FE9                     	;# 
  3905  0FEA                     	;# 
  3906  0FEB                     	;# 
  3907  0FED                     	;# 
  3908  0FEE                     	;# 
  3909  0FEF                     	;# 
  3910  0000                     	;# 
  3911  0001                     	;# 
  3912  0002                     	;# 
  3913  0003                     	;# 
  3914  0004                     	;# 
  3915  0005                     	;# 
  3916  0006                     	;# 
  3917  0007                     	;# 
  3918  0008                     	;# 
  3919  0009                     	;# 
  3920  000A                     	;# 
  3921  000B                     	;# 
  3922  000C                     	;# 
  3923  000D                     	;# 
  3924  000E                     	;# 
  3925  000F                     	;# 
  3926  0010                     	;# 
  3927  0011                     	;# 
  3928  0012                     	;# 
  3929  0013                     	;# 
  3930  0014                     	;# 
  3931  0015                     	;# 
  3932  0016                     	;# 
  3933  0017                     	;# 
  3934  0018                     	;# 
  3935  0019                     	;# 
  3936  001A                     	;# 
  3937  001C                     	;# 
  3938  001C                     	;# 
  3939  001D                     	;# 
  3940  001D                     	;# 
  3941  001E                     	;# 
  3942  001F                     	;# 
  3943  008C                     	;# 
  3944  008C                     	;# 
  3945  008D                     	;# 
  3946  008E                     	;# 
  3947  008E                     	;# 
  3948  008F                     	;# 
  3949  0090                     	;# 
  3950  0090                     	;# 
  3951  0091                     	;# 
  3952  0093                     	;# 
  3953  0094                     	;# 
  3954  0095                     	;# 
  3955  0096                     	;# 
  3956  0097                     	;# 
  3957  0098                     	;# 
  3958  0099                     	;# 
  3959  009A                     	;# 
  3960  009B                     	;# 
  3961  009C                     	;# 
  3962  009D                     	;# 
  3963  009E                     	;# 
  3964  010C                     	;# 
  3965  010D                     	;# 
  3966  010E                     	;# 
  3967  010E                     	;# 
  3968  010F                     	;# 
  3969  0110                     	;# 
  3970  0110                     	;# 
  3971  0111                     	;# 
  3972  0112                     	;# 
  3973  0112                     	;# 
  3974  0113                     	;# 
  3975  0114                     	;# 
  3976  0114                     	;# 
  3977  0115                     	;# 
  3978  0116                     	;# 
  3979  0116                     	;# 
  3980  0117                     	;# 
  3981  0119                     	;# 
  3982  0119                     	;# 
  3983  0119                     	;# 
  3984  011A                     	;# 
  3985  011A                     	;# 
  3986  011A                     	;# 
  3987  011B                     	;# 
  3988  011B                     	;# 
  3989  011B                     	;# 
  3990  011B                     	;# 
  3991  011B                     	;# 
  3992  011C                     	;# 
  3993  011C                     	;# 
  3994  011C                     	;# 
  3995  011D                     	;# 
  3996  011D                     	;# 
  3997  011D                     	;# 
  3998  011E                     	;# 
  3999  011E                     	;# 
  4000  011E                     	;# 
  4001  011F                     	;# 
  4002  011F                     	;# 
  4003  011F                     	;# 
  4004  011F                     	;# 
  4005  011F                     	;# 
  4006  018C                     	;# 
  4007  018D                     	;# 
  4008  018E                     	;# 
  4009  018F                     	;# 
  4010  0190                     	;# 
  4011  0191                     	;# 
  4012  0192                     	;# 
  4013  0196                     	;# 
  4014  0197                     	;# 
  4015  0198                     	;# 
  4016  0199                     	;# 
  4017  019A                     	;# 
  4018  019B                     	;# 
  4019  019C                     	;# 
  4020  020C                     	;# 
  4021  020C                     	;# 
  4022  020D                     	;# 
  4023  020E                     	;# 
  4024  020F                     	;# 
  4025  020F                     	;# 
  4026  0210                     	;# 
  4027  0210                     	;# 
  4028  0211                     	;# 
  4029  0211                     	;# 
  4030  0212                     	;# 
  4031  0212                     	;# 
  4032  0213                     	;# 
  4033  0214                     	;# 
  4034  0215                     	;# 
  4035  0215                     	;# 
  4036  0216                     	;# 
  4037  0216                     	;# 
  4038  0217                     	;# 
  4039  0217                     	;# 
  4040  0218                     	;# 
  4041  0218                     	;# 
  4042  0219                     	;# 
  4043  021A                     	;# 
  4044  021B                     	;# 
  4045  021B                     	;# 
  4046  021C                     	;# 
  4047  021C                     	;# 
  4048  021D                     	;# 
  4049  021D                     	;# 
  4050  021E                     	;# 
  4051  021F                     	;# 
  4052  028C                     	;# 
  4053  028C                     	;# 
  4054  028D                     	;# 
  4055  028D                     	;# 
  4056  028E                     	;# 
  4057  028F                     	;# 
  4058  0290                     	;# 
  4059  0290                     	;# 
  4060  0291                     	;# 
  4061  0292                     	;# 
  4062  0292                     	;# 
  4063  0293                     	;# 
  4064  0293                     	;# 
  4065  0294                     	;# 
  4066  0295                     	;# 
  4067  0296                     	;# 
  4068  0296                     	;# 
  4069  0297                     	;# 
  4070  0298                     	;# 
  4071  0298                     	;# 
  4072  0299                     	;# 
  4073  0299                     	;# 
  4074  029A                     	;# 
  4075  029B                     	;# 
  4076  029C                     	;# 
  4077  029C                     	;# 
  4078  029D                     	;# 
  4079  030C                     	;# 
  4080  030C                     	;# 
  4081  030D                     	;# 
  4082  030E                     	;# 
  4083  030F                     	;# 
  4084  0310                     	;# 
  4085  0310                     	;# 
  4086  0311                     	;# 
  4087  0312                     	;# 
  4088  0313                     	;# 
  4089  0314                     	;# 
  4090  0314                     	;# 
  4091  0315                     	;# 
  4092  0316                     	;# 
  4093  0317                     	;# 
  4094  0318                     	;# 
  4095  0318                     	;# 
  4096  0319                     	;# 
  4097  031A                     	;# 
  4098  031B                     	;# 
  4099  031C                     	;# 
  4100  031C                     	;# 
  4101  031D                     	;# 
  4102  031E                     	;# 
  4103  031F                     	;# 
  4104  038C                     	;# 
  4105  038D                     	;# 
  4106  038E                     	;# 
  4107  0390                     	;# 
  4108  0391                     	;# 
  4109  0392                     	;# 
  4110  040C                     	;# 
  4111  040D                     	;# 
  4112  040E                     	;# 
  4113  040F                     	;# 
  4114  0410                     	;# 
  4115  0411                     	;# 
  4116  0416                     	;# 
  4117  0416                     	;# 
  4118  0417                     	;# 
  4119  0418                     	;# 
  4120  0418                     	;# 
  4121  0419                     	;# 
  4122  041A                     	;# 
  4123  041A                     	;# 
  4124  041B                     	;# 
  4125  041C                     	;# 
  4126  041C                     	;# 
  4127  041D                     	;# 
  4128  041E                     	;# 
  4129  041F                     	;# 
  4130  048C                     	;# 
  4131  048C                     	;# 
  4132  048D                     	;# 
  4133  048E                     	;# 
  4134  048F                     	;# 
  4135  048F                     	;# 
  4136  0490                     	;# 
  4137  0491                     	;# 
  4138  0492                     	;# 
  4139  0492                     	;# 
  4140  0493                     	;# 
  4141  0494                     	;# 
  4142  0495                     	;# 
  4143  0495                     	;# 
  4144  0496                     	;# 
  4145  0497                     	;# 
  4146  0498                     	;# 
  4147  0499                     	;# 
  4148  049A                     	;# 
  4149  049B                     	;# 
  4150  049C                     	;# 
  4151  049D                     	;# 
  4152  050C                     	;# 
  4153  050C                     	;# 
  4154  050D                     	;# 
  4155  050E                     	;# 
  4156  050F                     	;# 
  4157  050F                     	;# 
  4158  0510                     	;# 
  4159  0511                     	;# 
  4160  0512                     	;# 
  4161  0512                     	;# 
  4162  0513                     	;# 
  4163  0514                     	;# 
  4164  0515                     	;# 
  4165  0515                     	;# 
  4166  0516                     	;# 
  4167  0517                     	;# 
  4168  0518                     	;# 
  4169  0519                     	;# 
  4170  051A                     	;# 
  4171  051B                     	;# 
  4172  051C                     	;# 
  4173  051D                     	;# 
  4174  058C                     	;# 
  4175  058C                     	;# 
  4176  058D                     	;# 
  4177  058E                     	;# 
  4178  058F                     	;# 
  4179  058F                     	;# 
  4180  0590                     	;# 
  4181  0591                     	;# 
  4182  0592                     	;# 
  4183  0593                     	;# 
  4184  060C                     	;# 
  4185  060D                     	;# 
  4186  060E                     	;# 
  4187  060F                     	;# 
  4188  0610                     	;# 
  4189  0611                     	;# 
  4190  0612                     	;# 
  4191  0613                     	;# 
  4192  0614                     	;# 
  4193  0616                     	;# 
  4194  0617                     	;# 
  4195  0618                     	;# 
  4196  0619                     	;# 
  4197  061A                     	;# 
  4198  061B                     	;# 
  4199  061C                     	;# 
  4200  061D                     	;# 
  4201  061E                     	;# 
  4202  068C                     	;# 
  4203  068D                     	;# 
  4204  068E                     	;# 
  4205  068F                     	;# 
  4206  0690                     	;# 
  4207  0691                     	;# 
  4208  0692                     	;# 
  4209  0693                     	;# 
  4210  0694                     	;# 
  4211  070C                     	;# 
  4212  070D                     	;# 
  4213  070E                     	;# 
  4214  070F                     	;# 
  4215  0710                     	;# 
  4216  0711                     	;# 
  4217  0712                     	;# 
  4218  0713                     	;# 
  4219  0714                     	;# 
  4220  0716                     	;# 
  4221  0717                     	;# 
  4222  0718                     	;# 
  4223  0719                     	;# 
  4224  071A                     	;# 
  4225  071B                     	;# 
  4226  071C                     	;# 
  4227  071D                     	;# 
  4228  071E                     	;# 
  4229  0796                     	;# 
  4230  0797                     	;# 
  4231  0798                     	;# 
  4232  0799                     	;# 
  4233  079A                     	;# 
  4234  079B                     	;# 
  4235  080C                     	;# 
  4236  080D                     	;# 
  4237  080E                     	;# 
  4238  080F                     	;# 
  4239  0810                     	;# 
  4240  0811                     	;# 
  4241  0812                     	;# 
  4242  0813                     	;# 
  4243  0814                     	;# 
  4244  081A                     	;# 
  4245  081B                     	;# 
  4246  081C                     	;# 
  4247  081D                     	;# 
  4248  081E                     	;# 
  4249  081F                     	;# 
  4250  088C                     	;# 
  4251  088D                     	;# 
  4252  088E                     	;# 
  4253  088F                     	;# 
  4254  0890                     	;# 
  4255  0891                     	;# 
  4256  0892                     	;# 
  4257  0893                     	;# 
  4258  0895                     	;# 
  4259  0896                     	;# 
  4260  0897                     	;# 
  4261  0898                     	;# 
  4262  0899                     	;# 
  4263  089A                     	;# 
  4264  089B                     	;# 
  4265  090C                     	;# 
  4266  090E                     	;# 
  4267  090F                     	;# 
  4268  091F                     	;# 
  4269  091F                     	;# 
  4270  098F                     	;# 
  4271  098F                     	;# 
  4272  0990                     	;# 
  4273  0991                     	;# 
  4274  0992                     	;# 
  4275  0993                     	;# 
  4276  0994                     	;# 
  4277  0995                     	;# 
  4278  0996                     	;# 
  4279  0997                     	;# 
  4280  0E0F                     	;# 
  4281  0E10                     	;# 
  4282  0E11                     	;# 
  4283  0E12                     	;# 
  4284  0E13                     	;# 
  4285  0E14                     	;# 
  4286  0E15                     	;# 
  4287  0E16                     	;# 
  4288  0E17                     	;# 
  4289  0E18                     	;# 
  4290  0E19                     	;# 
  4291  0E1A                     	;# 
  4292  0E1B                     	;# 
  4293  0E1C                     	;# 
  4294  0E1D                     	;# 
  4295  0E1E                     	;# 
  4296  0E1F                     	;# 
  4297  0E20                     	;# 
  4298  0E21                     	;# 
  4299  0E22                     	;# 
  4300  0E23                     	;# 
  4301  0E24                     	;# 
  4302  0E25                     	;# 
  4303  0E26                     	;# 
  4304  0E27                     	;# 
  4305  0E28                     	;# 
  4306  0E29                     	;# 
  4307  0E2A                     	;# 
  4308  0E2B                     	;# 
  4309  0E2C                     	;# 
  4310  0E2D                     	;# 
  4311  0E2E                     	;# 
  4312  0E2F                     	;# 
  4313  0E30                     	;# 
  4314  0E31                     	;# 
  4315  0E32                     	;# 
  4316  0E33                     	;# 
  4317  0E34                     	;# 
  4318  0E35                     	;# 
  4319  0E36                     	;# 
  4320  0E37                     	;# 
  4321  0E8F                     	;# 
  4322  0E90                     	;# 
  4323  0E91                     	;# 
  4324  0E92                     	;# 
  4325  0E93                     	;# 
  4326  0E94                     	;# 
  4327  0E95                     	;# 
  4328  0E96                     	;# 
  4329  0E97                     	;# 
  4330  0E9C                     	;# 
  4331  0E9D                     	;# 
  4332  0E9E                     	;# 
  4333  0EA1                     	;# 
  4334  0EA2                     	;# 
  4335  0EA3                     	;# 
  4336  0EA4                     	;# 
  4337  0EA5                     	;# 
  4338  0EA9                     	;# 
  4339  0EAA                     	;# 
  4340  0EAB                     	;# 
  4341  0EAC                     	;# 
  4342  0EB1                     	;# 
  4343  0EB2                     	;# 
  4344  0EB3                     	;# 
  4345  0EB8                     	;# 
  4346  0EB9                     	;# 
  4347  0EBA                     	;# 
  4348  0EBB                     	;# 
  4349  0EBC                     	;# 
  4350  0EBD                     	;# 
  4351  0EBE                     	;# 
  4352  0EC3                     	;# 
  4353  0EC5                     	;# 
  4354  0EC6                     	;# 
  4355  0EC7                     	;# 
  4356  0EC8                     	;# 
  4357  0EC9                     	;# 
  4358  0ECA                     	;# 
  4359  0ECB                     	;# 
  4360  0ECC                     	;# 
  4361  0F10                     	;# 
  4362  0F11                     	;# 
  4363  0F12                     	;# 
  4364  0F13                     	;# 
  4365  0F14                     	;# 
  4366  0F15                     	;# 
  4367  0F16                     	;# 
  4368  0F17                     	;# 
  4369  0F18                     	;# 
  4370  0F19                     	;# 
  4371  0F1A                     	;# 
  4372  0F1B                     	;# 
  4373  0F1C                     	;# 
  4374  0F1D                     	;# 
  4375  0F1E                     	;# 
  4376  0F1F                     	;# 
  4377  0F20                     	;# 
  4378  0F21                     	;# 
  4379  0F22                     	;# 
  4380  0F23                     	;# 
  4381  0F24                     	;# 
  4382  0F25                     	;# 
  4383  0F26                     	;# 
  4384  0F27                     	;# 
  4385  0F28                     	;# 
  4386  0F29                     	;# 
  4387  0F2A                     	;# 
  4388  0F2B                     	;# 
  4389  0F2C                     	;# 
  4390  0F2D                     	;# 
  4391  0F2E                     	;# 
  4392  0F2F                     	;# 
  4393  0F30                     	;# 
  4394  0F31                     	;# 
  4395  0F32                     	;# 
  4396  0F38                     	;# 
  4397  0F39                     	;# 
  4398  0F3A                     	;# 
  4399  0F3B                     	;# 
  4400  0F3C                     	;# 
  4401  0F3D                     	;# 
  4402  0F3E                     	;# 
  4403  0F3F                     	;# 
  4404  0F40                     	;# 
  4405  0F41                     	;# 
  4406  0F43                     	;# 
  4407  0F44                     	;# 
  4408  0F45                     	;# 
  4409  0F46                     	;# 
  4410  0F47                     	;# 
  4411  0F48                     	;# 
  4412  0F49                     	;# 
  4413  0F4A                     	;# 
  4414  0F4B                     	;# 
  4415  0F4C                     	;# 
  4416  0F4E                     	;# 
  4417  0F4F                     	;# 
  4418  0F50                     	;# 
  4419  0F51                     	;# 
  4420  0F52                     	;# 
  4421  0F53                     	;# 
  4422  0F54                     	;# 
  4423  0F55                     	;# 
  4424  0F56                     	;# 
  4425  0F57                     	;# 
  4426  0F59                     	;# 
  4427  0F5A                     	;# 
  4428  0F5B                     	;# 
  4429  0F5C                     	;# 
  4430  0F5D                     	;# 
  4431  0F61                     	;# 
  4432  0F62                     	;# 
  4433  0F64                     	;# 
  4434  0F65                     	;# 
  4435  0F66                     	;# 
  4436  0F67                     	;# 
  4437  0F68                     	;# 
  4438  0F69                     	;# 
  4439  0F6A                     	;# 
  4440  0F6B                     	;# 
  4441  0F6C                     	;# 
  4442  0F6D                     	;# 
  4443  0FE4                     	;# 
  4444  0FE5                     	;# 
  4445  0FE6                     	;# 
  4446  0FE7                     	;# 
  4447  0FE8                     	;# 
  4448  0FE9                     	;# 
  4449  0FEA                     	;# 
  4450  0FEB                     	;# 
  4451  0FED                     	;# 
  4452  0FEE                     	;# 
  4453  0FEF                     	;# 
  4454  0000                     	;# 
  4455  0001                     	;# 
  4456  0002                     	;# 
  4457  0003                     	;# 
  4458  0004                     	;# 
  4459  0005                     	;# 
  4460  0006                     	;# 
  4461  0007                     	;# 
  4462  0008                     	;# 
  4463  0009                     	;# 
  4464  000A                     	;# 
  4465  000B                     	;# 
  4466  000C                     	;# 
  4467  000D                     	;# 
  4468  000E                     	;# 
  4469  000F                     	;# 
  4470  0010                     	;# 
  4471  0011                     	;# 
  4472  0012                     	;# 
  4473  0013                     	;# 
  4474  0014                     	;# 
  4475  0015                     	;# 
  4476  0016                     	;# 
  4477  0017                     	;# 
  4478  0018                     	;# 
  4479  0019                     	;# 
  4480  001A                     	;# 
  4481  001C                     	;# 
  4482  001C                     	;# 
  4483  001D                     	;# 
  4484  001D                     	;# 
  4485  001E                     	;# 
  4486  001F                     	;# 
  4487  008C                     	;# 
  4488  008C                     	;# 
  4489  008D                     	;# 
  4490  008E                     	;# 
  4491  008E                     	;# 
  4492  008F                     	;# 
  4493  0090                     	;# 
  4494  0090                     	;# 
  4495  0091                     	;# 
  4496  0093                     	;# 
  4497  0094                     	;# 
  4498  0095                     	;# 
  4499  0096                     	;# 
  4500  0097                     	;# 
  4501  0098                     	;# 
  4502  0099                     	;# 
  4503  009A                     	;# 
  4504  009B                     	;# 
  4505  009C                     	;# 
  4506  009D                     	;# 
  4507  009E                     	;# 
  4508  010C                     	;# 
  4509  010D                     	;# 
  4510  010E                     	;# 
  4511  010E                     	;# 
  4512  010F                     	;# 
  4513  0110                     	;# 
  4514  0110                     	;# 
  4515  0111                     	;# 
  4516  0112                     	;# 
  4517  0112                     	;# 
  4518  0113                     	;# 
  4519  0114                     	;# 
  4520  0114                     	;# 
  4521  0115                     	;# 
  4522  0116                     	;# 
  4523  0116                     	;# 
  4524  0117                     	;# 
  4525  0119                     	;# 
  4526  0119                     	;# 
  4527  0119                     	;# 
  4528  011A                     	;# 
  4529  011A                     	;# 
  4530  011A                     	;# 
  4531  011B                     	;# 
  4532  011B                     	;# 
  4533  011B                     	;# 
  4534  011B                     	;# 
  4535  011B                     	;# 
  4536  011C                     	;# 
  4537  011C                     	;# 
  4538  011C                     	;# 
  4539  011D                     	;# 
  4540  011D                     	;# 
  4541  011D                     	;# 
  4542  011E                     	;# 
  4543  011E                     	;# 
  4544  011E                     	;# 
  4545  011F                     	;# 
  4546  011F                     	;# 
  4547  011F                     	;# 
  4548  011F                     	;# 
  4549  011F                     	;# 
  4550  018C                     	;# 
  4551  018D                     	;# 
  4552  018E                     	;# 
  4553  018F                     	;# 
  4554  0190                     	;# 
  4555  0191                     	;# 
  4556  0192                     	;# 
  4557  0196                     	;# 
  4558  0197                     	;# 
  4559  0198                     	;# 
  4560  0199                     	;# 
  4561  019A                     	;# 
  4562  019B                     	;# 
  4563  019C                     	;# 
  4564  020C                     	;# 
  4565  020C                     	;# 
  4566  020D                     	;# 
  4567  020E                     	;# 
  4568  020F                     	;# 
  4569  020F                     	;# 
  4570  0210                     	;# 
  4571  0210                     	;# 
  4572  0211                     	;# 
  4573  0211                     	;# 
  4574  0212                     	;# 
  4575  0212                     	;# 
  4576  0213                     	;# 
  4577  0214                     	;# 
  4578  0215                     	;# 
  4579  0215                     	;# 
  4580  0216                     	;# 
  4581  0216                     	;# 
  4582  0217                     	;# 
  4583  0217                     	;# 
  4584  0218                     	;# 
  4585  0218                     	;# 
  4586  0219                     	;# 
  4587  021A                     	;# 
  4588  021B                     	;# 
  4589  021B                     	;# 
  4590  021C                     	;# 
  4591  021C                     	;# 
  4592  021D                     	;# 
  4593  021D                     	;# 
  4594  021E                     	;# 
  4595  021F                     	;# 
  4596  028C                     	;# 
  4597  028C                     	;# 
  4598  028D                     	;# 
  4599  028D                     	;# 
  4600  028E                     	;# 
  4601  028F                     	;# 
  4602  0290                     	;# 
  4603  0290                     	;# 
  4604  0291                     	;# 
  4605  0292                     	;# 
  4606  0292                     	;# 
  4607  0293                     	;# 
  4608  0293                     	;# 
  4609  0294                     	;# 
  4610  0295                     	;# 
  4611  0296                     	;# 
  4612  0296                     	;# 
  4613  0297                     	;# 
  4614  0298                     	;# 
  4615  0298                     	;# 
  4616  0299                     	;# 
  4617  0299                     	;# 
  4618  029A                     	;# 
  4619  029B                     	;# 
  4620  029C                     	;# 
  4621  029C                     	;# 
  4622  029D                     	;# 
  4623  030C                     	;# 
  4624  030C                     	;# 
  4625  030D                     	;# 
  4626  030E                     	;# 
  4627  030F                     	;# 
  4628  0310                     	;# 
  4629  0310                     	;# 
  4630  0311                     	;# 
  4631  0312                     	;# 
  4632  0313                     	;# 
  4633  0314                     	;# 
  4634  0314                     	;# 
  4635  0315                     	;# 
  4636  0316                     	;# 
  4637  0317                     	;# 
  4638  0318                     	;# 
  4639  0318                     	;# 
  4640  0319                     	;# 
  4641  031A                     	;# 
  4642  031B                     	;# 
  4643  031C                     	;# 
  4644  031C                     	;# 
  4645  031D                     	;# 
  4646  031E                     	;# 
  4647  031F                     	;# 
  4648  038C                     	;# 
  4649  038D                     	;# 
  4650  038E                     	;# 
  4651  0390                     	;# 
  4652  0391                     	;# 
  4653  0392                     	;# 
  4654  040C                     	;# 
  4655  040D                     	;# 
  4656  040E                     	;# 
  4657  040F                     	;# 
  4658  0410                     	;# 
  4659  0411                     	;# 
  4660  0416                     	;# 
  4661  0416                     	;# 
  4662  0417                     	;# 
  4663  0418                     	;# 
  4664  0418                     	;# 
  4665  0419                     	;# 
  4666  041A                     	;# 
  4667  041A                     	;# 
  4668  041B                     	;# 
  4669  041C                     	;# 
  4670  041C                     	;# 
  4671  041D                     	;# 
  4672  041E                     	;# 
  4673  041F                     	;# 
  4674  048C                     	;# 
  4675  048C                     	;# 
  4676  048D                     	;# 
  4677  048E                     	;# 
  4678  048F                     	;# 
  4679  048F                     	;# 
  4680  0490                     	;# 
  4681  0491                     	;# 
  4682  0492                     	;# 
  4683  0492                     	;# 
  4684  0493                     	;# 
  4685  0494                     	;# 
  4686  0495                     	;# 
  4687  0495                     	;# 
  4688  0496                     	;# 
  4689  0497                     	;# 
  4690  0498                     	;# 
  4691  0499                     	;# 
  4692  049A                     	;# 
  4693  049B                     	;# 
  4694  049C                     	;# 
  4695  049D                     	;# 
  4696  050C                     	;# 
  4697  050C                     	;# 
  4698  050D                     	;# 
  4699  050E                     	;# 
  4700  050F                     	;# 
  4701  050F                     	;# 
  4702  0510                     	;# 
  4703  0511                     	;# 
  4704  0512                     	;# 
  4705  0512                     	;# 
  4706  0513                     	;# 
  4707  0514                     	;# 
  4708  0515                     	;# 
  4709  0515                     	;# 
  4710  0516                     	;# 
  4711  0517                     	;# 
  4712  0518                     	;# 
  4713  0519                     	;# 
  4714  051A                     	;# 
  4715  051B                     	;# 
  4716  051C                     	;# 
  4717  051D                     	;# 
  4718  058C                     	;# 
  4719  058C                     	;# 
  4720  058D                     	;# 
  4721  058E                     	;# 
  4722  058F                     	;# 
  4723  058F                     	;# 
  4724  0590                     	;# 
  4725  0591                     	;# 
  4726  0592                     	;# 
  4727  0593                     	;# 
  4728  060C                     	;# 
  4729  060D                     	;# 
  4730  060E                     	;# 
  4731  060F                     	;# 
  4732  0610                     	;# 
  4733  0611                     	;# 
  4734  0612                     	;# 
  4735  0613                     	;# 
  4736  0614                     	;# 
  4737  0616                     	;# 
  4738  0617                     	;# 
  4739  0618                     	;# 
  4740  0619                     	;# 
  4741  061A                     	;# 
  4742  061B                     	;# 
  4743  061C                     	;# 
  4744  061D                     	;# 
  4745  061E                     	;# 
  4746  068C                     	;# 
  4747  068D                     	;# 
  4748  068E                     	;# 
  4749  068F                     	;# 
  4750  0690                     	;# 
  4751  0691                     	;# 
  4752  0692                     	;# 
  4753  0693                     	;# 
  4754  0694                     	;# 
  4755  070C                     	;# 
  4756  070D                     	;# 
  4757  070E                     	;# 
  4758  070F                     	;# 
  4759  0710                     	;# 
  4760  0711                     	;# 
  4761  0712                     	;# 
  4762  0713                     	;# 
  4763  0714                     	;# 
  4764  0716                     	;# 
  4765  0717                     	;# 
  4766  0718                     	;# 
  4767  0719                     	;# 
  4768  071A                     	;# 
  4769  071B                     	;# 
  4770  071C                     	;# 
  4771  071D                     	;# 
  4772  071E                     	;# 
  4773  0796                     	;# 
  4774  0797                     	;# 
  4775  0798                     	;# 
  4776  0799                     	;# 
  4777  079A                     	;# 
  4778  079B                     	;# 
  4779  080C                     	;# 
  4780  080D                     	;# 
  4781  080E                     	;# 
  4782  080F                     	;# 
  4783  0810                     	;# 
  4784  0811                     	;# 
  4785  0812                     	;# 
  4786  0813                     	;# 
  4787  0814                     	;# 
  4788  081A                     	;# 
  4789  081B                     	;# 
  4790  081C                     	;# 
  4791  081D                     	;# 
  4792  081E                     	;# 
  4793  081F                     	;# 
  4794  088C                     	;# 
  4795  088D                     	;# 
  4796  088E                     	;# 
  4797  088F                     	;# 
  4798  0890                     	;# 
  4799  0891                     	;# 
  4800  0892                     	;# 
  4801  0893                     	;# 
  4802  0895                     	;# 
  4803  0896                     	;# 
  4804  0897                     	;# 
  4805  0898                     	;# 
  4806  0899                     	;# 
  4807  089A                     	;# 
  4808  089B                     	;# 
  4809  090C                     	;# 
  4810  090E                     	;# 
  4811  090F                     	;# 
  4812  091F                     	;# 
  4813  091F                     	;# 
  4814  098F                     	;# 
  4815  098F                     	;# 
  4816  0990                     	;# 
  4817  0991                     	;# 
  4818  0992                     	;# 
  4819  0993                     	;# 
  4820  0994                     	;# 
  4821  0995                     	;# 
  4822  0996                     	;# 
  4823  0997                     	;# 
  4824  0E0F                     	;# 
  4825  0E10                     	;# 
  4826  0E11                     	;# 
  4827  0E12                     	;# 
  4828  0E13                     	;# 
  4829  0E14                     	;# 
  4830  0E15                     	;# 
  4831  0E16                     	;# 
  4832  0E17                     	;# 
  4833  0E18                     	;# 
  4834  0E19                     	;# 
  4835  0E1A                     	;# 
  4836  0E1B                     	;# 
  4837  0E1C                     	;# 
  4838  0E1D                     	;# 
  4839  0E1E                     	;# 
  4840  0E1F                     	;# 
  4841  0E20                     	;# 
  4842  0E21                     	;# 
  4843  0E22                     	;# 
  4844  0E23                     	;# 
  4845  0E24                     	;# 
  4846  0E25                     	;# 
  4847  0E26                     	;# 
  4848  0E27                     	;# 
  4849  0E28                     	;# 
  4850  0E29                     	;# 
  4851  0E2A                     	;# 
  4852  0E2B                     	;# 
  4853  0E2C                     	;# 
  4854  0E2D                     	;# 
  4855  0E2E                     	;# 
  4856  0E2F                     	;# 
  4857  0E30                     	;# 
  4858  0E31                     	;# 
  4859  0E32                     	;# 
  4860  0E33                     	;# 
  4861  0E34                     	;# 
  4862  0E35                     	;# 
  4863  0E36                     	;# 
  4864  0E37                     	;# 
  4865  0E8F                     	;# 
  4866  0E90                     	;# 
  4867  0E91                     	;# 
  4868  0E92                     	;# 
  4869  0E93                     	;# 
  4870  0E94                     	;# 
  4871  0E95                     	;# 
  4872  0E96                     	;# 
  4873  0E97                     	;# 
  4874  0E9C                     	;# 
  4875  0E9D                     	;# 
  4876  0E9E                     	;# 
  4877  0EA1                     	;# 
  4878  0EA2                     	;# 
  4879  0EA3                     	;# 
  4880  0EA4                     	;# 
  4881  0EA5                     	;# 
  4882  0EA9                     	;# 
  4883  0EAA                     	;# 
  4884  0EAB                     	;# 
  4885  0EAC                     	;# 
  4886  0EB1                     	;# 
  4887  0EB2                     	;# 
  4888  0EB3                     	;# 
  4889  0EB8                     	;# 
  4890  0EB9                     	;# 
  4891  0EBA                     	;# 
  4892  0EBB                     	;# 
  4893  0EBC                     	;# 
  4894  0EBD                     	;# 
  4895  0EBE                     	;# 
  4896  0EC3                     	;# 
  4897  0EC5                     	;# 
  4898  0EC6                     	;# 
  4899  0EC7                     	;# 
  4900  0EC8                     	;# 
  4901  0EC9                     	;# 
  4902  0ECA                     	;# 
  4903  0ECB                     	;# 
  4904  0ECC                     	;# 
  4905  0F10                     	;# 
  4906  0F11                     	;# 
  4907  0F12                     	;# 
  4908  0F13                     	;# 
  4909  0F14                     	;# 
  4910  0F15                     	;# 
  4911  0F16                     	;# 
  4912  0F17                     	;# 
  4913  0F18                     	;# 
  4914  0F19                     	;# 
  4915  0F1A                     	;# 
  4916  0F1B                     	;# 
  4917  0F1C                     	;# 
  4918  0F1D                     	;# 
  4919  0F1E                     	;# 
  4920  0F1F                     	;# 
  4921  0F20                     	;# 
  4922  0F21                     	;# 
  4923  0F22                     	;# 
  4924  0F23                     	;# 
  4925  0F24                     	;# 
  4926  0F25                     	;# 
  4927  0F26                     	;# 
  4928  0F27                     	;# 
  4929  0F28                     	;# 
  4930  0F29                     	;# 
  4931  0F2A                     	;# 
  4932  0F2B                     	;# 
  4933  0F2C                     	;# 
  4934  0F2D                     	;# 
  4935  0F2E                     	;# 
  4936  0F2F                     	;# 
  4937  0F30                     	;# 
  4938  0F31                     	;# 
  4939  0F32                     	;# 
  4940  0F38                     	;# 
  4941  0F39                     	;# 
  4942  0F3A                     	;# 
  4943  0F3B                     	;# 
  4944  0F3C                     	;# 
  4945  0F3D                     	;# 
  4946  0F3E                     	;# 
  4947  0F3F                     	;# 
  4948  0F40                     	;# 
  4949  0F41                     	;# 
  4950  0F43                     	;# 
  4951  0F44                     	;# 
  4952  0F45                     	;# 
  4953  0F46                     	;# 
  4954  0F47                     	;# 
  4955  0F48                     	;# 
  4956  0F49                     	;# 
  4957  0F4A                     	;# 
  4958  0F4B                     	;# 
  4959  0F4C                     	;# 
  4960  0F4E                     	;# 
  4961  0F4F                     	;# 
  4962  0F50                     	;# 
  4963  0F51                     	;# 
  4964  0F52                     	;# 
  4965  0F53                     	;# 
  4966  0F54                     	;# 
  4967  0F55                     	;# 
  4968  0F56                     	;# 
  4969  0F57                     	;# 
  4970  0F59                     	;# 
  4971  0F5A                     	;# 
  4972  0F5B                     	;# 
  4973  0F5C                     	;# 
  4974  0F5D                     	;# 
  4975  0F61                     	;# 
  4976  0F62                     	;# 
  4977  0F64                     	;# 
  4978  0F65                     	;# 
  4979  0F66                     	;# 
  4980  0F67                     	;# 
  4981  0F68                     	;# 
  4982  0F69                     	;# 
  4983  0F6A                     	;# 
  4984  0F6B                     	;# 
  4985  0F6C                     	;# 
  4986  0F6D                     	;# 
  4987  0FE4                     	;# 
  4988  0FE5                     	;# 
  4989  0FE6                     	;# 
  4990  0FE7                     	;# 
  4991  0FE8                     	;# 
  4992  0FE9                     	;# 
  4993  0FEA                     	;# 
  4994  0FEB                     	;# 
  4995  0FED                     	;# 
  4996  0FEE                     	;# 
  4997  0FEF                     	;# 
  4998  0000                     	;# 
  4999  0001                     	;# 
  5000  0002                     	;# 
  5001  0003                     	;# 
  5002  0004                     	;# 
  5003  0005                     	;# 
  5004  0006                     	;# 
  5005  0007                     	;# 
  5006  0008                     	;# 
  5007  0009                     	;# 
  5008  000A                     	;# 
  5009  000B                     	;# 
  5010  000C                     	;# 
  5011  000D                     	;# 
  5012  000E                     	;# 
  5013  000F                     	;# 
  5014  0010                     	;# 
  5015  0011                     	;# 
  5016  0012                     	;# 
  5017  0013                     	;# 
  5018  0014                     	;# 
  5019  0015                     	;# 
  5020  0016                     	;# 
  5021  0017                     	;# 
  5022  0018                     	;# 
  5023  0019                     	;# 
  5024  001A                     	;# 
  5025  001C                     	;# 
  5026  001C                     	;# 
  5027  001D                     	;# 
  5028  001D                     	;# 
  5029  001E                     	;# 
  5030  001F                     	;# 
  5031  008C                     	;# 
  5032  008C                     	;# 
  5033  008D                     	;# 
  5034  008E                     	;# 
  5035  008E                     	;# 
  5036  008F                     	;# 
  5037  0090                     	;# 
  5038  0090                     	;# 
  5039  0091                     	;# 
  5040  0093                     	;# 
  5041  0094                     	;# 
  5042  0095                     	;# 
  5043  0096                     	;# 
  5044  0097                     	;# 
  5045  0098                     	;# 
  5046  0099                     	;# 
  5047  009A                     	;# 
  5048  009B                     	;# 
  5049  009C                     	;# 
  5050  009D                     	;# 
  5051  009E                     	;# 
  5052  010C                     	;# 
  5053  010D                     	;# 
  5054  010E                     	;# 
  5055  010E                     	;# 
  5056  010F                     	;# 
  5057  0110                     	;# 
  5058  0110                     	;# 
  5059  0111                     	;# 
  5060  0112                     	;# 
  5061  0112                     	;# 
  5062  0113                     	;# 
  5063  0114                     	;# 
  5064  0114                     	;# 
  5065  0115                     	;# 
  5066  0116                     	;# 
  5067  0116                     	;# 
  5068  0117                     	;# 
  5069  0119                     	;# 
  5070  0119                     	;# 
  5071  0119                     	;# 
  5072  011A                     	;# 
  5073  011A                     	;# 
  5074  011A                     	;# 
  5075  011B                     	;# 
  5076  011B                     	;# 
  5077  011B                     	;# 
  5078  011B                     	;# 
  5079  011B                     	;# 
  5080  011C                     	;# 
  5081  011C                     	;# 
  5082  011C                     	;# 
  5083  011D                     	;# 
  5084  011D                     	;# 
  5085  011D                     	;# 
  5086  011E                     	;# 
  5087  011E                     	;# 
  5088  011E                     	;# 
  5089  011F                     	;# 
  5090  011F                     	;# 
  5091  011F                     	;# 
  5092  011F                     	;# 
  5093  011F                     	;# 
  5094  018C                     	;# 
  5095  018D                     	;# 
  5096  018E                     	;# 
  5097  018F                     	;# 
  5098  0190                     	;# 
  5099  0191                     	;# 
  5100  0192                     	;# 
  5101  0196                     	;# 
  5102  0197                     	;# 
  5103  0198                     	;# 
  5104  0199                     	;# 
  5105  019A                     	;# 
  5106  019B                     	;# 
  5107  019C                     	;# 
  5108  020C                     	;# 
  5109  020C                     	;# 
  5110  020D                     	;# 
  5111  020E                     	;# 
  5112  020F                     	;# 
  5113  020F                     	;# 
  5114  0210                     	;# 
  5115  0210                     	;# 
  5116  0211                     	;# 
  5117  0211                     	;# 
  5118  0212                     	;# 
  5119  0212                     	;# 
  5120  0213                     	;# 
  5121  0214                     	;# 
  5122  0215                     	;# 
  5123  0215                     	;# 
  5124  0216                     	;# 
  5125  0216                     	;# 
  5126  0217                     	;# 
  5127  0217                     	;# 
  5128  0218                     	;# 
  5129  0218                     	;# 
  5130  0219                     	;# 
  5131  021A                     	;# 
  5132  021B                     	;# 
  5133  021B                     	;# 
  5134  021C                     	;# 
  5135  021C                     	;# 
  5136  021D                     	;# 
  5137  021D                     	;# 
  5138  021E                     	;# 
  5139  021F                     	;# 
  5140  028C                     	;# 
  5141  028C                     	;# 
  5142  028D                     	;# 
  5143  028D                     	;# 
  5144  028E                     	;# 
  5145  028F                     	;# 
  5146  0290                     	;# 
  5147  0290                     	;# 
  5148  0291                     	;# 
  5149  0292                     	;# 
  5150  0292                     	;# 
  5151  0293                     	;# 
  5152  0293                     	;# 
  5153  0294                     	;# 
  5154  0295                     	;# 
  5155  0296                     	;# 
  5156  0296                     	;# 
  5157  0297                     	;# 
  5158  0298                     	;# 
  5159  0298                     	;# 
  5160  0299                     	;# 
  5161  0299                     	;# 
  5162  029A                     	;# 
  5163  029B                     	;# 
  5164  029C                     	;# 
  5165  029C                     	;# 
  5166  029D                     	;# 
  5167  030C                     	;# 
  5168  030C                     	;# 
  5169  030D                     	;# 
  5170  030E                     	;# 
  5171  030F                     	;# 
  5172  0310                     	;# 
  5173  0310                     	;# 
  5174  0311                     	;# 
  5175  0312                     	;# 
  5176  0313                     	;# 
  5177  0314                     	;# 
  5178  0314                     	;# 
  5179  0315                     	;# 
  5180  0316                     	;# 
  5181  0317                     	;# 
  5182  0318                     	;# 
  5183  0318                     	;# 
  5184  0319                     	;# 
  5185  031A                     	;# 
  5186  031B                     	;# 
  5187  031C                     	;# 
  5188  031C                     	;# 
  5189  031D                     	;# 
  5190  031E                     	;# 
  5191  031F                     	;# 
  5192  038C                     	;# 
  5193  038D                     	;# 
  5194  038E                     	;# 
  5195  0390                     	;# 
  5196  0391                     	;# 
  5197  0392                     	;# 
  5198  040C                     	;# 
  5199  040D                     	;# 
  5200  040E                     	;# 
  5201  040F                     	;# 
  5202  0410                     	;# 
  5203  0411                     	;# 
  5204  0416                     	;# 
  5205  0416                     	;# 
  5206  0417                     	;# 
  5207  0418                     	;# 
  5208  0418                     	;# 
  5209  0419                     	;# 
  5210  041A                     	;# 
  5211  041A                     	;# 
  5212  041B                     	;# 
  5213  041C                     	;# 
  5214  041C                     	;# 
  5215  041D                     	;# 
  5216  041E                     	;# 
  5217  041F                     	;# 
  5218  048C                     	;# 
  5219  048C                     	;# 
  5220  048D                     	;# 
  5221  048E                     	;# 
  5222  048F                     	;# 
  5223  048F                     	;# 
  5224  0490                     	;# 
  5225  0491                     	;# 
  5226  0492                     	;# 
  5227  0492                     	;# 
  5228  0493                     	;# 
  5229  0494                     	;# 
  5230  0495                     	;# 
  5231  0495                     	;# 
  5232  0496                     	;# 
  5233  0497                     	;# 
  5234  0498                     	;# 
  5235  0499                     	;# 
  5236  049A                     	;# 
  5237  049B                     	;# 
  5238  049C                     	;# 
  5239  049D                     	;# 
  5240  050C                     	;# 
  5241  050C                     	;# 
  5242  050D                     	;# 
  5243  050E                     	;# 
  5244  050F                     	;# 
  5245  050F                     	;# 
  5246  0510                     	;# 
  5247  0511                     	;# 
  5248  0512                     	;# 
  5249  0512                     	;# 
  5250  0513                     	;# 
  5251  0514                     	;# 
  5252  0515                     	;# 
  5253  0515                     	;# 
  5254  0516                     	;# 
  5255  0517                     	;# 
  5256  0518                     	;# 
  5257  0519                     	;# 
  5258  051A                     	;# 
  5259  051B                     	;# 
  5260  051C                     	;# 
  5261  051D                     	;# 
  5262  058C                     	;# 
  5263  058C                     	;# 
  5264  058D                     	;# 
  5265  058E                     	;# 
  5266  058F                     	;# 
  5267  058F                     	;# 
  5268  0590                     	;# 
  5269  0591                     	;# 
  5270  0592                     	;# 
  5271  0593                     	;# 
  5272  060C                     	;# 
  5273  060D                     	;# 
  5274  060E                     	;# 
  5275  060F                     	;# 
  5276  0610                     	;# 
  5277  0611                     	;# 
  5278  0612                     	;# 
  5279  0613                     	;# 
  5280  0614                     	;# 
  5281  0616                     	;# 
  5282  0617                     	;# 
  5283  0618                     	;# 
  5284  0619                     	;# 
  5285  061A                     	;# 
  5286  061B                     	;# 
  5287  061C                     	;# 
  5288  061D                     	;# 
  5289  061E                     	;# 
  5290  068C                     	;# 
  5291  068D                     	;# 
  5292  068E                     	;# 
  5293  068F                     	;# 
  5294  0690                     	;# 
  5295  0691                     	;# 
  5296  0692                     	;# 
  5297  0693                     	;# 
  5298  0694                     	;# 
  5299  070C                     	;# 
  5300  070D                     	;# 
  5301  070E                     	;# 
  5302  070F                     	;# 
  5303  0710                     	;# 
  5304  0711                     	;# 
  5305  0712                     	;# 
  5306  0713                     	;# 
  5307  0714                     	;# 
  5308  0716                     	;# 
  5309  0717                     	;# 
  5310  0718                     	;# 
  5311  0719                     	;# 
  5312  071A                     	;# 
  5313  071B                     	;# 
  5314  071C                     	;# 
  5315  071D                     	;# 
  5316  071E                     	;# 
  5317  0796                     	;# 
  5318  0797                     	;# 
  5319  0798                     	;# 
  5320  0799                     	;# 
  5321  079A                     	;# 
  5322  079B                     	;# 
  5323  080C                     	;# 
  5324  080D                     	;# 
  5325  080E                     	;# 
  5326  080F                     	;# 
  5327  0810                     	;# 
  5328  0811                     	;# 
  5329  0812                     	;# 
  5330  0813                     	;# 
  5331  0814                     	;# 
  5332  081A                     	;# 
  5333  081B                     	;# 
  5334  081C                     	;# 
  5335  081D                     	;# 
  5336  081E                     	;# 
  5337  081F                     	;# 
  5338  088C                     	;# 
  5339  088D                     	;# 
  5340  088E                     	;# 
  5341  088F                     	;# 
  5342  0890                     	;# 
  5343  0891                     	;# 
  5344  0892                     	;# 
  5345  0893                     	;# 
  5346  0895                     	;# 
  5347  0896                     	;# 
  5348  0897                     	;# 
  5349  0898                     	;# 
  5350  0899                     	;# 
  5351  089A                     	;# 
  5352  089B                     	;# 
  5353  090C                     	;# 
  5354  090E                     	;# 
  5355  090F                     	;# 
  5356  091F                     	;# 
  5357  091F                     	;# 
  5358  098F                     	;# 
  5359  098F                     	;# 
  5360  0990                     	;# 
  5361  0991                     	;# 
  5362  0992                     	;# 
  5363  0993                     	;# 
  5364  0994                     	;# 
  5365  0995                     	;# 
  5366  0996                     	;# 
  5367  0997                     	;# 
  5368  0E0F                     	;# 
  5369  0E10                     	;# 
  5370  0E11                     	;# 
  5371  0E12                     	;# 
  5372  0E13                     	;# 
  5373  0E14                     	;# 
  5374  0E15                     	;# 
  5375  0E16                     	;# 
  5376  0E17                     	;# 
  5377  0E18                     	;# 
  5378  0E19                     	;# 
  5379  0E1A                     	;# 
  5380  0E1B                     	;# 
  5381  0E1C                     	;# 
  5382  0E1D                     	;# 
  5383  0E1E                     	;# 
  5384  0E1F                     	;# 
  5385  0E20                     	;# 
  5386  0E21                     	;# 
  5387  0E22                     	;# 
  5388  0E23                     	;# 
  5389  0E24                     	;# 
  5390  0E25                     	;# 
  5391  0E26                     	;# 
  5392  0E27                     	;# 
  5393  0E28                     	;# 
  5394  0E29                     	;# 
  5395  0E2A                     	;# 
  5396  0E2B                     	;# 
  5397  0E2C                     	;# 
  5398  0E2D                     	;# 
  5399  0E2E                     	;# 
  5400  0E2F                     	;# 
  5401  0E30                     	;# 
  5402  0E31                     	;# 
  5403  0E32                     	;# 
  5404  0E33                     	;# 
  5405  0E34                     	;# 
  5406  0E35                     	;# 
  5407  0E36                     	;# 
  5408  0E37                     	;# 
  5409  0E8F                     	;# 
  5410  0E90                     	;# 
  5411  0E91                     	;# 
  5412  0E92                     	;# 
  5413  0E93                     	;# 
  5414  0E94                     	;# 
  5415  0E95                     	;# 
  5416  0E96                     	;# 
  5417  0E97                     	;# 
  5418  0E9C                     	;# 
  5419  0E9D                     	;# 
  5420  0E9E                     	;# 
  5421  0EA1                     	;# 
  5422  0EA2                     	;# 
  5423  0EA3                     	;# 
  5424  0EA4                     	;# 
  5425  0EA5                     	;# 
  5426  0EA9                     	;# 
  5427  0EAA                     	;# 
  5428  0EAB                     	;# 
  5429  0EAC                     	;# 
  5430  0EB1                     	;# 
  5431  0EB2                     	;# 
  5432  0EB3                     	;# 
  5433  0EB8                     	;# 
  5434  0EB9                     	;# 
  5435  0EBA                     	;# 
  5436  0EBB                     	;# 
  5437  0EBC                     	;# 
  5438  0EBD                     	;# 
  5439  0EBE                     	;# 
  5440  0EC3                     	;# 
  5441  0EC5                     	;# 
  5442  0EC6                     	;# 
  5443  0EC7                     	;# 
  5444  0EC8                     	;# 
  5445  0EC9                     	;# 
  5446  0ECA                     	;# 
  5447  0ECB                     	;# 
  5448  0ECC                     	;# 
  5449  0F10                     	;# 
  5450  0F11                     	;# 
  5451  0F12                     	;# 
  5452  0F13                     	;# 
  5453  0F14                     	;# 
  5454  0F15                     	;# 
  5455  0F16                     	;# 
  5456  0F17                     	;# 
  5457  0F18                     	;# 
  5458  0F19                     	;# 
  5459  0F1A                     	;# 
  5460  0F1B                     	;# 
  5461  0F1C                     	;# 
  5462  0F1D                     	;# 
  5463  0F1E                     	;# 
  5464  0F1F                     	;# 
  5465  0F20                     	;# 
  5466  0F21                     	;# 
  5467  0F22                     	;# 
  5468  0F23                     	;# 
  5469  0F24                     	;# 
  5470  0F25                     	;# 
  5471  0F26                     	;# 
  5472  0F27                     	;# 
  5473  0F28                     	;# 
  5474  0F29                     	;# 
  5475  0F2A                     	;# 
  5476  0F2B                     	;# 
  5477  0F2C                     	;# 
  5478  0F2D                     	;# 
  5479  0F2E                     	;# 
  5480  0F2F                     	;# 
  5481  0F30                     	;# 
  5482  0F31                     	;# 
  5483  0F32                     	;# 
  5484  0F38                     	;# 
  5485  0F39                     	;# 
  5486  0F3A                     	;# 
  5487  0F3B                     	;# 
  5488  0F3C                     	;# 
  5489  0F3D                     	;# 
  5490  0F3E                     	;# 
  5491  0F3F                     	;# 
  5492  0F40                     	;# 
  5493  0F41                     	;# 
  5494  0F43                     	;# 
  5495  0F44                     	;# 
  5496  0F45                     	;# 
  5497  0F46                     	;# 
  5498  0F47                     	;# 
  5499  0F48                     	;# 
  5500  0F49                     	;# 
  5501  0F4A                     	;# 
  5502  0F4B                     	;# 
  5503  0F4C                     	;# 
  5504  0F4E                     	;# 
  5505  0F4F                     	;# 
  5506  0F50                     	;# 
  5507  0F51                     	;# 
  5508  0F52                     	;# 
  5509  0F53                     	;# 
  5510  0F54                     	;# 
  5511  0F55                     	;# 
  5512  0F56                     	;# 
  5513  0F57                     	;# 
  5514  0F59                     	;# 
  5515  0F5A                     	;# 
  5516  0F5B                     	;# 
  5517  0F5C                     	;# 
  5518  0F5D                     	;# 
  5519  0F61                     	;# 
  5520  0F62                     	;# 
  5521  0F64                     	;# 
  5522  0F65                     	;# 
  5523  0F66                     	;# 
  5524  0F67                     	;# 
  5525  0F68                     	;# 
  5526  0F69                     	;# 
  5527  0F6A                     	;# 
  5528  0F6B                     	;# 
  5529  0F6C                     	;# 
  5530  0F6D                     	;# 
  5531  0FE4                     	;# 
  5532  0FE5                     	;# 
  5533  0FE6                     	;# 
  5534  0FE7                     	;# 
  5535  0FE8                     	;# 
  5536  0FE9                     	;# 
  5537  0FEA                     	;# 
  5538  0FEB                     	;# 
  5539  0FED                     	;# 
  5540  0FEE                     	;# 
  5541  0FEF                     	;# 
  5542  0000                     	;# 
  5543  0001                     	;# 
  5544  0002                     	;# 
  5545  0003                     	;# 
  5546  0004                     	;# 
  5547  0005                     	;# 
  5548  0006                     	;# 
  5549  0007                     	;# 
  5550  0008                     	;# 
  5551  0009                     	;# 
  5552  000A                     	;# 
  5553  000B                     	;# 
  5554  000C                     	;# 
  5555  000D                     	;# 
  5556  000E                     	;# 
  5557  000F                     	;# 
  5558  0010                     	;# 
  5559  0011                     	;# 
  5560  0012                     	;# 
  5561  0013                     	;# 
  5562  0014                     	;# 
  5563  0015                     	;# 
  5564  0016                     	;# 
  5565  0017                     	;# 
  5566  0018                     	;# 
  5567  0019                     	;# 
  5568  001A                     	;# 
  5569  001C                     	;# 
  5570  001C                     	;# 
  5571  001D                     	;# 
  5572  001D                     	;# 
  5573  001E                     	;# 
  5574  001F                     	;# 
  5575  008C                     	;# 
  5576  008C                     	;# 
  5577  008D                     	;# 
  5578  008E                     	;# 
  5579  008E                     	;# 
  5580  008F                     	;# 
  5581  0090                     	;# 
  5582  0090                     	;# 
  5583  0091                     	;# 
  5584  0093                     	;# 
  5585  0094                     	;# 
  5586  0095                     	;# 
  5587  0096                     	;# 
  5588  0097                     	;# 
  5589  0098                     	;# 
  5590  0099                     	;# 
  5591  009A                     	;# 
  5592  009B                     	;# 
  5593  009C                     	;# 
  5594  009D                     	;# 
  5595  009E                     	;# 
  5596  010C                     	;# 
  5597  010D                     	;# 
  5598  010E                     	;# 
  5599  010E                     	;# 
  5600  010F                     	;# 
  5601  0110                     	;# 
  5602  0110                     	;# 
  5603  0111                     	;# 
  5604  0112                     	;# 
  5605  0112                     	;# 
  5606  0113                     	;# 
  5607  0114                     	;# 
  5608  0114                     	;# 
  5609  0115                     	;# 
  5610  0116                     	;# 
  5611  0116                     	;# 
  5612  0117                     	;# 
  5613  0119                     	;# 
  5614  0119                     	;# 
  5615  0119                     	;# 
  5616  011A                     	;# 
  5617  011A                     	;# 
  5618  011A                     	;# 
  5619  011B                     	;# 
  5620  011B                     	;# 
  5621  011B                     	;# 
  5622  011B                     	;# 
  5623  011B                     	;# 
  5624  011C                     	;# 
  5625  011C                     	;# 
  5626  011C                     	;# 
  5627  011D                     	;# 
  5628  011D                     	;# 
  5629  011D                     	;# 
  5630  011E                     	;# 
  5631  011E                     	;# 
  5632  011E                     	;# 
  5633  011F                     	;# 
  5634  011F                     	;# 
  5635  011F                     	;# 
  5636  011F                     	;# 
  5637  011F                     	;# 
  5638  018C                     	;# 
  5639  018D                     	;# 
  5640  018E                     	;# 
  5641  018F                     	;# 
  5642  0190                     	;# 
  5643  0191                     	;# 
  5644  0192                     	;# 
  5645  0196                     	;# 
  5646  0197                     	;# 
  5647  0198                     	;# 
  5648  0199                     	;# 
  5649  019A                     	;# 
  5650  019B                     	;# 
  5651  019C                     	;# 
  5652  020C                     	;# 
  5653  020C                     	;# 
  5654  020D                     	;# 
  5655  020E                     	;# 
  5656  020F                     	;# 
  5657  020F                     	;# 
  5658  0210                     	;# 
  5659  0210                     	;# 
  5660  0211                     	;# 
  5661  0211                     	;# 
  5662  0212                     	;# 
  5663  0212                     	;# 
  5664  0213                     	;# 
  5665  0214                     	;# 
  5666  0215                     	;# 
  5667  0215                     	;# 
  5668  0216                     	;# 
  5669  0216                     	;# 
  5670  0217                     	;# 
  5671  0217                     	;# 
  5672  0218                     	;# 
  5673  0218                     	;# 
  5674  0219                     	;# 
  5675  021A                     	;# 
  5676  021B                     	;# 
  5677  021B                     	;# 
  5678  021C                     	;# 
  5679  021C                     	;# 
  5680  021D                     	;# 
  5681  021D                     	;# 
  5682  021E                     	;# 
  5683  021F                     	;# 
  5684  028C                     	;# 
  5685  028C                     	;# 
  5686  028D                     	;# 
  5687  028D                     	;# 
  5688  028E                     	;# 
  5689  028F                     	;# 
  5690  0290                     	;# 
  5691  0290                     	;# 
  5692  0291                     	;# 
  5693  0292                     	;# 
  5694  0292                     	;# 
  5695  0293                     	;# 
  5696  0293                     	;# 
  5697  0294                     	;# 
  5698  0295                     	;# 
  5699  0296                     	;# 
  5700  0296                     	;# 
  5701  0297                     	;# 
  5702  0298                     	;# 
  5703  0298                     	;# 
  5704  0299                     	;# 
  5705  0299                     	;# 
  5706  029A                     	;# 
  5707  029B                     	;# 
  5708  029C                     	;# 
  5709  029C                     	;# 
  5710  029D                     	;# 
  5711  030C                     	;# 
  5712  030C                     	;# 
  5713  030D                     	;# 
  5714  030E                     	;# 
  5715  030F                     	;# 
  5716  0310                     	;# 
  5717  0310                     	;# 
  5718  0311                     	;# 
  5719  0312                     	;# 
  5720  0313                     	;# 
  5721  0314                     	;# 
  5722  0314                     	;# 
  5723  0315                     	;# 
  5724  0316                     	;# 
  5725  0317                     	;# 
  5726  0318                     	;# 
  5727  0318                     	;# 
  5728  0319                     	;# 
  5729  031A                     	;# 
  5730  031B                     	;# 
  5731  031C                     	;# 
  5732  031C                     	;# 
  5733  031D                     	;# 
  5734  031E                     	;# 
  5735  031F                     	;# 
  5736  038C                     	;# 
  5737  038D                     	;# 
  5738  038E                     	;# 
  5739  0390                     	;# 
  5740  0391                     	;# 
  5741  0392                     	;# 
  5742  040C                     	;# 
  5743  040D                     	;# 
  5744  040E                     	;# 
  5745  040F                     	;# 
  5746  0410                     	;# 
  5747  0411                     	;# 
  5748  0416                     	;# 
  5749  0416                     	;# 
  5750  0417                     	;# 
  5751  0418                     	;# 
  5752  0418                     	;# 
  5753  0419                     	;# 
  5754  041A                     	;# 
  5755  041A                     	;# 
  5756  041B                     	;# 
  5757  041C                     	;# 
  5758  041C                     	;# 
  5759  041D                     	;# 
  5760  041E                     	;# 
  5761  041F                     	;# 
  5762  048C                     	;# 
  5763  048C                     	;# 
  5764  048D                     	;# 
  5765  048E                     	;# 
  5766  048F                     	;# 
  5767  048F                     	;# 
  5768  0490                     	;# 
  5769  0491                     	;# 
  5770  0492                     	;# 
  5771  0492                     	;# 
  5772  0493                     	;# 
  5773  0494                     	;# 
  5774  0495                     	;# 
  5775  0495                     	;# 
  5776  0496                     	;# 
  5777  0497                     	;# 
  5778  0498                     	;# 
  5779  0499                     	;# 
  5780  049A                     	;# 
  5781  049B                     	;# 
  5782  049C                     	;# 
  5783  049D                     	;# 
  5784  050C                     	;# 
  5785  050C                     	;# 
  5786  050D                     	;# 
  5787  050E                     	;# 
  5788  050F                     	;# 
  5789  050F                     	;# 
  5790  0510                     	;# 
  5791  0511                     	;# 
  5792  0512                     	;# 
  5793  0512                     	;# 
  5794  0513                     	;# 
  5795  0514                     	;# 
  5796  0515                     	;# 
  5797  0515                     	;# 
  5798  0516                     	;# 
  5799  0517                     	;# 
  5800  0518                     	;# 
  5801  0519                     	;# 
  5802  051A                     	;# 
  5803  051B                     	;# 
  5804  051C                     	;# 
  5805  051D                     	;# 
  5806  058C                     	;# 
  5807  058C                     	;# 
  5808  058D                     	;# 
  5809  058E                     	;# 
  5810  058F                     	;# 
  5811  058F                     	;# 
  5812  0590                     	;# 
  5813  0591                     	;# 
  5814  0592                     	;# 
  5815  0593                     	;# 
  5816  060C                     	;# 
  5817  060D                     	;# 
  5818  060E                     	;# 
  5819  060F                     	;# 
  5820  0610                     	;# 
  5821  0611                     	;# 
  5822  0612                     	;# 
  5823  0613                     	;# 
  5824  0614                     	;# 
  5825  0616                     	;# 
  5826  0617                     	;# 
  5827  0618                     	;# 
  5828  0619                     	;# 
  5829  061A                     	;# 
  5830  061B                     	;# 
  5831  061C                     	;# 
  5832  061D                     	;# 
  5833  061E                     	;# 
  5834  068C                     	;# 
  5835  068D                     	;# 
  5836  068E                     	;# 
  5837  068F                     	;# 
  5838  0690                     	;# 
  5839  0691                     	;# 
  5840  0692                     	;# 
  5841  0693                     	;# 
  5842  0694                     	;# 
  5843  070C                     	;# 
  5844  070D                     	;# 
  5845  070E                     	;# 
  5846  070F                     	;# 
  5847  0710                     	;# 
  5848  0711                     	;# 
  5849  0712                     	;# 
  5850  0713                     	;# 
  5851  0714                     	;# 
  5852  0716                     	;# 
  5853  0717                     	;# 
  5854  0718                     	;# 
  5855  0719                     	;# 
  5856  071A                     	;# 
  5857  071B                     	;# 
  5858  071C                     	;# 
  5859  071D                     	;# 
  5860  071E                     	;# 
  5861  0796                     	;# 
  5862  0797                     	;# 
  5863  0798                     	;# 
  5864  0799                     	;# 
  5865  079A                     	;# 
  5866  079B                     	;# 
  5867  080C                     	;# 
  5868  080D                     	;# 
  5869  080E                     	;# 
  5870  080F                     	;# 
  5871  0810                     	;# 
  5872  0811                     	;# 
  5873  0812                     	;# 
  5874  0813                     	;# 
  5875  0814                     	;# 
  5876  081A                     	;# 
  5877  081B                     	;# 
  5878  081C                     	;# 
  5879  081D                     	;# 
  5880  081E                     	;# 
  5881  081F                     	;# 
  5882  088C                     	;# 
  5883  088D                     	;# 
  5884  088E                     	;# 
  5885  088F                     	;# 
  5886  0890                     	;# 
  5887  0891                     	;# 
  5888  0892                     	;# 
  5889  0893                     	;# 
  5890  0895                     	;# 
  5891  0896                     	;# 
  5892  0897                     	;# 
  5893  0898                     	;# 
  5894  0899                     	;# 
  5895  089A                     	;# 
  5896  089B                     	;# 
  5897  090C                     	;# 
  5898  090E                     	;# 
  5899  090F                     	;# 
  5900  091F                     	;# 
  5901  091F                     	;# 
  5902  098F                     	;# 
  5903  098F                     	;# 
  5904  0990                     	;# 
  5905  0991                     	;# 
  5906  0992                     	;# 
  5907  0993                     	;# 
  5908  0994                     	;# 
  5909  0995                     	;# 
  5910  0996                     	;# 
  5911  0997                     	;# 
  5912  0E0F                     	;# 
  5913  0E10                     	;# 
  5914  0E11                     	;# 
  5915  0E12                     	;# 
  5916  0E13                     	;# 
  5917  0E14                     	;# 
  5918  0E15                     	;# 
  5919  0E16                     	;# 
  5920  0E17                     	;# 
  5921  0E18                     	;# 
  5922  0E19                     	;# 
  5923  0E1A                     	;# 
  5924  0E1B                     	;# 
  5925  0E1C                     	;# 
  5926  0E1D                     	;# 
  5927  0E1E                     	;# 
  5928  0E1F                     	;# 
  5929  0E20                     	;# 
  5930  0E21                     	;# 
  5931  0E22                     	;# 
  5932  0E23                     	;# 
  5933  0E24                     	;# 
  5934  0E25                     	;# 
  5935  0E26                     	;# 
  5936  0E27                     	;# 
  5937  0E28                     	;# 
  5938  0E29                     	;# 
  5939  0E2A                     	;# 
  5940  0E2B                     	;# 
  5941  0E2C                     	;# 
  5942  0E2D                     	;# 
  5943  0E2E                     	;# 
  5944  0E2F                     	;# 
  5945  0E30                     	;# 
  5946  0E31                     	;# 
  5947  0E32                     	;# 
  5948  0E33                     	;# 
  5949  0E34                     	;# 
  5950  0E35                     	;# 
  5951  0E36                     	;# 
  5952  0E37                     	;# 
  5953  0E8F                     	;# 
  5954  0E90                     	;# 
  5955  0E91                     	;# 
  5956  0E92                     	;# 
  5957  0E93                     	;# 
  5958  0E94                     	;# 
  5959  0E95                     	;# 
  5960  0E96                     	;# 
  5961  0E97                     	;# 
  5962  0E9C                     	;# 
  5963  0E9D                     	;# 
  5964  0E9E                     	;# 
  5965  0EA1                     	;# 
  5966  0EA2                     	;# 
  5967  0EA3                     	;# 
  5968  0EA4                     	;# 
  5969  0EA5                     	;# 
  5970  0EA9                     	;# 
  5971  0EAA                     	;# 
  5972  0EAB                     	;# 
  5973  0EAC                     	;# 
  5974  0EB1                     	;# 
  5975  0EB2                     	;# 
  5976  0EB3                     	;# 
  5977  0EB8                     	;# 
  5978  0EB9                     	;# 
  5979  0EBA                     	;# 
  5980  0EBB                     	;# 
  5981  0EBC                     	;# 
  5982  0EBD                     	;# 
  5983  0EBE                     	;# 
  5984  0EC3                     	;# 
  5985  0EC5                     	;# 
  5986  0EC6                     	;# 
  5987  0EC7                     	;# 
  5988  0EC8                     	;# 
  5989  0EC9                     	;# 
  5990  0ECA                     	;# 
  5991  0ECB                     	;# 
  5992  0ECC                     	;# 
  5993  0F10                     	;# 
  5994  0F11                     	;# 
  5995  0F12                     	;# 
  5996  0F13                     	;# 
  5997  0F14                     	;# 
  5998  0F15                     	;# 
  5999  0F16                     	;# 
  6000  0F17                     	;# 
  6001  0F18                     	;# 
  6002  0F19                     	;# 
  6003  0F1A                     	;# 
  6004  0F1B                     	;# 
  6005  0F1C                     	;# 
  6006  0F1D                     	;# 
  6007  0F1E                     	;# 
  6008  0F1F                     	;# 
  6009  0F20                     	;# 
  6010  0F21                     	;# 
  6011  0F22                     	;# 
  6012  0F23                     	;# 
  6013  0F24                     	;# 
  6014  0F25                     	;# 
  6015  0F26                     	;# 
  6016  0F27                     	;# 
  6017  0F28                     	;# 
  6018  0F29                     	;# 
  6019  0F2A                     	;# 
  6020  0F2B                     	;# 
  6021  0F2C                     	;# 
  6022  0F2D                     	;# 
  6023  0F2E                     	;# 
  6024  0F2F                     	;# 
  6025  0F30                     	;# 
  6026  0F31                     	;# 
  6027  0F32                     	;# 
  6028  0F38                     	;# 
  6029  0F39                     	;# 
  6030  0F3A                     	;# 
  6031  0F3B                     	;# 
  6032  0F3C                     	;# 
  6033  0F3D                     	;# 
  6034  0F3E                     	;# 
  6035  0F3F                     	;# 
  6036  0F40                     	;# 
  6037  0F41                     	;# 
  6038  0F43                     	;# 
  6039  0F44                     	;# 
  6040  0F45                     	;# 
  6041  0F46                     	;# 
  6042  0F47                     	;# 
  6043  0F48                     	;# 
  6044  0F49                     	;# 
  6045  0F4A                     	;# 
  6046  0F4B                     	;# 
  6047  0F4C                     	;# 
  6048  0F4E                     	;# 
  6049  0F4F                     	;# 
  6050  0F50                     	;# 
  6051  0F51                     	;# 
  6052  0F52                     	;# 
  6053  0F53                     	;# 
  6054  0F54                     	;# 
  6055  0F55                     	;# 
  6056  0F56                     	;# 
  6057  0F57                     	;# 
  6058  0F59                     	;# 
  6059  0F5A                     	;# 
  6060  0F5B                     	;# 
  6061  0F5C                     	;# 
  6062  0F5D                     	;# 
  6063  0F61                     	;# 
  6064  0F62                     	;# 
  6065  0F64                     	;# 
  6066  0F65                     	;# 
  6067  0F66                     	;# 
  6068  0F67                     	;# 
  6069  0F68                     	;# 
  6070  0F69                     	;# 
  6071  0F6A                     	;# 
  6072  0F6B                     	;# 
  6073  0F6C                     	;# 
  6074  0F6D                     	;# 
  6075  0FE4                     	;# 
  6076  0FE5                     	;# 
  6077  0FE6                     	;# 
  6078  0FE7                     	;# 
  6079  0FE8                     	;# 
  6080  0FE9                     	;# 
  6081  0FEA                     	;# 
  6082  0FEB                     	;# 
  6083  0FED                     	;# 
  6084  0FEE                     	;# 
  6085  0FEF                     	;_sb_data
  6086                           
  6087                           	psect	idataBANK0
  6088  0F7E                     __pidataBANK0:	
  6089                           
  6090                           ;initializer for _ma_rear
  6091  0F7E  34FF               	retlw	-1
  6092                           
  6093                           ;initializer for _ma_front
  6094  0F7F  34FF               	retlw	-1
  6095                           
  6096                           ;initializer for _pk_rear
  6097  0F80  34FF               	retlw	-1
  6098                           
  6099                           ;initializer for _pk_front
  6100  0F81  34FF               	retlw	-1
  6101                           
  6102                           ;initializer for _sb_rear
  6103  0F82  34FF               	retlw	-1
  6104                           
  6105                           ;initializer for _sb_front
  6106  0F83  34FF               	retlw	-1
  6107                           
  6108                           	psect	nvBANK0
  6109  0061                     __pnvBANK0:	
  6110  0061                     _eusartTxBufferRemaining:	
  6111  0061                     	ds	1
  6112                           
  6113                           	psect	nvBANK1
  6114  00E4                     __pnvBANK1:	
  6115  00E4                     _TMR6_InterruptHandler:	
  6116  00E4                     	ds	2
  6117  0014                     _TRISD	set	20
  6118  0013                     _TRISC	set	19
  6119  0012                     _TRISB	set	18
  6120  0011                     _TRISA	set	17
  6121  0015                     _TRISE	set	21
  6122  0018                     _LATC	set	24
  6123  0017                     _LATB	set	23
  6124  0016                     _LATA	set	22
  6125  0019                     _LATD	set	25
  6126  001A                     _LATE	set	26
  6127  000E                     _PORTCbits	set	14
  6128  000D                     _PORTBbits	set	13
  6129  0016                     _LATAbits	set	22
  6130  000B                     _INTCONbits	set	11
  6131  0094                     _ADCON1bits	set	148
  6132  008E                     _ADPREVL	set	142
  6133  008F                     _ADPREVH	set	143
  6134  0097                     _ADSTATbits	set	151
  6135  0090                     _ADACCL	set	144
  6136  0091                     _ADACCH	set	145
  6137  0095                     _ADCON2bits	set	149
  6138  009C                     _ADPRE	set	156
  6139  009D                     _ADACQ	set	157
  6140  0096                     _ADCON3bits	set	150
  6141  008C                     _ADRESL	set	140
  6142  008D                     _ADRESH	set	141
  6143  0093                     _ADCON0bits	set	147
  6144  0093                     _ADCON0	set	147
  6145  0098                     _ADCLK	set	152
  6146  0099                     _ADACT	set	153
  6147  009A                     _ADREF	set	154
  6148  0097                     _ADSTAT	set	151
  6149  0096                     _ADCON3	set	150
  6150  0095                     _ADCON2	set	149
  6151  0094                     _ADCON1	set	148
  6152  009B                     _ADCAP	set	155
  6153  009E                     _ADPCH	set	158
  6154  0119                     _RC1REG	set	281
  6155  011D                     _RC1STAbits	set	285
  6156  011A                     _TX1REG	set	282
  6157  011C                     _SP1BRGH	set	284
  6158  011B                     _SP1BRGL	set	283
  6159  011E                     _TX1STA	set	286
  6160  011D                     _RC1STA	set	285
  6161  011F                     _BAUD1CON	set	287
  6162  0116                     _ADERRL	set	278
  6163  0117                     _ADERRH	set	279
  6164  0114                     _ADFLTRL	set	276
  6165  0115                     _ADFLTRH	set	277
  6166  010C                     _ADCNT	set	268
  6167  010D                     _ADRPT	set	269
  6168  0113                     _ADSTPTH	set	275
  6169  0112                     _ADSTPTL	set	274
  6170  0111                     _ADUTHH	set	273
  6171  0110                     _ADUTHL	set	272
  6172  010F                     _ADLTHH	set	271
  6173  010E                     _ADLTHL	set	270
  6174  0299                     _PR6	set	665
  6175  0298                     _TMR6	set	664
  6176  029A                     _T6CONbits	set	666
  6177  029D                     _T6RSTbits	set	669
  6178  029B                     _T6HLTbits	set	667
  6179  029A                     _T6CON	set	666
  6180  0298                     _T6TMR	set	664
  6181  0299                     _T6PR	set	665
  6182  029D                     _T6RST	set	669
  6183  029B                     _T6HLT	set	667
  6184  029C                     _T6CLKCON	set	668
  6185  0710                     _PIR4bits	set	1808
  6186  071A                     _PIE4bits	set	1818
  6187  070F                     _PIR3bits	set	1807
  6188  0719                     _PIE3bits	set	1817
  6189  079B                     _PMD5	set	1947
  6190  079A                     _PMD4	set	1946
  6191  0799                     _PMD3	set	1945
  6192  0798                     _PMD2	set	1944
  6193  0797                     _PMD1	set	1943
  6194  0796                     _PMD0	set	1942
  6195  0892                     _OSCTUNE	set	2194
  6196  0893                     _OSCFRQ	set	2195
  6197  0891                     _OSCEN	set	2193
  6198  088F                     _OSCCON3	set	2191
  6199  088D                     _OSCCON1	set	2189
  6200  0ECB                     _RXPPSbits	set	3787
  6201  0E9E                     _T6AINPPSbits	set	3742
  6202  0F26                     _RC6PPS	set	3878
  6203  0F5B                     _ODCOND	set	3931
  6204  0F50                     _ODCONC	set	3920
  6205  0F45                     _ODCONB	set	3909
  6206  0F3A                     _ODCONA	set	3898
  6207  0F66                     _ODCONE	set	3942
  6208  0F4F                     _WPUC	set	3919
  6209  0F39                     _WPUA	set	3897
  6210  0F44                     _WPUB	set	3908
  6211  0F65                     _WPUE	set	3941
  6212  0F5A                     _WPUD	set	3930
  6213  0F38                     _ANSELA	set	3896
  6214  0F64                     _ANSELE	set	3940
  6215  0F59                     _ANSELD	set	3929
  6216  0F43                     _ANSELB	set	3907
  6217  0F4E                     _ANSELC	set	3918
  6218                           
  6219                           	psect	stringtext1
  6220  1000                     __pstringtext1:	
  6221  1000                     STR_2:	
  6222  1000  3430               	retlw	48	;'0'
  6223  1001  3400               	retlw	0
  6224                           
  6225                           	psect	stringtext2
  6226  1002                     __pstringtext2:	
  6227  1002                     STR_1:	
  6228  1002  3431               	retlw	49	;'1'
  6229  1003  3400               	retlw	0
  6230                           
  6231                           	psect	stringtext3
  6232  0000                     __pstringtext3:	
  6233  1000                     
  6234                           ; #config settings
  6235  0000                     
  6236                           	psect	cinit
  6237  0026                     start_initialization:	
  6238  0026                     __initialization:		;BIGRAM
  6239                           
  6240                           ; Initialize objects allocated to BANK0
  6241  0026  307E               	movlw	low __pidataBANK0
  6242  0027  0084               	movwf	4
  6243  0028  308F               	movlw	(high __pidataBANK0)| (0+128)
  6244  0029  0085               	movwf	5
  6245  002A  0012               	moviw fsr0++
  6246  002B  00DB               	movwf	__pdataBANK0& (0+127)
  6247  002C  0012               	moviw fsr0++
  6248  002D  00DC               	movwf	(__pdataBANK0+1)& (0+127)
  6249  002E  0012               	moviw fsr0++
  6250  002F  00DD               	movwf	(__pdataBANK0+2)& (0+127)
  6251  0030  0012               	moviw fsr0++
  6252  0031  00DE               	movwf	(__pdataBANK0+3)& (0+127)
  6253  0032  0012               	moviw fsr0++
  6254  0033  00DF               	movwf	(__pdataBANK0+4)& (0+127)
  6255  0034  0012               	moviw fsr0++
  6256  0035  00E0               	movwf	(__pdataBANK0+5)& (0+127)
  6257                           
  6258                           ; Clear objects allocated to BIGRAM
  6259  0036  308C               	movlw	low (0+9100)
  6260  0037  0084               	movwf	4
  6261  0038  3023               	movlw	high (0+9100)
  6262  0039  0085               	movwf	5
  6263  003A  3064               	movlw	100
  6264  003B  00FE               	movwf	btemp
  6265  003C  3000               	movlw	0
  6266  003D  00FF               	movwf	btemp+1
  6267  003E  318F  27BE  3180   	fcall	clear_ram0
  6268                           
  6269                           ; Clear objects allocated to BANK0
  6270  0041  3046               	movlw	low __pbssBANK0
  6271  0042  0084               	movwf	4
  6272  0043  3000               	movlw	high __pbssBANK0
  6273  0044  0085               	movwf	5
  6274  0045  3015               	movlw	21
  6275  0046  00FE               	movwf	btemp
  6276  0047  3000               	movlw	0
  6277  0048  00FF               	movwf	btemp+1
  6278  0049  318F  27BE  3180   	fcall	clear_ram0
  6279                           
  6280                           ; Clear objects allocated to BANK1
  6281  004C  30A0               	movlw	low __pbssBANK1
  6282  004D  0084               	movwf	4
  6283  004E  3000               	movlw	high __pbssBANK1
  6284  004F  0085               	movwf	5
  6285  0050  3044               	movlw	68
  6286  0051  00FE               	movwf	btemp
  6287  0052  3000               	movlw	0
  6288  0053  00FF               	movwf	btemp+1
  6289  0054  318F  27BE         	fcall	clear_ram0
  6290  0056                     end_of_initialization:	
  6291                           ;End of C runtime variable initialization code
  6292                           
  6293  0056                     __end_of__initialization:	
  6294  0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6295  0057  0020               	movlb	0
  6296  0058  3180  285A         	ljmp	_main	;jump to C main() function
  6297                           
  6298                           	psect	bssBANK0
  6299  0046                     __pbssBANK0:	
  6300  0046                     _pk_data:	
  6301  0046                     	ds	10
  6302  0050                     _ma_window_sum:	
  6303  0050                     	ds	2
  6304  0052                     _eusartRxCount:	
  6305  0052                     	ds	1
  6306  0053                     _eusartRxTail:	
  6307  0053                     	ds	1
  6308  0054                     _eusartRxHead:	
  6309  0054                     	ds	1
  6310  0055                     _eusartTxTail:	
  6311  0055                     	ds	1
  6312  0056                     _eusartTxHead:	
  6313  0056                     	ds	1
  6314  0057                     _sent_0:	
  6315  0057                     	ds	1
  6316  0058                     _sent_1:	
  6317  0058                     	ds	1
  6318  0059                     _i:	
  6319  0059                     	ds	1
  6320  005A                     _start_flag:	
  6321  005A                     	ds	1
  6322                           
  6323                           	psect	dataBANK0
  6324  005B                     __pdataBANK0:	
  6325  005B                     _ma_rear:	
  6326  005B                     	ds	1
  6327  005C                     _ma_front:	
  6328  005C                     	ds	1
  6329  005D                     _pk_rear:	
  6330  005D                     	ds	1
  6331  005E                     _pk_front:	
  6332  005E                     	ds	1
  6333  005F                     _sb_rear:	
  6334  005F                     	ds	1
  6335  0060                     _sb_front:	
  6336  0060                     	ds	1
  6337                           
  6338                           	psect	bssBANK1
  6339  00A0                     __pbssBANK1:	
  6340  00A0                     _ma_data:	
  6341  00A0                     	ds	52
  6342  00D4                     _eusartRxBuffer:	
  6343  00D4                     	ds	8
  6344  00DC                     _eusartTxBuffer:	
  6345  00DC                     	ds	8
  6346                           
  6347                           	psect	clrtext
  6348  0FBE                     clear_ram0:	
  6349                           ;	Called with FSR0 containing the base address, and
  6350                           ;	btemp/btemp+1 has the size to clear
  6351                           
  6352  0FBE  0064               	clrwdt	;clear the watchdog before getting into this loop
  6353  0FBF                     clrloop0:	
  6354  0FBF  0180               	clrf	0	;clear RAM location pointed to by FSR
  6355  0FC0  3101               	addfsr 0,1
  6356  0FC1  3001               	movlw	1
  6357  0FC2  02FE               	subwf	126,f
  6358  0FC3  3000               	movlw	0
  6359  0FC4  3BFF               	subwfb	127,f
  6360  0FC5  087F               	movf	127,w
  6361  0FC6  047E               	iorwf	126,w
  6362  0FC7  1903               	btfsc	3,2
  6363  0FC8  3400               	retlw	0	;all done for this memory range, return
  6364  0FC9  2FBF               	goto	clrloop0	;have we reached the end yet?
  6365                           
  6366                           	psect	cstackBANK2
  6367  0120                     __pcstackBANK2:	
  6368  0120                     main@time_elapsed:	
  6369                           
  6370                           ; 3 bytes @ 0x0
  6371  0120                     	ds	3
  6372  0123                     main@neutral_datapoint:	
  6373                           
  6374                           ; 2 bytes @ 0x3
  6375  0123                     	ds	2
  6376  0125                     main@mode:	
  6377                           
  6378                           ; 1 bytes @ 0x5
  6379  0125                     	ds	1
  6380  0126                     main@count:	
  6381                           
  6382                           ; 2 bytes @ 0x6
  6383  0126                     	ds	2
  6384  0128                     main@motor_started:	
  6385                           
  6386                           ; 1 bytes @ 0x8
  6387  0128                     	ds	1
  6388  0129                     main@datapoint:	
  6389                           
  6390                           ; 2 bytes @ 0x9
  6391  0129                     	ds	2
  6392  012B                     main@flex_flag:	
  6393                           
  6394                           ; 1 bytes @ 0xB
  6395  012B                     	ds	1
  6396  012C                     main@result:	
  6397                           
  6398                           ; 2 bytes @ 0xC
  6399  012C                     	ds	2
  6400                           
  6401                           	psect	cstackCOMMON
  6402  0070                     __pcstackCOMMON:	
  6403  0070                     ?_PMD_Initialize:	
  6404  0070                     ?_PIN_MANAGER_Initialize:	
  6405                           ; 1 bytes @ 0x0
  6406                           
  6407  0070                     ?_OSCILLATOR_Initialize:	
  6408                           ; 1 bytes @ 0x0
  6409                           
  6410  0070                     ?_ADCC_Initialize:	
  6411                           ; 1 bytes @ 0x0
  6412                           
  6413  0070                     ?_TMR6_Initialize:	
  6414                           ; 1 bytes @ 0x0
  6415                           
  6416  0070                     ?_EUSART_Initialize:	
  6417                           ; 1 bytes @ 0x0
  6418                           
  6419  0070                     ?_ADCC_StartConversion:	
  6420                           ; 1 bytes @ 0x0
  6421                           
  6422  0070                     ??_ADCC_StartConversion:	
  6423                           ; 1 bytes @ 0x0
  6424                           
  6425  0070                     ?_TMR6_Start:	
  6426                           ; 1 bytes @ 0x0
  6427                           
  6428  0070                     ?_sbuf_remove:	
  6429                           ; 1 bytes @ 0x0
  6430                           
  6431  0070                     ?_EUSART_Transmit_ISR:	
  6432                           ; 1 bytes @ 0x0
  6433                           
  6434  0070                     ??_EUSART_Transmit_ISR:	
  6435                           ; 1 bytes @ 0x0
  6436                           
  6437  0070                     ?_EUSART_Receive_ISR:	
  6438                           ; 1 bytes @ 0x0
  6439                           
  6440  0070                     ??_EUSART_Receive_ISR:	
  6441                           ; 1 bytes @ 0x0
  6442                           
  6443  0070                     ?_TMR6_ISR:	
  6444                           ; 1 bytes @ 0x0
  6445                           
  6446  0070                     ?_TMR6_DefaultInterruptHandler:	
  6447                           ; 1 bytes @ 0x0
  6448                           
  6449  0070                     ??_TMR6_DefaultInterruptHandler:	
  6450                           ; 1 bytes @ 0x0
  6451                           
  6452  0070                     ?_SYSTEM_Initialize:	
  6453                           ; 1 bytes @ 0x0
  6454                           
  6455  0070                     ?_TMR6_EMG_InterruptHandler:	
  6456                           ; 1 bytes @ 0x0
  6457                           
  6458  0070                     ?_main:	
  6459                           ; 1 bytes @ 0x0
  6460                           
  6461  0070                     ?_INTERRUPT_InterruptManager:	
  6462                           ; 1 bytes @ 0x0
  6463                           
  6464  0070                     ?_EUSART_Write:	
  6465                           ; 1 bytes @ 0x0
  6466                           
  6467  0070                     ?_putch:	
  6468                           ; 1 bytes @ 0x0
  6469                           
  6470  0070                     ?_madata_isfull:	
  6471                           ; 1 bytes @ 0x0
  6472                           
  6473  0070                     ?_madata_isempty:	
  6474                           ; 1 bytes @ 0x0
  6475                           
  6476  0070                     ?_madata_remove:	
  6477                           ; 1 bytes @ 0x0
  6478                           
  6479  0070                     ?_pkdata_isfull:	
  6480                           ; 1 bytes @ 0x0
  6481                           
  6482  0070                     ?_pkdata_isempty:	
  6483                           ; 1 bytes @ 0x0
  6484                           
  6485  0070                     ?_pkdata_remove:	
  6486                           ; 1 bytes @ 0x0
  6487                           
  6488  0070                     ?_sbuf_isfull:	
  6489                           ; 1 bytes @ 0x0
  6490                           
  6491  0070                     ??_sbuf_isfull:	
  6492                           ; 1 bytes @ 0x0
  6493                           
  6494  0070                     ?_sbuf_isempty:	
  6495                           ; 1 bytes @ 0x0
  6496                           
  6497  0070                     ?_ADCC_GetConversionResult:	
  6498                           ; 1 bytes @ 0x0
  6499                           
  6500  0070                     ?i1___awmod:	
  6501                           ; 2 bytes @ 0x0
  6502                           
  6503  0070                     ?i1___lwdiv:	
  6504                           ; 2 bytes @ 0x0
  6505                           
  6506  0070                     ADCC_StartConversion@channel:	
  6507                           ; 2 bytes @ 0x0
  6508                           
  6509  0070                     i1___awmod@divisor:	
  6510                           ; 1 bytes @ 0x0
  6511                           
  6512  0070                     i1___lwdiv@divisor:	
  6513                           ; 2 bytes @ 0x0
  6514                           
  6515                           
  6516                           ; 2 bytes @ 0x0
  6517  0070                     	ds	2
  6518  0072                     ??_ADCC_GetConversionResult:	
  6519  0072                     i1___awmod@dividend:	
  6520                           ; 1 bytes @ 0x2
  6521                           
  6522  0072                     i1___lwdiv@dividend:	
  6523                           ; 2 bytes @ 0x2
  6524                           
  6525                           
  6526                           ; 2 bytes @ 0x2
  6527  0072                     	ds	2
  6528  0074                     ??i1___awmod:	
  6529  0074                     ??i1___lwdiv:	
  6530                           ; 1 bytes @ 0x4
  6531                           
  6532                           
  6533                           ; 1 bytes @ 0x4
  6534  0074                     	ds	1
  6535  0075                     i1___awmod@counter:	
  6536  0075                     i1___lwdiv@quotient:	
  6537                           ; 1 bytes @ 0x5
  6538                           
  6539                           
  6540                           ; 2 bytes @ 0x5
  6541  0075                     	ds	1
  6542  0076                     i1___awmod@sign:	
  6543                           
  6544                           ; 1 bytes @ 0x6
  6545  0076                     	ds	1
  6546  0077                     i1___lwdiv@counter:	
  6547                           
  6548                           ; 1 bytes @ 0x7
  6549  0077                     	ds	1
  6550  0078                     ?_sbuf_insert:	
  6551  0078                     sbuf_insert@element:	
  6552                           ; 1 bytes @ 0x8
  6553                           
  6554                           
  6555                           ; 2 bytes @ 0x8
  6556  0078                     	ds	2
  6557  007A                     ??_sbuf_insert:	
  6558                           
  6559                           ; 1 bytes @ 0xA
  6560  007A                     	ds	4
  6561  007E                     ??_TMR6_ISR:	
  6562  007E                     ??_TMR6_EMG_InterruptHandler:	
  6563                           ; 1 bytes @ 0xE
  6564                           
  6565                           
  6566                           	psect	cstackBANK0
  6567  0020                     __pcstackBANK0:	
  6568                           ; 1 bytes @ 0xE
  6569                           
  6570  0020                     TMR6_EMG_InterruptHandler@adval:	
  6571                           
  6572                           ; 2 bytes @ 0x0
  6573  0020                     	ds	2
  6574  0022                     ??_INTERRUPT_InterruptManager:	
  6575                           
  6576                           ; 1 bytes @ 0x2
  6577  0022                     	ds	1
  6578  0023                     ??_PMD_Initialize:	
  6579  0023                     ??_PIN_MANAGER_Initialize:	
  6580                           ; 1 bytes @ 0x3
  6581                           
  6582  0023                     ??_OSCILLATOR_Initialize:	
  6583                           ; 1 bytes @ 0x3
  6584                           
  6585  0023                     ??_ADCC_Initialize:	
  6586                           ; 1 bytes @ 0x3
  6587                           
  6588  0023                     ??_EUSART_Initialize:	
  6589                           ; 1 bytes @ 0x3
  6590                           
  6591  0023                     ?_TMR6_SetInterruptHandler:	
  6592                           ; 1 bytes @ 0x3
  6593                           
  6594  0023                     ??_TMR6_Start:	
  6595                           ; 1 bytes @ 0x3
  6596                           
  6597  0023                     ??_EUSART_Write:	
  6598                           ; 1 bytes @ 0x3
  6599                           
  6600  0023                     ??_madata_isfull:	
  6601                           ; 1 bytes @ 0x3
  6602                           
  6603  0023                     ??_madata_isempty:	
  6604                           ; 1 bytes @ 0x3
  6605                           
  6606  0023                     ??_pkdata_isfull:	
  6607                           ; 1 bytes @ 0x3
  6608                           
  6609  0023                     ??_pkdata_isempty:	
  6610                           ; 1 bytes @ 0x3
  6611                           
  6612  0023                     ??_sbuf_isempty:	
  6613                           ; 1 bytes @ 0x3
  6614                           
  6615  0023                     ?_sbuf_peek:	
  6616                           ; 1 bytes @ 0x3
  6617                           
  6618  0023                     ?_abs:	
  6619                           ; 2 bytes @ 0x3
  6620                           
  6621  0023                     ?___awmod:	
  6622                           ; 2 bytes @ 0x3
  6623                           
  6624  0023                     ?___lwdiv:	
  6625                           ; 2 bytes @ 0x3
  6626                           
  6627  0023                     ?___ftpack:	
  6628                           ; 2 bytes @ 0x3
  6629                           
  6630  0023                     TMR6_SetInterruptHandler@InterruptHandler:	
  6631                           ; 3 bytes @ 0x3
  6632                           
  6633  0023                     abs@a:	
  6634                           ; 2 bytes @ 0x3
  6635                           
  6636  0023                     ___awmod@divisor:	
  6637                           ; 2 bytes @ 0x3
  6638                           
  6639  0023                     ___lwdiv@divisor:	
  6640                           ; 2 bytes @ 0x3
  6641                           
  6642  0023                     ___ftpack@arg:	
  6643                           ; 2 bytes @ 0x3
  6644                           
  6645                           
  6646                           ; 3 bytes @ 0x3
  6647  0023                     	ds	1
  6648  0024                     EUSART_Write@txData:	
  6649                           
  6650                           ; 1 bytes @ 0x4
  6651  0024                     	ds	1
  6652  0025                     ??_TMR6_Initialize:	
  6653  0025                     ??_TMR6_SetInterruptHandler:	
  6654                           ; 1 bytes @ 0x5
  6655                           
  6656  0025                     ??_sbuf_peek:	
  6657                           ; 1 bytes @ 0x5
  6658                           
  6659  0025                     ??_abs:	
  6660                           ; 1 bytes @ 0x5
  6661                           
  6662  0025                     ??_SYSTEM_Initialize:	
  6663                           ; 1 bytes @ 0x5
  6664                           
  6665  0025                     ??_putch:	
  6666                           ; 1 bytes @ 0x5
  6667                           
  6668  0025                     putch@txData:	
  6669                           ; 1 bytes @ 0x5
  6670                           
  6671  0025                     ___awmod@dividend:	
  6672                           ; 1 bytes @ 0x5
  6673                           
  6674  0025                     ___lwdiv@dividend:	
  6675                           ; 2 bytes @ 0x5
  6676                           
  6677                           
  6678                           ; 2 bytes @ 0x5
  6679  0025                     	ds	1
  6680  0026                     ?_printf:	
  6681  0026                     ___ftpack@exp:	
  6682                           ; 2 bytes @ 0x6
  6683                           
  6684  0026                     printf@f:	
  6685                           ; 1 bytes @ 0x6
  6686                           
  6687                           
  6688                           ; 2 bytes @ 0x6
  6689  0026                     	ds	1
  6690  0027                     ??___awmod:	
  6691  0027                     ??___lwdiv:	
  6692                           ; 1 bytes @ 0x7
  6693                           
  6694  0027                     ___ftpack@sign:	
  6695                           ; 1 bytes @ 0x7
  6696                           
  6697                           
  6698                           ; 1 bytes @ 0x7
  6699  0027                     	ds	1
  6700  0028                     ??_printf:	
  6701  0028                     ??___ftpack:	
  6702                           ; 1 bytes @ 0x8
  6703                           
  6704  0028                     ___awmod@counter:	
  6705                           ; 1 bytes @ 0x8
  6706                           
  6707  0028                     ___lwdiv@counter:	
  6708                           ; 1 bytes @ 0x8
  6709                           
  6710                           
  6711                           ; 1 bytes @ 0x8
  6712  0028                     	ds	1
  6713  0029                     ___awmod@sign:	
  6714  0029                     ___lwdiv@quotient:	
  6715                           ; 1 bytes @ 0x9
  6716                           
  6717                           
  6718                           ; 2 bytes @ 0x9
  6719  0029                     	ds	1
  6720  002A                     ??_sbuf_remove:	
  6721  002A                     ?_madata_insert:	
  6722                           ; 1 bytes @ 0xA
  6723                           
  6724  002A                     ??_madata_remove:	
  6725                           ; 1 bytes @ 0xA
  6726                           
  6727  002A                     ?_pkdata_insert:	
  6728                           ; 1 bytes @ 0xA
  6729                           
  6730  002A                     ??_pkdata_remove:	
  6731                           ; 1 bytes @ 0xA
  6732                           
  6733  002A                     madata_insert@element:	
  6734                           ; 1 bytes @ 0xA
  6735                           
  6736  002A                     pkdata_insert@element:	
  6737                           ; 2 bytes @ 0xA
  6738                           
  6739                           
  6740                           ; 2 bytes @ 0xA
  6741  002A                     	ds	1
  6742  002B                     ?___ftadd:	
  6743  002B                     ?___lwtoft:	
  6744                           ; 3 bytes @ 0xB
  6745                           
  6746  002B                     printf@ap:	
  6747                           ; 3 bytes @ 0xB
  6748                           
  6749  002B                     madata_remove@element:	
  6750                           ; 1 bytes @ 0xB
  6751                           
  6752  002B                     pkdata_remove@element:	
  6753                           ; 2 bytes @ 0xB
  6754                           
  6755  002B                     ___lwtoft@c:	
  6756                           ; 2 bytes @ 0xB
  6757                           
  6758  002B                     ___ftadd@f1:	
  6759                           ; 2 bytes @ 0xB
  6760                           
  6761                           
  6762                           ; 3 bytes @ 0xB
  6763  002B                     	ds	1
  6764  002C                     ??_madata_insert:	
  6765  002C                     ??_pkdata_insert:	
  6766                           ; 1 bytes @ 0xC
  6767                           
  6768  002C                     printf@c:	
  6769                           ; 1 bytes @ 0xC
  6770                           
  6771                           
  6772                           ; 1 bytes @ 0xC
  6773  002C                     	ds	1
  6774  002D                     ?_get_neutral_peaktopeak:	
  6775  002D                     get_neutral_peaktopeak@datapoint:	
  6776                           ; 2 bytes @ 0xD
  6777                           
  6778                           
  6779                           ; 2 bytes @ 0xD
  6780  002D                     	ds	1
  6781  002E                     ??___lwtoft:	
  6782  002E                     sbuf_remove@element:	
  6783                           ; 1 bytes @ 0xE
  6784                           
  6785  002E                     ___ftadd@f2:	
  6786                           ; 2 bytes @ 0xE
  6787                           
  6788                           
  6789                           ; 3 bytes @ 0xE
  6790  002E                     	ds	1
  6791  002F                     ??_get_neutral_peaktopeak:	
  6792  002F                     ?_get_moving_average:	
  6793                           ; 1 bytes @ 0xF
  6794                           
  6795  002F                     get_moving_average@datapoint:	
  6796                           ; 3 bytes @ 0xF
  6797                           
  6798                           
  6799                           ; 2 bytes @ 0xF
  6800  002F                     	ds	2
  6801  0031                     ??___ftadd:	
  6802                           
  6803                           ; 1 bytes @ 0x11
  6804  0031                     	ds	1
  6805  0032                     ??_get_moving_average:	
  6806                           
  6807                           ; 1 bytes @ 0x12
  6808  0032                     	ds	1
  6809  0033                     get_neutral_peaktopeak@neutral:	
  6810                           
  6811                           ; 2 bytes @ 0x13
  6812  0033                     	ds	1
  6813  0034                     ?___fttol:	
  6814  0034                     ___fttol@f1:	
  6815                           ; 4 bytes @ 0x14
  6816                           
  6817                           
  6818                           ; 3 bytes @ 0x14
  6819  0034                     	ds	1
  6820  0035                     ___ftadd@sign:	
  6821  0035                     get_neutral_peaktopeak@highest_peak:	
  6822                           ; 1 bytes @ 0x15
  6823                           
  6824                           
  6825                           ; 2 bytes @ 0x15
  6826  0035                     	ds	1
  6827  0036                     ___ftadd@exp2:	
  6828                           
  6829                           ; 1 bytes @ 0x16
  6830  0036                     	ds	1
  6831  0037                     ___ftadd@exp1:	
  6832  0037                     get_neutral_peaktopeak@lowest_peak:	
  6833                           ; 1 bytes @ 0x17
  6834                           
  6835                           
  6836                           ; 2 bytes @ 0x17
  6837  0037                     	ds	1
  6838  0038                     ??___fttol:	
  6839                           
  6840                           ; 1 bytes @ 0x18
  6841  0038                     	ds	1
  6842  0039                     get_neutral_peaktopeak@i:	
  6843                           
  6844                           ; 1 bytes @ 0x19
  6845  0039                     	ds	3
  6846  003C                     ___fttol@sign1:	
  6847                           
  6848                           ; 1 bytes @ 0x1C
  6849  003C                     	ds	1
  6850  003D                     ___fttol@lval:	
  6851                           
  6852                           ; 4 bytes @ 0x1D
  6853  003D                     	ds	4
  6854  0041                     ___fttol@exp1:	
  6855                           
  6856                           ; 1 bytes @ 0x21
  6857  0041                     	ds	1
  6858  0042                     ??_main:	
  6859                           
  6860                           ; 1 bytes @ 0x22
  6861  0042                     	ds	4
  6862                           
  6863                           	psect	maintext
  6864  005A                     __pmaintext:	
  6865 ;;
  6866 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  6867 ;;
  6868 ;; *************** function _main *****************
  6869 ;; Defined at:
  6870 ;;		line 96 in file "main.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;		None
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;  time_elapsed    3    0[BANK2 ] PTR FTN()void 
  6875 ;;  result          2   12[BANK2 ] unsigned int 
  6876 ;;  datapoint       2    9[BANK2 ] unsigned int 
  6877 ;;  count           2    6[BANK2 ] int 
  6878 ;;  neutral_data    2    3[BANK2 ] unsigned int 
  6879 ;;  flex_flag       1   11[BANK2 ] unsigned char 
  6880 ;;  motor_starte    1    8[BANK2 ] unsigned char 
  6881 ;;  mode            1    5[BANK2 ] unsigned char 
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  1    wreg      void 
  6884 ;; Registers used:
  6885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6886 ;; Tracked objects:
  6887 ;;		On entry : B1F/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6892 ;;      Locals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0
  6893 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6894 ;;      Totals:         0       4       0      14       0       0       0       0       0       0       0       0       
      +0       0
  6895 ;;Total ram usage:       18 bytes
  6896 ;; Hardware stack levels required when called:    8
  6897 ;; This function calls:
  6898 ;;		_SYSTEM_Initialize
  6899 ;;		_TMR6_SetInterruptHandler
  6900 ;;		_TMR6_Start
  6901 ;;		___awmod
  6902 ;;		___ftadd
  6903 ;;		___fttol
  6904 ;;		_abs
  6905 ;;		_get_moving_average
  6906 ;;		_get_neutral_peaktopeak
  6907 ;;		_printf
  6908 ;;		_sbuf_peek
  6909 ;;		_sbuf_remove
  6910 ;; This function is called by:
  6911 ;;		Startup code after reset
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915                           
  6916                           ;psect for function _main
  6917  005A                     _main:	
  6918                           
  6919                           ;main.c: 99: SYSTEM_Initialize();
  6920                           
  6921                           ;incstack = 0
  6922                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6923  005A  318F  27D9  3180   	fcall	_SYSTEM_Initialize
  6924                           
  6925                           ;main.c: 106: (INTCONbits.GIE = 1);
  6926  005D  178B               	bsf	11,7	;volatile
  6927                           
  6928                           ;main.c: 109: (INTCONbits.PEIE = 1);
  6929  005E  170B               	bsf	11,6	;volatile
  6930                           
  6931                           ;main.c: 118: TMR6_SetInterruptHandler(TMR6_EMG_InterruptHandler);
  6932  005F  30FF               	movlw	low _TMR6_EMG_InterruptHandler
  6933  0060  0020               	movlb	0	; select bank0
  6934  0061  00A3               	movwf	TMR6_SetInterruptHandler@InterruptHandler
  6935  0062  3006               	movlw	high _TMR6_EMG_InterruptHandler
  6936  0063  00A4               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1
  6937  0064  318F  27AB  3180   	fcall	_TMR6_SetInterruptHandler
  6938                           
  6939                           ;main.c: 119: TMR6_Start();
  6940  0067  318F  276F  3180   	fcall	_TMR6_Start
  6941                           
  6942                           ;main.c: 121: int count = 0;
  6943  006A  0022               	movlb	2	; select bank2
  6944  006B  01A6               	clrf	main@count^(0+256)
  6945  006C  01A7               	clrf	(main@count+1)^(0+256)
  6946                           
  6947                           ;main.c: 123: uint16_t datapoint;
  6948                           ;main.c: 125: uint16_t neutral_datapoint, result;
  6949                           ;main.c: 127: uint8_t mode = 0;
  6950  006D  01A5               	clrf	main@mode^(0+256)
  6951                           
  6952                           ;main.c: 129: double time_elapsed;
  6953                           ;main.c: 131: uint8_t flex_flag, motor_started;
  6954                           ;main.c: 133: flex_flag = 0;
  6955  006E  01AB               	clrf	main@flex_flag^(0+256)
  6956                           
  6957                           ;main.c: 134: motor_started = 0;
  6958  006F  01A8               	clrf	main@motor_started^(0+256)
  6959                           
  6960                           ;main.c: 139: do { LATAbits.LATA7 = 0; } while(0);
  6961  0070  0020               	movlb	0	; select bank0
  6962  0071  1396               	bcf	22,7	;volatile
  6963  0072                     l3448:	
  6964                           ;main.c: 140: while (1)
  6965                           
  6966                           
  6967                           ;main.c: 141: {
  6968                           ;main.c: 143: if (PORTBbits.RB4 == 0)
  6969  0072  0020               	movlb	0	; select bank0
  6970  0073  1A0D               	btfsc	13,4	;volatile
  6971  0074  2891               	goto	l3456
  6972                           
  6973                           ;main.c: 144: {
  6974                           ;main.c: 145: mode ^= 1;
  6975  0075  3001               	movlw	1
  6976  0076  00C2               	movwf	??_main
  6977  0077  0842               	movf	??_main,w
  6978  0078  0022               	movlb	2	; select bank2
  6979  0079  06A5               	xorwf	main@mode^(0+256),f
  6980                           
  6981                           ;main.c: 146: do { LATAbits.LATA7 = ~LATAbits.LATA7; } while(0);
  6982  007A  1003               	clrc
  6983  007B  0020               	movlb	0	; select bank0
  6984  007C  1F96               	btfss	22,7	;volatile
  6985  007D  1403               	setc
  6986  007E  1C03               	btfss	3,0
  6987  007F  2883               	goto	u4060
  6988  0080  0020               	movlb	0	; select bank0
  6989  0081  1796               	bsf	22,7	;volatile
  6990  0082  2885               	goto	l3454
  6991  0083                     u4060:	
  6992  0083  0020               	movlb	0	; select bank0
  6993  0084  1396               	bcf	22,7	;volatile
  6994  0085                     l3454:	
  6995                           
  6996                           ;main.c: 147: _delay((unsigned long)((700)*(16000000/4000.0)));
  6997  0085  300F               	movlw	15
  6998  0086  0020               	movlb	0	; select bank0
  6999  0087  00C3               	movwf	??_main+1
  7000  0088  3035               	movlw	53
  7001  0089  00C2               	movwf	??_main
  7002  008A  3051               	movlw	81
  7003  008B                     u4237:	
  7004  008B  0B89               	decfsz	9,f
  7005  008C  288B               	goto	u4237
  7006  008D  0BC2               	decfsz	??_main,f
  7007  008E  288B               	goto	u4237
  7008  008F  0BC3               	decfsz	??_main+1,f
  7009  0090  288B               	goto	u4237
  7010  0091                     l3456:	
  7011                           
  7012                           ;main.c: 148: }
  7013                           ;main.c: 151: if (PORTCbits.RC5 == 0 && start_flag == 0) {
  7014  0091  0020               	movlb	0	; select bank0
  7015  0092  1A8E               	btfsc	14,5	;volatile
  7016  0093  2872               	goto	l3448
  7017  0094  085A               	movf	_start_flag,w
  7018  0095  1D03               	btfss	3,2
  7019  0096  2872               	goto	l3448
  7020                           
  7021                           ;main.c: 153: start_flag = 1;
  7022  0097  01DA               	clrf	_start_flag
  7023  0098  0ADA               	incf	_start_flag,f
  7024                           
  7025                           ;main.c: 154: _delay((unsigned long)((700)*(16000000/4000.0)));
  7026  0099  300F               	movlw	15
  7027  009A  0020               	movlb	0	; select bank0
  7028  009B  00C3               	movwf	??_main+1
  7029  009C  3035               	movlw	53
  7030  009D  00C2               	movwf	??_main
  7031  009E  3051               	movlw	81
  7032  009F                     u4247:	
  7033  009F  0B89               	decfsz	9,f
  7034  00A0  289F               	goto	u4247
  7035  00A1  0BC2               	decfsz	??_main,f
  7036  00A2  289F               	goto	u4247
  7037  00A3  0BC3               	decfsz	??_main+1,f
  7038  00A4  289F               	goto	u4247
  7039  00A5                     l3464:	
  7040                           ;main.c: 156: }
  7041                           ;main.c: 157: }
  7042                           ;main.c: 159: while (1)
  7043                           
  7044                           ;main.c: 155: break;
  7045                           
  7046                           
  7047                           ;main.c: 160: {
  7048                           ;main.c: 161: if(start_flag == 1)
  7049  00A5  0020               	movlb	0	; select bank0
  7050  00A6  035A               	decf	_start_flag,w
  7051  00A7  1D03               	btfss	3,2
  7052  00A8  28A5               	goto	l3464
  7053                           
  7054                           ;main.c: 162: {
  7055                           ;main.c: 165: for (i = sb_front; i != sb_rear; i = (i + 1) % 50) {
  7056  00A9  0860               	movf	_sb_front,w
  7057  00AA                     L1:	
  7058  00AA  00C2               	movwf	??_main
  7059  00AB  0842               	movf	??_main,w
  7060  00AC  00D9               	movwf	_i
  7061  00AD  085F               	movf	_sb_rear,w
  7062  00AE  00C2               	movwf	??_main
  7063  00AF  01C3               	clrf	??_main+1
  7064  00B0  1BC2               	btfsc	??_main,7
  7065  00B1  03C3               	decf	??_main+1,f
  7066  00B2  0859               	movf	_i,w
  7067  00B3  00C4               	movwf	??_main+2
  7068  00B4  01C5               	clrf	??_main+3
  7069  00B5  0843               	movf	??_main+1,w
  7070  00B6  0645               	xorwf	??_main+3,w
  7071  00B7  1D03               	skipz
  7072  00B8  28BB               	goto	u4115
  7073  00B9  0842               	movf	??_main,w
  7074  00BA  0644               	xorwf	??_main+2,w
  7075  00BB                     u4115:	
  7076  00BB  1903               	btfsc	3,2
  7077  00BC  28D4               	goto	l3474
  7078                           
  7079                           ;main.c: 166: count++;
  7080  00BD  3001               	movlw	1
  7081  00BE  0022               	movlb	2	; select bank2
  7082  00BF  07A6               	addwf	main@count^(0+256),f
  7083  00C0  3000               	movlw	0
  7084  00C1  3DA7               	addwfc	(main@count+1)^(0+256),f
  7085  00C2  3032               	movlw	50
  7086  00C3  0020               	movlb	0	; select bank0
  7087  00C4  00A3               	movwf	___awmod@divisor
  7088  00C5  3000               	movlw	0
  7089  00C6  00A4               	movwf	___awmod@divisor+1
  7090  00C7  0859               	movf	_i,w
  7091  00C8  3E01               	addlw	1
  7092  00C9  00A5               	movwf	___awmod@dividend
  7093  00CA  3000               	movlw	0
  7094  00CB  1803               	skipnc
  7095  00CC  3001               	movlw	1
  7096  00CD  00A6               	movwf	___awmod@dividend+1
  7097  00CE  3184  2426  3180   	fcall	___awmod
  7098  00D1  0020               	movlb	0	; select bank0
  7099  00D2  0823               	movf	?___awmod,w
  7100  00D3  28AA               	goto	L1
  7101  00D4                     l3474:	
  7102                           
  7103                           ;main.c: 167: }
  7104                           ;main.c: 169: if(count>0)
  7105  00D4  0022               	movlb	2	; select bank2
  7106  00D5  0827               	movf	(main@count+1)^(0+256),w
  7107  00D6  3A80               	xorlw	128
  7108  00D7  0020               	movlb	0	; select bank0
  7109  00D8  00C2               	movwf	??_main
  7110  00D9  3080               	movlw	128
  7111  00DA  0242               	subwf	??_main,w
  7112  00DB  1D03               	skipz
  7113  00DC  28E0               	goto	u4125
  7114  00DD  3001               	movlw	1
  7115  00DE  0022               	movlb	2	; select bank2
  7116  00DF  0226               	subwf	main@count^(0+256),w
  7117  00E0                     u4125:	
  7118  00E0  1C03               	skipc
  7119  00E1  29B8               	goto	l3524
  7120                           
  7121                           ;main.c: 170: {
  7122                           ;main.c: 172: datapoint = sbuf_peek();
  7123  00E2  3187  27DE  3180   	fcall	_sbuf_peek
  7124  00E5  0020               	movlb	0	; select bank0
  7125  00E6  0824               	movf	?_sbuf_peek+1,w
  7126  00E7  0022               	movlb	2	; select bank2
  7127  00E8  00AA               	movwf	(main@datapoint+1)^(0+256)
  7128  00E9  0020               	movlb	0	; select bank0
  7129  00EA  0823               	movf	?_sbuf_peek,w
  7130  00EB  0022               	movlb	2	; select bank2
  7131  00EC  00A9               	movwf	main@datapoint^(0+256)
  7132                           
  7133                           ;main.c: 175: neutral_datapoint = get_neutral_peaktopeak(datapoint);
  7134  00ED  082A               	movf	(main@datapoint+1)^(0+256),w
  7135  00EE  0020               	movlb	0	; select bank0
  7136  00EF  00AE               	movwf	get_neutral_peaktopeak@datapoint+1
  7137  00F0  0022               	movlb	2	; select bank2
  7138  00F1  0829               	movf	main@datapoint^(0+256),w
  7139  00F2  0020               	movlb	0	; select bank0
  7140  00F3  00AD               	movwf	get_neutral_peaktopeak@datapoint
  7141  00F4  3182  22B2  3180   	fcall	_get_neutral_peaktopeak
  7142  00F7  0020               	movlb	0	; select bank0
  7143  00F8  082E               	movf	?_get_neutral_peaktopeak+1,w
  7144  00F9  0022               	movlb	2	; select bank2
  7145  00FA  00A4               	movwf	(main@neutral_datapoint+1)^(0+256)
  7146  00FB  0020               	movlb	0	; select bank0
  7147  00FC  082D               	movf	?_get_neutral_peaktopeak,w
  7148  00FD  0022               	movlb	2	; select bank2
  7149  00FE  00A3               	movwf	main@neutral_datapoint^(0+256)
  7150                           
  7151                           ;main.c: 180: result = get_moving_average(abs(datapoint - neutral_datapoint));
  7152  00FF  0923               	comf	main@neutral_datapoint^(0+256),w
  7153  0100  0020               	movlb	0	; select bank0
  7154  0101  00C2               	movwf	??_main
  7155  0102  0022               	movlb	2	; select bank2
  7156  0103  0924               	comf	(main@neutral_datapoint+1)^(0+256),w
  7157  0104  0020               	movlb	0	; select bank0
  7158  0105  00C3               	movwf	??_main+1
  7159  0106  0AC2               	incf	??_main,f
  7160  0107  1903               	skipnz
  7161  0108  0AC3               	incf	??_main+1,f
  7162  0109  0022               	movlb	2	; select bank2
  7163  010A  0829               	movf	main@datapoint^(0+256),w
  7164  010B  0020               	movlb	0	; select bank0
  7165  010C  0742               	addwf	??_main,w
  7166  010D  00A3               	movwf	abs@a
  7167  010E  0022               	movlb	2	; select bank2
  7168  010F  082A               	movf	(main@datapoint+1)^(0+256),w
  7169  0110  0020               	movlb	0	; select bank0
  7170  0111  3D43               	addwfc	??_main+1,w
  7171  0112  00A4               	movwf	abs@a+1
  7172  0113  318F  27CA  3180   	fcall	_abs
  7173  0116  0020               	movlb	0	; select bank0
  7174  0117  0824               	movf	?_abs+1,w
  7175  0118  00B0               	movwf	get_moving_average@datapoint+1
  7176  0119  0823               	movf	?_abs,w
  7177  011A  00AF               	movwf	get_moving_average@datapoint
  7178  011B  3184  24B1  3180   	fcall	_get_moving_average
  7179  011E  0020               	movlb	0	; select bank0
  7180  011F  082F               	movf	?_get_moving_average,w
  7181  0120  00B4               	movwf	___fttol@f1
  7182  0121  0830               	movf	?_get_moving_average+1,w
  7183  0122  00B5               	movwf	___fttol@f1+1
  7184  0123  0831               	movf	?_get_moving_average+2,w
  7185  0124  00B6               	movwf	___fttol@f1+2
  7186  0125  3183  233A  3180   	fcall	___fttol
  7187  0128  0020               	movlb	0	; select bank0
  7188  0129  0835               	movf	?___fttol+1,w
  7189  012A  0022               	movlb	2	; select bank2
  7190  012B  00AD               	movwf	(main@result+1)^(0+256)
  7191  012C  0020               	movlb	0	; select bank0
  7192  012D  0834               	movf	?___fttol,w
  7193  012E  0022               	movlb	2	; select bank2
  7194  012F  00AC               	movwf	main@result^(0+256)
  7195                           
  7196                           ;main.c: 182: if(mode == 0)
  7197  0130  0825               	movf	main@mode^(0+256),w
  7198  0131  1D03               	btfss	3,2
  7199  0132  2962               	goto	l3500
  7200                           
  7201                           ;main.c: 183: {
  7202                           ;main.c: 185: if(result>= 25 && sent_1 == 0)
  7203  0133  3000               	movlw	0
  7204  0134  022D               	subwf	(main@result+1)^(0+256),w
  7205  0135  3019               	movlw	25
  7206  0136  1903               	skipnz
  7207  0137  022C               	subwf	main@result^(0+256),w
  7208  0138  1C03               	skipc
  7209  0139  294A               	goto	l3490
  7210  013A  0020               	movlb	0	; select bank0
  7211  013B  0858               	movf	_sent_1,w
  7212  013C  1D03               	btfss	3,2
  7213  013D  294A               	goto	l3490
  7214                           
  7215                           ;main.c: 186: {
  7216                           ;main.c: 187: printf("1");
  7217  013E  3002               	movlw	low (STR_1| (0+32768))
  7218  013F  00A6               	movwf	printf@f
  7219  0140  3090               	movlw	high (STR_1| (0+32768))
  7220  0141  00A7               	movwf	printf@f+1
  7221  0142  3187  2743  3180   	fcall	_printf
  7222                           
  7223                           ;main.c: 188: sent_1 = 1;
  7224  0145  0020               	movlb	0	; select bank0
  7225  0146  01D8               	clrf	_sent_1
  7226  0147  0AD8               	incf	_sent_1,f
  7227                           
  7228                           ;main.c: 189: sent_0 = 0;
  7229  0148  01D7               	clrf	_sent_0
  7230                           
  7231                           ;main.c: 190: }
  7232  0149  2993               	goto	l3520
  7233  014A                     l3490:	
  7234                           
  7235                           ;main.c: 191: else if(result<25 && sent_0 == 0)
  7236  014A  3000               	movlw	0
  7237  014B  0022               	movlb	2	; select bank2
  7238  014C  022D               	subwf	(main@result+1)^(0+256),w
  7239  014D  3019               	movlw	25
  7240  014E  1903               	skipnz
  7241  014F  022C               	subwf	main@result^(0+256),w
  7242  0150  1803               	skipnc
  7243  0151  2993               	goto	l3520
  7244  0152  0020               	movlb	0	; select bank0
  7245  0153  0857               	movf	_sent_0,w
  7246  0154  1D03               	btfss	3,2
  7247  0155  2993               	goto	l3520
  7248                           
  7249                           ;main.c: 192: {
  7250                           ;main.c: 193: printf("0");
  7251  0156  3000               	movlw	low (STR_2| (0+32768))
  7252  0157  00A6               	movwf	printf@f
  7253  0158  3090               	movlw	high (STR_2| (0+32768))
  7254  0159  00A7               	movwf	printf@f+1
  7255  015A  3187  2743  3180   	fcall	_printf
  7256                           
  7257                           ;main.c: 194: sent_0 = 1;
  7258  015D  0020               	movlb	0	; select bank0
  7259  015E  01D7               	clrf	_sent_0
  7260  015F  0AD7               	incf	_sent_0,f
  7261                           
  7262                           ;main.c: 195: sent_1 = 0;
  7263  0160  01D8               	clrf	_sent_1
  7264                           
  7265                           ;main.c: 196: }
  7266                           ;main.c: 197: }
  7267  0161  2993               	goto	l3520
  7268  0162                     l3500:	
  7269                           
  7270                           ;main.c: 199: else
  7271                           ;main.c: 200: {
  7272                           ;main.c: 202: if(result>= 25 && flex_flag == 0)
  7273  0162  3000               	movlw	0
  7274  0163  0022               	movlb	2	; select bank2
  7275  0164  022D               	subwf	(main@result+1)^(0+256),w
  7276  0165  3019               	movlw	25
  7277  0166  1903               	skipnz
  7278  0167  022C               	subwf	main@result^(0+256),w
  7279  0168  1C03               	skipc
  7280  0169  2987               	goto	l3514
  7281  016A  082B               	movf	main@flex_flag^(0+256),w
  7282  016B  1D03               	btfss	3,2
  7283  016C  2987               	goto	l3514
  7284                           
  7285                           ;main.c: 203: {
  7286                           ;main.c: 204: flex_flag = 1;
  7287  016D  01AB               	clrf	main@flex_flag^(0+256)
  7288  016E  0AAB               	incf	main@flex_flag^(0+256),f
  7289                           
  7290                           ;main.c: 206: if(motor_started == 1)
  7291  016F  0328               	decf	main@motor_started^(0+256),w
  7292  0170  1D03               	btfss	3,2
  7293  0171  297C               	goto	l135
  7294                           
  7295                           ;main.c: 207: {
  7296                           ;main.c: 208: motor_started =0;
  7297  0172  01A8               	clrf	main@motor_started^(0+256)
  7298                           
  7299                           ;main.c: 209: printf("0");
  7300  0173  3000               	movlw	low (STR_2| (0+32768))
  7301  0174  0020               	movlb	0	; select bank0
  7302  0175  00A6               	movwf	printf@f
  7303  0176  3090               	movlw	high (STR_2| (0+32768))
  7304  0177  00A7               	movwf	printf@f+1
  7305  0178  3187  2743  3180   	fcall	_printf
  7306                           
  7307                           ;main.c: 210: }
  7308  017B  2993               	goto	l3520
  7309  017C                     l135:	
  7310                           
  7311                           ;main.c: 211: else
  7312                           ;main.c: 212: {
  7313                           ;main.c: 213: motor_started = 1;
  7314  017C  01A8               	clrf	main@motor_started^(0+256)
  7315  017D  0AA8               	incf	main@motor_started^(0+256),f
  7316                           
  7317                           ;main.c: 214: printf("1");
  7318  017E  3002               	movlw	low (STR_1| (0+32768))
  7319  017F  0020               	movlb	0	; select bank0
  7320  0180  00A6               	movwf	printf@f
  7321  0181  3090               	movlw	high (STR_1| (0+32768))
  7322  0182  00A7               	movwf	printf@f+1
  7323  0183  3187  2743  3180   	fcall	_printf
  7324                           
  7325                           ;main.c: 215: }
  7326                           ;main.c: 217: }
  7327  0186  2993               	goto	l3520
  7328  0187                     l3514:	
  7329                           
  7330                           ;main.c: 219: else if(result<25 && flex_flag == 1)
  7331  0187  3000               	movlw	0
  7332  0188  0022               	movlb	2	; select bank2
  7333  0189  022D               	subwf	(main@result+1)^(0+256),w
  7334  018A  3019               	movlw	25
  7335  018B  1903               	skipnz
  7336  018C  022C               	subwf	main@result^(0+256),w
  7337  018D  1803               	skipnc
  7338  018E  2993               	goto	l3520
  7339  018F  032B               	decf	main@flex_flag^(0+256),w
  7340  0190  1D03               	btfss	3,2
  7341  0191  2993               	goto	l3520
  7342                           
  7343                           ;main.c: 220: {
  7344                           ;main.c: 221: flex_flag = 0;
  7345  0192  01AB               	clrf	main@flex_flag^(0+256)
  7346  0193                     l3520:	
  7347                           
  7348                           ;main.c: 222: }
  7349                           ;main.c: 223: }
  7350                           ;main.c: 227: sbuf_remove();
  7351  0193  3184  24EF  3180   	fcall	_sbuf_remove
  7352                           
  7353                           ;main.c: 229: time_elapsed += 5.0;
  7354  0196  3000               	movlw	0
  7355  0197  0020               	movlb	0	; select bank0
  7356  0198  00AB               	movwf	___ftadd@f1
  7357  0199  30A0               	movlw	160
  7358  019A  00AC               	movwf	___ftadd@f1+1
  7359  019B  3040               	movlw	64
  7360  019C  00AD               	movwf	___ftadd@f1+2
  7361  019D  0022               	movlb	2	; select bank2
  7362  019E  0820               	movf	main@time_elapsed^(0+256),w
  7363  019F  0020               	movlb	0	; select bank0
  7364  01A0  00AE               	movwf	___ftadd@f2
  7365  01A1  0022               	movlb	2	; select bank2
  7366  01A2  0821               	movf	(main@time_elapsed+1)^(0+256),w
  7367  01A3  0020               	movlb	0	; select bank0
  7368  01A4  00AF               	movwf	___ftadd@f2+1
  7369  01A5  0022               	movlb	2	; select bank2
  7370  01A6  0822               	movf	(main@time_elapsed+2)^(0+256),w
  7371  01A7  0020               	movlb	0	; select bank0
  7372  01A8  00B0               	movwf	___ftadd@f2+2
  7373  01A9  3181  21BC  3180   	fcall	___ftadd
  7374  01AC  0020               	movlb	0	; select bank0
  7375  01AD  082B               	movf	?___ftadd,w
  7376  01AE  0022               	movlb	2	; select bank2
  7377  01AF  00A0               	movwf	main@time_elapsed^(0+256)
  7378  01B0  0020               	movlb	0	; select bank0
  7379  01B1  082C               	movf	?___ftadd+1,w
  7380  01B2  0022               	movlb	2	; select bank2
  7381  01B3  00A1               	movwf	(main@time_elapsed+1)^(0+256)
  7382  01B4  0020               	movlb	0	; select bank0
  7383  01B5  082D               	movf	?___ftadd+2,w
  7384  01B6  0022               	movlb	2	; select bank2
  7385  01B7  00A2               	movwf	(main@time_elapsed+2)^(0+256)
  7386  01B8                     l3524:	
  7387                           
  7388                           ;main.c: 230: }
  7389                           ;main.c: 232: count = 0;
  7390  01B8  0022               	movlb	2	; select bank2
  7391  01B9  01A6               	clrf	main@count^(0+256)
  7392  01BA  01A7               	clrf	(main@count+1)^(0+256)
  7393  01BB  28A5               	goto	l3464
  7394  01BC                     __end_of_main:	
  7395                           
  7396                           	psect	text1
  7397  04EF                     __ptext1:	
  7398 ;; *************** function _sbuf_remove *****************
  7399 ;; Defined at:
  7400 ;;		line 43 in file "signal_buffer.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;		None
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;  element         2   14[BANK0 ] unsigned int 
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      unsigned char 
  7407 ;; Registers used:
  7408 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7415 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;Total ram usage:        6 bytes
  7419 ;; Hardware stack levels used:    1
  7420 ;; Hardware stack levels required when called:    6
  7421 ;; This function calls:
  7422 ;;		___awmod
  7423 ;;		_sbuf_isempty
  7424 ;; This function is called by:
  7425 ;;		_main
  7426 ;; This function uses a non-reentrant model
  7427 ;;
  7428                           
  7429                           
  7430                           ;psect for function _sbuf_remove
  7431  04EF                     _sbuf_remove:	
  7432                           
  7433                           ;signal_buffer.c: 44: uint16_t element;
  7434                           ;signal_buffer.c: 46: if (sbuf_isempty()) {
  7435                           
  7436                           ;incstack = 0
  7437                           ; Regs used in _sbuf_remove: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7438  04EF  318F  27A3  3184   	fcall	_sbuf_isempty
  7439  04F2  3A00               	xorlw	0
  7440  04F3  1D03               	btfss	3,2
  7441  04F4  0008               	return
  7442                           
  7443                           ;signal_buffer.c: 50: else {
  7444                           ;signal_buffer.c: 51: element = sb_data[sb_front];
  7445                           
  7446                           ;signal_buffer.c: 48: }
  7447                           
  7448                           ;signal_buffer.c: 47: return 0;
  7449                           ;	Return value of _sbuf_remove is never used
  7450  04F5  0020               	movlb	0	; select bank0
  7451  04F6  0860               	movf	_sb_front,w
  7452  04F7  00AA               	movwf	??_sbuf_remove
  7453  04F8  01AB               	clrf	??_sbuf_remove+1
  7454  04F9  35AA               	lslf	??_sbuf_remove,f
  7455  04FA  0DAB               	rlf	??_sbuf_remove+1,f
  7456  04FB  308C               	movlw	140
  7457  04FC  00AC               	movwf	??_sbuf_remove+2
  7458  04FD  3023               	movlw	35
  7459  04FE  00AD               	movwf	??_sbuf_remove+3
  7460  04FF  082A               	movf	??_sbuf_remove,w
  7461  0500  072C               	addwf	??_sbuf_remove+2,w
  7462  0501  0086               	movwf	6
  7463  0502  082B               	movf	??_sbuf_remove+1,w
  7464  0503  3D2D               	addwfc	??_sbuf_remove+3,w
  7465  0504  0087               	movwf	7
  7466  0505  3F40               	moviw [0]fsr1
  7467  0506  00AE               	movwf	sbuf_remove@element
  7468  0507  3F41               	moviw [1]fsr1
  7469  0508  00AF               	movwf	sbuf_remove@element+1
  7470                           
  7471                           ;signal_buffer.c: 52: if (sb_front == sb_rear) {
  7472  0509  0860               	movf	_sb_front,w
  7473  050A  065F               	xorwf	_sb_rear,w
  7474  050B  1D03               	skipz
  7475  050C  2D12               	goto	l3314
  7476                           
  7477                           ;signal_buffer.c: 53: sb_front = -1;
  7478  050D  01E0               	clrf	_sb_front
  7479  050E  03E0               	decf	_sb_front,f
  7480                           
  7481                           ;signal_buffer.c: 54: sb_rear = -1;
  7482  050F  01DF               	clrf	_sb_rear
  7483  0510  03DF               	decf	_sb_rear,f
  7484                           
  7485                           ;signal_buffer.c: 55: } else {
  7486  0511  0008               	return
  7487  0512                     l3314:	
  7488                           
  7489                           ;signal_buffer.c: 56: sb_front = (sb_front + 1) % 50;
  7490  0512  3032               	movlw	50
  7491  0513  00A3               	movwf	___awmod@divisor
  7492  0514  3000               	movlw	0
  7493  0515  00A4               	movwf	___awmod@divisor+1
  7494  0516  3001               	movlw	1
  7495  0517  0760               	addwf	_sb_front,w
  7496  0518  00A5               	movwf	___awmod@dividend
  7497  0519  01A6               	clrf	___awmod@dividend+1
  7498  051A  1803               	skipnc
  7499  051B  0AA6               	incf	___awmod@dividend+1,f
  7500  051C  1BE0               	btfsc	_sb_front,7
  7501  051D  03A6               	decf	___awmod@dividend+1,f
  7502  051E  3184  2426         	fcall	___awmod
  7503  0520  0020               	movlb	0	; select bank0
  7504  0521  0823               	movf	?___awmod,w
  7505  0522  00AA               	movwf	??_sbuf_remove
  7506  0523  082A               	movf	??_sbuf_remove,w
  7507  0524  00E0               	movwf	_sb_front
  7508                           
  7509                           ;signal_buffer.c: 57: }
  7510                           ;signal_buffer.c: 58: return 1;
  7511                           ;	Return value of _sbuf_remove is never used
  7512  0525  0008               	return
  7513  0526                     __end_of_sbuf_remove:	
  7514                           
  7515                           	psect	text2
  7516  0FA3                     __ptext2:	
  7517 ;; *************** function _sbuf_isempty *****************
  7518 ;; Defined at:
  7519 ;;		line 17 in file "signal_buffer.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;		None
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;		None
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  1    wreg      unsigned char 
  7526 ;; Registers used:
  7527 ;;		wreg, status,2, status,0
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7537 ;;Total ram usage:        0 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; Hardware stack levels required when called:    5
  7540 ;; This function calls:
  7541 ;;		Nothing
  7542 ;; This function is called by:
  7543 ;;		_sbuf_remove
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           
  7548                           ;psect for function _sbuf_isempty
  7549  0FA3                     _sbuf_isempty:	
  7550                           
  7551                           ;signal_buffer.c: 18: if (sb_front == -1)
  7552                           
  7553                           ;incstack = 0
  7554                           ; Regs used in _sbuf_isempty: [wreg+status,2+status,0]
  7555  0FA3  0020               	movlb	0	; select bank0
  7556  0FA4  0A60               	incf	_sb_front,w
  7557  0FA5  1D03               	btfss	3,2
  7558  0FA6  2FA9               	goto	l3196
  7559                           
  7560                           ;signal_buffer.c: 19: return 1;
  7561  0FA7  3001               	movlw	1
  7562  0FA8  0008               	return
  7563  0FA9                     l3196:	
  7564                           
  7565                           ;signal_buffer.c: 20: else
  7566                           ;signal_buffer.c: 21: return 0;
  7567  0FA9  3000               	movlw	0
  7568  0FAA  0008               	return
  7569  0FAB                     __end_of_sbuf_isempty:	
  7570                           
  7571                           	psect	text3
  7572  07DE                     __ptext3:	
  7573 ;; *************** function _sbuf_peek *****************
  7574 ;; Defined at:
  7575 ;;		line 63 in file "signal_buffer.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;		None
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;		None
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  2    3[BANK0 ] unsigned int 
  7582 ;; Registers used:
  7583 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7589 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7591 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7592 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7593 ;;Total ram usage:        6 bytes
  7594 ;; Hardware stack levels used:    1
  7595 ;; Hardware stack levels required when called:    5
  7596 ;; This function calls:
  7597 ;;		Nothing
  7598 ;; This function is called by:
  7599 ;;		_main
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           
  7604                           ;psect for function _sbuf_peek
  7605  07DE                     _sbuf_peek:	
  7606                           
  7607                           ;signal_buffer.c: 64: return sb_data[sb_front];
  7608                           
  7609                           ;incstack = 0
  7610                           ; Regs used in _sbuf_peek: [wreg+fsr1l+fsr1h+status,2+status,0]
  7611  07DE  0020               	movlb	0	; select bank0
  7612  07DF  0860               	movf	_sb_front,w
  7613  07E0  00A5               	movwf	??_sbuf_peek
  7614  07E1  01A6               	clrf	??_sbuf_peek+1
  7615  07E2  35A5               	lslf	??_sbuf_peek,f
  7616  07E3  0DA6               	rlf	??_sbuf_peek+1,f
  7617  07E4  308C               	movlw	140
  7618  07E5  00A7               	movwf	??_sbuf_peek+2
  7619  07E6  3023               	movlw	35
  7620  07E7  00A8               	movwf	??_sbuf_peek+3
  7621  07E8  0825               	movf	??_sbuf_peek,w
  7622  07E9  0727               	addwf	??_sbuf_peek+2,w
  7623  07EA  0086               	movwf	6
  7624  07EB  0826               	movf	??_sbuf_peek+1,w
  7625  07EC  3D28               	addwfc	??_sbuf_peek+3,w
  7626  07ED  0087               	movwf	7
  7627  07EE  3F40               	moviw [0]fsr1
  7628  07EF  00A3               	movwf	?_sbuf_peek
  7629  07F0  3F41               	moviw [1]fsr1
  7630  07F1  00A4               	movwf	?_sbuf_peek+1
  7631  07F2  0008               	return
  7632  07F3                     __end_of_sbuf_peek:	
  7633                           
  7634                           	psect	text4
  7635  0743                     __ptext4:	
  7636 ;; *************** function _printf *****************
  7637 ;; Defined at:
  7638 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  f               2    6[BANK0 ] PTR const unsigned char 
  7641 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;  tmpval          4    0        struct .
  7644 ;;  cp              2    0        PTR const unsigned char 
  7645 ;;  len             2    0        unsigned int 
  7646 ;;  val             2    0        unsigned int 
  7647 ;;  c               1   12[BANK0 ] char 
  7648 ;;  ap              1   11[BANK0 ] PTR void [1]
  7649 ;;		 -> ?_printf(2), 
  7650 ;;  flag            1    0        unsigned char 
  7651 ;;  prec            1    0        char 
  7652 ;; Return value:  Size  Location     Type
  7653 ;;                  2    6[BANK0 ] int 
  7654 ;; Registers used:
  7655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7661 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7662 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7663 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7664 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;Total ram usage:        7 bytes
  7666 ;; Hardware stack levels used:    1
  7667 ;; Hardware stack levels required when called:    7
  7668 ;; This function calls:
  7669 ;;		_putch
  7670 ;; This function is called by:
  7671 ;;		_main
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           
  7675                           
  7676                           ;psect for function _printf
  7677  0743                     _printf:	
  7678                           
  7679                           ;doprnt.c: 466: va_list ap;
  7680                           ;doprnt.c: 499: signed char c;
  7681                           ;doprnt.c: 506: signed char prec;
  7682                           ;doprnt.c: 508: unsigned char flag;
  7683                           ;doprnt.c: 523: union {
  7684                           ;doprnt.c: 524: unsigned long vd;
  7685                           ;doprnt.c: 525: double integ;
  7686                           ;doprnt.c: 526: } tmpval;
  7687                           ;doprnt.c: 528: unsigned int val;
  7688                           ;doprnt.c: 529: unsigned len;
  7689                           ;doprnt.c: 530: const char * cp;
  7690                           ;doprnt.c: 533: *ap = __va_start();
  7691                           
  7692                           ;incstack = 0
  7693                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7694  0743  3028               	movlw	(low ((?_printf| 0+2)))& (0+255)
  7695  0744  0020               	movlb	0	; select bank0
  7696  0745  00A8               	movwf	??_printf
  7697  0746  0828               	movf	??_printf,w
  7698  0747  00AB               	movwf	printf@ap
  7699  0748                     l3300:	
  7700                           ;doprnt.c: 543: }
  7701                           ;doprnt.c: 1422: {
  7702                           
  7703                           ;doprnt.c: 542: continue;
  7704                           
  7705                           ;doprnt.c: 536: while(c = *f++) {
  7706                           
  7707  0748  0020               	movlb	0	; select bank0
  7708  0749  0827               	movf	printf@f+1,w
  7709  074A  00A9               	movwf	??_printf+1
  7710  074B  0826               	movf	printf@f,w
  7711  074C  00A8               	movwf	??_printf
  7712  074D  0AA6               	incf	printf@f,f
  7713  074E  1903               	skipnz
  7714  074F  0AA7               	incf	printf@f+1,f
  7715  0750  0828               	movf	??_printf,w
  7716  0751  0084               	movwf	4
  7717  0752  0829               	movf	??_printf+1,w
  7718  0753  0085               	movwf	5
  7719  0754  0800               	movf	0,w	;code access
  7720  0755  00AA               	movwf	??_printf+2
  7721  0756  082A               	movf	??_printf+2,w
  7722  0757  00AC               	movwf	printf@c
  7723  0758  082C               	movf	printf@c,w
  7724  0759  1903               	btfsc	3,2
  7725  075A  0008               	return
  7726                           
  7727                           ;doprnt.c: 540: {
  7728                           ;doprnt.c: 541: (putch(c) );
  7729  075B  082C               	movf	printf@c,w
  7730  075C  318F  2778  3187   	fcall	_putch
  7731  075F  2F48               	goto	l3300
  7732  0760                     __end_of_printf:	
  7733                           ;doprnt.c: 1469: }
  7734                           ;doprnt.c: 1533: }
  7735                           ;doprnt.c: 1540: return 0;
  7736                           ;	Return value of _printf is never used
  7737                           
  7738                           
  7739                           	psect	text5
  7740  0F78                     __ptext5:	
  7741 ;; *************** function _putch *****************
  7742 ;; Defined at:
  7743 ;;		line 156 in file "mcc_generated_files/eusart.c"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;  txData          1    wreg     unsigned char 
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;  txData          1    5[BANK0 ] unsigned char 
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  1    wreg      void 
  7750 ;; Registers used:
  7751 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;Total ram usage:        1 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; Hardware stack levels required when called:    6
  7764 ;; This function calls:
  7765 ;;		_EUSART_Write
  7766 ;; This function is called by:
  7767 ;;		_printf
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           
  7772                           ;psect for function _putch
  7773  0F78                     _putch:	
  7774                           
  7775                           ;incstack = 0
  7776                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7777                           ;putch@txData stored from wreg
  7778  0F78  0020               	movlb	0	; select bank0
  7779  0F79  00A5               	movwf	putch@txData
  7780                           
  7781                           ;eusart.c: 158: EUSART_Write(txData);
  7782  0F7A  0825               	movf	putch@txData,w
  7783  0F7B  3186  2697         	fcall	_EUSART_Write
  7784  0F7D  0008               	return
  7785  0F7E                     __end_of_putch:	
  7786                           
  7787                           	psect	text6
  7788  0697                     __ptext6:	
  7789 ;; *************** function _EUSART_Write *****************
  7790 ;; Defined at:
  7791 ;;		line 128 in file "mcc_generated_files/eusart.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  txData          1    wreg     unsigned char 
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;  txData          1    4[BANK0 ] unsigned char 
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  1    wreg      void 
  7798 ;; Registers used:
  7799 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7809 ;;Total ram usage:        2 bytes
  7810 ;; Hardware stack levels used:    1
  7811 ;; Hardware stack levels required when called:    5
  7812 ;; This function calls:
  7813 ;;		Nothing
  7814 ;; This function is called by:
  7815 ;;		_putch
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           
  7820                           ;psect for function _EUSART_Write
  7821  0697                     _EUSART_Write:	
  7822                           
  7823                           ;incstack = 0
  7824                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  7825                           ;EUSART_Write@txData stored from wreg
  7826  0697  0020               	movlb	0	; select bank0
  7827  0698  00A4               	movwf	EUSART_Write@txData
  7828  0699                     l2908:	
  7829                           ;eusart.c: 131: {
  7830                           
  7831                           ;eusart.c: 130: while(0 == eusartTxBufferRemaining)
  7832                           
  7833  0699  0861               	movf	_eusartTxBufferRemaining,w	;volatile
  7834  069A  1903               	btfsc	3,2
  7835  069B  2E99               	goto	l2908
  7836                           
  7837                           ;eusart.c: 132: }
  7838                           ;eusart.c: 134: if(0 == PIE3bits.TXIE)
  7839  069C  002E               	movlb	14	; select bank14
  7840  069D  1A19               	btfsc	25,4	;volatile
  7841  069E  2EA4               	goto	l519
  7842                           
  7843                           ;eusart.c: 135: {
  7844                           ;eusart.c: 136: TX1REG = txData;
  7845  069F  0020               	movlb	0	; select bank0
  7846  06A0  0824               	movf	EUSART_Write@txData,w
  7847  06A1  0022               	movlb	2	; select bank2
  7848  06A2  009A               	movwf	26	;volatile
  7849                           
  7850                           ;eusart.c: 137: }
  7851  06A3  2EB8               	goto	l2922
  7852  06A4                     l519:	
  7853                           
  7854                           ;eusart.c: 138: else
  7855                           ;eusart.c: 139: {
  7856                           ;eusart.c: 140: PIE3bits.TXIE = 0;
  7857  06A4  1219               	bcf	25,4	;volatile
  7858                           
  7859                           ;eusart.c: 141: eusartTxBuffer[eusartTxHead++] = txData;
  7860  06A5  0020               	movlb	0	; select bank0
  7861  06A6  0824               	movf	EUSART_Write@txData,w
  7862  06A7  00A3               	movwf	??_EUSART_Write
  7863  06A8  0856               	movf	_eusartTxHead,w
  7864  06A9  3EDC               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  7865  06AA  0086               	movwf	6
  7866  06AB  0187               	clrf	7
  7867  06AC  0823               	movf	??_EUSART_Write,w
  7868  06AD  0081               	movwf	1
  7869  06AE  3001               	movlw	1
  7870  06AF  00A3               	movwf	??_EUSART_Write
  7871  06B0  0823               	movf	??_EUSART_Write,w
  7872  06B1  07D6               	addwf	_eusartTxHead,f	;volatile
  7873                           
  7874                           ;eusart.c: 142: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  7875  06B2  3008               	movlw	8
  7876  06B3  0256               	subwf	_eusartTxHead,w	;volatile
  7877  06B4  1803               	btfsc	3,0
  7878                           
  7879                           ;eusart.c: 143: {
  7880                           ;eusart.c: 144: eusartTxHead = 0;
  7881  06B5  01D6               	clrf	_eusartTxHead	;volatile
  7882                           
  7883                           ;eusart.c: 145: }
  7884                           ;eusart.c: 146: eusartTxBufferRemaining--;
  7885  06B6  3001               	movlw	1
  7886  06B7  02E1               	subwf	_eusartTxBufferRemaining,f	;volatile
  7887  06B8                     l2922:	
  7888                           
  7889                           ;eusart.c: 147: }
  7890                           ;eusart.c: 148: PIE3bits.TXIE = 1;
  7891  06B8  002E               	movlb	14	; select bank14
  7892  06B9  1619               	bsf	25,4	;volatile
  7893  06BA  0008               	return
  7894  06BB                     __end_of_EUSART_Write:	
  7895                           
  7896                           	psect	text7
  7897  02B2                     __ptext7:	
  7898 ;; *************** function _get_neutral_peaktopeak *****************
  7899 ;; Defined at:
  7900 ;;		line 14 in file "signal_processing.c"
  7901 ;; Parameters:    Size  Location     Type
  7902 ;;  datapoint       2   13[BANK0 ] unsigned int 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;  lowest_peak     2   23[BANK0 ] unsigned int 
  7905 ;;  highest_peak    2   21[BANK0 ] unsigned int 
  7906 ;;  neutral         2   19[BANK0 ] unsigned int 
  7907 ;;  i               1   25[BANK0 ] unsigned char 
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  2   13[BANK0 ] unsigned int 
  7910 ;; Registers used:
  7911 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7917 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7918 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;Total ram usage:       13 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; Hardware stack levels required when called:    7
  7924 ;; This function calls:
  7925 ;;		___awmod
  7926 ;;		_pkdata_insert
  7927 ;;		_pkdata_isfull
  7928 ;;		_pkdata_remove
  7929 ;; This function is called by:
  7930 ;;		_main
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           
  7935                           ;psect for function _get_neutral_peaktopeak
  7936  02B2                     _get_neutral_peaktopeak:	
  7937                           
  7938                           ;signal_processing.c: 16: pkdata_insert(datapoint);
  7939                           
  7940                           ;incstack = 0
  7941                           ; Regs used in _get_neutral_peaktopeak: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  7942  02B2  0020               	movlb	0	; select bank0
  7943  02B3  082E               	movf	get_neutral_peaktopeak@datapoint+1,w
  7944  02B4  00AB               	movwf	pkdata_insert@element+1
  7945  02B5  082D               	movf	get_neutral_peaktopeak@datapoint,w
  7946  02B6  00AA               	movwf	pkdata_insert@element
  7947  02B7  3186  264B  3182   	fcall	_pkdata_insert
  7948                           
  7949                           ;signal_processing.c: 19: if (pkdata_isfull()) {
  7950  02BA  3186  26BB  3182   	fcall	_pkdata_isfull
  7951  02BD  3A00               	xorlw	0
  7952  02BE  1903               	skipnz
  7953  02BF  2AC3               	goto	l3254
  7954                           
  7955                           ;signal_processing.c: 20: pkdata_remove();
  7956  02C0  3185  25F3  3182   	fcall	_pkdata_remove
  7957  02C3                     l3254:	
  7958                           
  7959                           ;signal_processing.c: 21: }
  7960                           ;signal_processing.c: 24: uint16_t highest_peak = pk_data[pk_front];
  7961  02C3  0020               	movlb	0	; select bank0
  7962  02C4  355E               	lslf	_pk_front,w
  7963  02C5  3E46               	addlw	(low (_pk_data| 0))& (0+255)
  7964  02C6  0086               	movwf	6
  7965  02C7  0187               	clrf	7
  7966  02C8  3F40               	moviw [0]fsr1
  7967  02C9  00B5               	movwf	get_neutral_peaktopeak@highest_peak
  7968  02CA  3F41               	moviw [1]fsr1
  7969  02CB  00B6               	movwf	get_neutral_peaktopeak@highest_peak+1
  7970                           
  7971                           ;signal_processing.c: 25: uint16_t lowest_peak = pk_data[pk_front];
  7972  02CC  355E               	lslf	_pk_front,w
  7973  02CD  3E46               	addlw	(low (_pk_data| 0))& (0+255)
  7974  02CE  0086               	movwf	6
  7975  02CF  0187               	clrf	7
  7976  02D0  3F40               	moviw [0]fsr1
  7977  02D1  00B7               	movwf	get_neutral_peaktopeak@lowest_peak
  7978  02D2  3F41               	moviw [1]fsr1
  7979  02D3  00B8               	movwf	get_neutral_peaktopeak@lowest_peak+1
  7980                           
  7981                           ;signal_processing.c: 26: uint16_t neutral;
  7982                           ;signal_processing.c: 28: uint8_t i;
  7983                           ;signal_processing.c: 31: for (i = pk_front; i != pk_rear; i = (i + 1) % (2*((int)(50 / 
      +                          25))+1)) {
  7984  02D4  085E               	movf	_pk_front,w
  7985  02D5                     L2:	
  7986  02D5  00AF               	movwf	??_get_neutral_peaktopeak
  7987  02D6  082F               	movf	??_get_neutral_peaktopeak,w
  7988  02D7  00B9               	movwf	get_neutral_peaktopeak@i
  7989  02D8  085D               	movf	_pk_rear,w
  7990  02D9  00AF               	movwf	??_get_neutral_peaktopeak
  7991  02DA  01B0               	clrf	??_get_neutral_peaktopeak+1
  7992  02DB  1BAF               	btfsc	??_get_neutral_peaktopeak,7
  7993  02DC  03B0               	decf	??_get_neutral_peaktopeak+1,f
  7994  02DD  0839               	movf	get_neutral_peaktopeak@i,w
  7995  02DE  00B1               	movwf	??_get_neutral_peaktopeak+2
  7996  02DF  01B2               	clrf	??_get_neutral_peaktopeak+3
  7997  02E0  0830               	movf	??_get_neutral_peaktopeak+1,w
  7998  02E1  0632               	xorwf	??_get_neutral_peaktopeak+3,w
  7999  02E2  1D03               	skipz
  8000  02E3  2AE6               	goto	u3655
  8001  02E4  082F               	movf	??_get_neutral_peaktopeak,w
  8002  02E5  0631               	xorwf	??_get_neutral_peaktopeak+2,w
  8003  02E6                     u3655:	
  8004  02E6  1903               	btfsc	3,2
  8005  02E7  2B29               	goto	l3270
  8006                           
  8007                           ;signal_processing.c: 32: if (pk_data[i] > highest_peak) {
  8008  02E8  3539               	lslf	get_neutral_peaktopeak@i,w
  8009  02E9  3E46               	addlw	(low (_pk_data| 0))& (0+255)
  8010  02EA  0086               	movwf	6
  8011  02EB  0187               	clrf	7
  8012  02EC  3F40               	moviw [0]fsr1
  8013  02ED  00AF               	movwf	??_get_neutral_peaktopeak
  8014  02EE  3F41               	moviw [1]fsr1
  8015  02EF  00B0               	movwf	??_get_neutral_peaktopeak+1
  8016  02F0  0830               	movf	??_get_neutral_peaktopeak+1,w
  8017  02F1  0236               	subwf	get_neutral_peaktopeak@highest_peak+1,w
  8018  02F2  1D03               	skipz
  8019  02F3  2AF6               	goto	u3635
  8020  02F4  082F               	movf	??_get_neutral_peaktopeak,w
  8021  02F5  0235               	subwf	get_neutral_peaktopeak@highest_peak,w
  8022  02F6                     u3635:	
  8023  02F6  1803               	skipnc
  8024  02F7  2B00               	goto	l687
  8025                           
  8026                           ;signal_processing.c: 34: highest_peak = pk_data[i];
  8027  02F8  3539               	lslf	get_neutral_peaktopeak@i,w
  8028  02F9  3E46               	addlw	(low (_pk_data| 0))& (0+255)
  8029  02FA  0086               	movwf	6
  8030  02FB  0187               	clrf	7
  8031  02FC  3F40               	moviw [0]fsr1
  8032  02FD  00B5               	movwf	get_neutral_peaktopeak@highest_peak
  8033  02FE  3F41               	moviw [1]fsr1
  8034  02FF  00B6               	movwf	get_neutral_peaktopeak@highest_peak+1
  8035  0300                     l687:	
  8036                           
  8037                           ;signal_processing.c: 35: }
  8038                           ;signal_processing.c: 36: if (pk_data[i] < lowest_peak) {
  8039  0300  3539               	lslf	get_neutral_peaktopeak@i,w
  8040  0301  3E46               	addlw	(low (_pk_data| 0))& (0+255)
  8041  0302  0086               	movwf	6
  8042  0303  0187               	clrf	7
  8043  0304  3F40               	moviw [0]fsr1
  8044  0305  00AF               	movwf	??_get_neutral_peaktopeak
  8045  0306  3F41               	moviw [1]fsr1
  8046  0307  00B0               	movwf	??_get_neutral_peaktopeak+1
  8047  0308  0838               	movf	get_neutral_peaktopeak@lowest_peak+1,w
  8048  0309  0230               	subwf	??_get_neutral_peaktopeak+1,w
  8049  030A  1D03               	skipz
  8050  030B  2B0E               	goto	u3645
  8051  030C  0837               	movf	get_neutral_peaktopeak@lowest_peak,w
  8052  030D  022F               	subwf	??_get_neutral_peaktopeak,w
  8053  030E                     u3645:	
  8054  030E  1803               	skipnc
  8055  030F  2B18               	goto	l3266
  8056                           
  8057                           ;signal_processing.c: 38: lowest_peak = pk_data[i];
  8058  0310  3539               	lslf	get_neutral_peaktopeak@i,w
  8059  0311  3E46               	addlw	(low (_pk_data| 0))& (0+255)
  8060  0312  0086               	movwf	6
  8061  0313  0187               	clrf	7
  8062  0314  3F40               	moviw [0]fsr1
  8063  0315  00B7               	movwf	get_neutral_peaktopeak@lowest_peak
  8064  0316  3F41               	moviw [1]fsr1
  8065  0317  00B8               	movwf	get_neutral_peaktopeak@lowest_peak+1
  8066  0318                     l3266:	
  8067  0318  3005               	movlw	5
  8068  0319  00A3               	movwf	___awmod@divisor
  8069  031A  3000               	movlw	0
  8070  031B  00A4               	movwf	___awmod@divisor+1
  8071  031C  0839               	movf	get_neutral_peaktopeak@i,w
  8072  031D  3E01               	addlw	1
  8073  031E  00A5               	movwf	___awmod@dividend
  8074  031F  3000               	movlw	0
  8075  0320  1803               	skipnc
  8076  0321  3001               	movlw	1
  8077  0322  00A6               	movwf	___awmod@dividend+1
  8078  0323  3184  2426  3182   	fcall	___awmod
  8079  0326  0020               	movlb	0	; select bank0
  8080  0327  0823               	movf	?___awmod,w
  8081  0328  2AD5               	goto	L2
  8082  0329                     l3270:	
  8083                           
  8084                           ;signal_processing.c: 39: }
  8085                           ;signal_processing.c: 40: }
  8086                           ;signal_processing.c: 43: neutral = (highest_peak + lowest_peak) / 2;
  8087  0329  0837               	movf	get_neutral_peaktopeak@lowest_peak,w
  8088  032A  0735               	addwf	get_neutral_peaktopeak@highest_peak,w
  8089  032B  00AF               	movwf	??_get_neutral_peaktopeak
  8090  032C  0838               	movf	get_neutral_peaktopeak@lowest_peak+1,w
  8091  032D  3D36               	addwfc	get_neutral_peaktopeak@highest_peak+1,w
  8092  032E  00B0               	movwf	??_get_neutral_peaktopeak+1
  8093  032F  36B0               	lsrf	??_get_neutral_peaktopeak+1,f
  8094  0330  0CAF               	rrf	??_get_neutral_peaktopeak,f
  8095  0331  082F               	movf	??_get_neutral_peaktopeak,w
  8096  0332  00B3               	movwf	get_neutral_peaktopeak@neutral
  8097  0333  0830               	movf	??_get_neutral_peaktopeak+1,w
  8098  0334  00B4               	movwf	get_neutral_peaktopeak@neutral+1
  8099                           
  8100                           ;signal_processing.c: 44: return neutral;
  8101  0335  0834               	movf	get_neutral_peaktopeak@neutral+1,w
  8102  0336  00AE               	movwf	?_get_neutral_peaktopeak+1
  8103  0337  0833               	movf	get_neutral_peaktopeak@neutral,w
  8104  0338  00AD               	movwf	?_get_neutral_peaktopeak
  8105  0339  0008               	return
  8106  033A                     __end_of_get_neutral_peaktopeak:	
  8107                           
  8108                           	psect	text8
  8109  05F3                     __ptext8:	
  8110 ;; *************** function _pkdata_remove *****************
  8111 ;; Defined at:
  8112 ;;		line 38 in file "peak_filter.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;		None
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;  element         2   11[BANK0 ] unsigned int 
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  1    wreg      unsigned char 
  8119 ;; Registers used:
  8120 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8127 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8128 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8129 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8130 ;;Total ram usage:        3 bytes
  8131 ;; Hardware stack levels used:    1
  8132 ;; Hardware stack levels required when called:    6
  8133 ;; This function calls:
  8134 ;;		___awmod
  8135 ;;		_pkdata_isempty
  8136 ;; This function is called by:
  8137 ;;		_get_neutral_peaktopeak
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           
  8142                           ;psect for function _pkdata_remove
  8143  05F3                     _pkdata_remove:	
  8144                           
  8145                           ;peak_filter.c: 39: uint16_t element;
  8146                           ;peak_filter.c: 40: if (pkdata_isempty()) {
  8147                           
  8148                           ;incstack = 0
  8149                           ; Regs used in _pkdata_remove: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8150  05F3  318F  279B  3185   	fcall	_pkdata_isempty
  8151  05F6  3A00               	xorlw	0
  8152  05F7  1D03               	btfss	3,2
  8153  05F8  0008               	return
  8154                           
  8155                           ;peak_filter.c: 43: element = pk_data[pk_front];
  8156                           
  8157                           ;peak_filter.c: 42: } else {
  8158                           
  8159                           ;peak_filter.c: 41: return 0;
  8160                           ;	Return value of _pkdata_remove is never used
  8161  05F9  0020               	movlb	0	; select bank0
  8162  05FA  355E               	lslf	_pk_front,w
  8163  05FB  3E46               	addlw	(low (_pk_data| 0))& (0+255)
  8164  05FC  0086               	movwf	6
  8165  05FD  0187               	clrf	7
  8166  05FE  3F40               	moviw [0]fsr1
  8167  05FF  00AB               	movwf	pkdata_remove@element
  8168  0600  3F41               	moviw [1]fsr1
  8169  0601  00AC               	movwf	pkdata_remove@element+1
  8170                           
  8171                           ;peak_filter.c: 44: if (pk_front == pk_rear) {
  8172  0602  085E               	movf	_pk_front,w
  8173  0603  065D               	xorwf	_pk_rear,w
  8174  0604  1D03               	skipz
  8175  0605  2E0B               	goto	l3184
  8176                           
  8177                           ;peak_filter.c: 45: pk_front = -1;
  8178  0606  01DE               	clrf	_pk_front
  8179  0607  03DE               	decf	_pk_front,f
  8180                           
  8181                           ;peak_filter.c: 46: pk_rear = -1;
  8182  0608  01DD               	clrf	_pk_rear
  8183  0609  03DD               	decf	_pk_rear,f
  8184                           
  8185                           ;peak_filter.c: 47: } else {
  8186  060A  0008               	return
  8187  060B                     l3184:	
  8188                           
  8189                           ;peak_filter.c: 48: pk_front = (pk_front + 1) % (2*((int)(50 / 25))+1);
  8190  060B  3005               	movlw	5
  8191  060C  00A3               	movwf	___awmod@divisor
  8192  060D  3000               	movlw	0
  8193  060E  00A4               	movwf	___awmod@divisor+1
  8194  060F  3001               	movlw	1
  8195  0610  075E               	addwf	_pk_front,w
  8196  0611  00A5               	movwf	___awmod@dividend
  8197  0612  01A6               	clrf	___awmod@dividend+1
  8198  0613  1803               	skipnc
  8199  0614  0AA6               	incf	___awmod@dividend+1,f
  8200  0615  1BDE               	btfsc	_pk_front,7
  8201  0616  03A6               	decf	___awmod@dividend+1,f
  8202  0617  3184  2426         	fcall	___awmod
  8203  0619  0020               	movlb	0	; select bank0
  8204  061A  0823               	movf	?___awmod,w
  8205  061B  00AA               	movwf	??_pkdata_remove
  8206  061C  082A               	movf	??_pkdata_remove,w
  8207  061D  00DE               	movwf	_pk_front
  8208                           
  8209                           ;peak_filter.c: 49: }
  8210                           ;peak_filter.c: 50: return 1;
  8211                           ;	Return value of _pkdata_remove is never used
  8212  061E  0008               	return
  8213  061F                     __end_of_pkdata_remove:	
  8214                           
  8215                           	psect	text9
  8216  0F9B                     __ptext9:	
  8217 ;; *************** function _pkdata_isempty *****************
  8218 ;; Defined at:
  8219 ;;		line 18 in file "peak_filter.c"
  8220 ;; Parameters:    Size  Location     Type
  8221 ;;		None
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;		None
  8224 ;; Return value:  Size  Location     Type
  8225 ;;                  1    wreg      unsigned char 
  8226 ;; Registers used:
  8227 ;;		wreg, status,2, status,0
  8228 ;; Tracked objects:
  8229 ;;		On entry : 0/0
  8230 ;;		On exit  : 0/0
  8231 ;;		Unchanged: 0/0
  8232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8237 ;;Total ram usage:        0 bytes
  8238 ;; Hardware stack levels used:    1
  8239 ;; Hardware stack levels required when called:    5
  8240 ;; This function calls:
  8241 ;;		Nothing
  8242 ;; This function is called by:
  8243 ;;		_pkdata_remove
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           
  8248                           ;psect for function _pkdata_isempty
  8249  0F9B                     _pkdata_isempty:	
  8250                           
  8251                           ;peak_filter.c: 19: if (pk_front == -1)
  8252                           
  8253                           ;incstack = 0
  8254                           ; Regs used in _pkdata_isempty: [wreg+status,2+status,0]
  8255  0F9B  0020               	movlb	0	; select bank0
  8256  0F9C  0A5E               	incf	_pk_front,w
  8257  0F9D  1D03               	btfss	3,2
  8258  0F9E  2FA1               	goto	l2976
  8259                           
  8260                           ;peak_filter.c: 20: return 1;
  8261  0F9F  3001               	movlw	1
  8262  0FA0  0008               	return
  8263  0FA1                     l2976:	
  8264                           
  8265                           ;peak_filter.c: 21: else
  8266                           ;peak_filter.c: 22: return 0;
  8267  0FA1  3000               	movlw	0
  8268  0FA2  0008               	return
  8269  0FA3                     __end_of_pkdata_isempty:	
  8270                           
  8271                           	psect	text10
  8272  064B                     __ptext10:	
  8273 ;; *************** function _pkdata_insert *****************
  8274 ;; Defined at:
  8275 ;;		line 25 in file "peak_filter.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;  element         2   10[BANK0 ] unsigned int 
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;		None
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  1    wreg      unsigned char 
  8282 ;; Registers used:
  8283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8289 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8292 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8293 ;;Total ram usage:        3 bytes
  8294 ;; Hardware stack levels used:    1
  8295 ;; Hardware stack levels required when called:    6
  8296 ;; This function calls:
  8297 ;;		___awmod
  8298 ;;		_pkdata_isfull
  8299 ;; This function is called by:
  8300 ;;		_get_neutral_peaktopeak
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           
  8305                           ;psect for function _pkdata_insert
  8306  064B                     _pkdata_insert:	
  8307                           
  8308                           ;peak_filter.c: 26: if (pkdata_isfull()) {
  8309                           
  8310                           ;incstack = 0
  8311                           ; Regs used in _pkdata_insert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8312  064B  3186  26BB  3186   	fcall	_pkdata_isfull
  8313  064E  3A00               	xorlw	0
  8314  064F  1D03               	btfss	3,2
  8315  0650  0008               	return
  8316                           
  8317                           ;peak_filter.c: 30: if (pk_front == -1)
  8318                           
  8319                           ;peak_filter.c: 29: } else {
  8320                           
  8321                           ;peak_filter.c: 28: return 0;
  8322                           ;	Return value of _pkdata_insert is never used
  8323  0651  0020               	movlb	0	; select bank0
  8324  0652  0A5E               	incf	_pk_front,w
  8325  0653  1903               	btfsc	3,2
  8326                           
  8327                           ;peak_filter.c: 31: pk_front = 0;
  8328  0654  01DE               	clrf	_pk_front
  8329                           
  8330                           ;peak_filter.c: 32: pk_rear = (pk_rear + 1) % (2*((int)(50 / 25))+1);
  8331  0655  3005               	movlw	5
  8332  0656  00A3               	movwf	___awmod@divisor
  8333  0657  3000               	movlw	0
  8334  0658  00A4               	movwf	___awmod@divisor+1
  8335  0659  3001               	movlw	1
  8336  065A  075D               	addwf	_pk_rear,w
  8337  065B  00A5               	movwf	___awmod@dividend
  8338  065C  01A6               	clrf	___awmod@dividend+1
  8339  065D  1803               	skipnc
  8340  065E  0AA6               	incf	___awmod@dividend+1,f
  8341  065F  1BDD               	btfsc	_pk_rear,7
  8342  0660  03A6               	decf	___awmod@dividend+1,f
  8343  0661  3184  2426         	fcall	___awmod
  8344  0663  0020               	movlb	0	; select bank0
  8345  0664  0823               	movf	?___awmod,w
  8346  0665  00AC               	movwf	??_pkdata_insert
  8347  0666  082C               	movf	??_pkdata_insert,w
  8348  0667  00DD               	movwf	_pk_rear
  8349                           
  8350                           ;peak_filter.c: 33: pk_data[pk_rear] = element;
  8351  0668  355D               	lslf	_pk_rear,w
  8352  0669  3E46               	addlw	(low (_pk_data| 0))& (0+255)
  8353  066A  0086               	movwf	6
  8354  066B  0187               	clrf	7
  8355  066C  082A               	movf	pkdata_insert@element,w
  8356  066D  3FC0               	movwi [0]fsr1
  8357  066E  082B               	movf	pkdata_insert@element+1,w
  8358  066F  3FC1               	movwi [1]fsr1
  8359                           
  8360                           ;peak_filter.c: 34: return 1;
  8361                           ;	Return value of _pkdata_insert is never used
  8362  0670  0008               	return
  8363  0671                     __end_of_pkdata_insert:	
  8364                           
  8365                           	psect	text11
  8366  06BB                     __ptext11:	
  8367 ;; *************** function _pkdata_isfull *****************
  8368 ;; Defined at:
  8369 ;;		line 9 in file "peak_filter.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;		None
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;		None
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      unsigned char 
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, status,0
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8385 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8387 ;;Total ram usage:        4 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:    5
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_pkdata_insert
  8394 ;;		_get_neutral_peaktopeak
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           
  8399                           ;psect for function _pkdata_isfull
  8400  06BB                     _pkdata_isfull:	
  8401                           
  8402                           ;peak_filter.c: 10: if ((pk_front == pk_rear + 1) || (pk_front == 0 && pk_rear == (2*((i
      +                          nt)(50 / 25))+1) - 1))
  8403                           
  8404                           ;incstack = 0
  8405                           ; Regs used in _pkdata_isfull: [wreg+status,2+status,0]
  8406  06BB  0020               	movlb	0	; select bank0
  8407  06BC  085E               	movf	_pk_front,w
  8408  06BD  00A3               	movwf	??_pkdata_isfull
  8409  06BE  01A4               	clrf	??_pkdata_isfull+1
  8410  06BF  1BA3               	btfsc	??_pkdata_isfull,7
  8411  06C0  03A4               	decf	??_pkdata_isfull+1,f
  8412  06C1  3001               	movlw	1
  8413  06C2  075D               	addwf	_pk_rear,w
  8414  06C3  00A5               	movwf	??_pkdata_isfull+2
  8415  06C4  01A6               	clrf	??_pkdata_isfull+3
  8416  06C5  1803               	skipnc
  8417  06C6  0AA6               	incf	??_pkdata_isfull+3,f
  8418  06C7  1BDD               	btfsc	_pk_rear,7
  8419  06C8  03A6               	decf	??_pkdata_isfull+3,f
  8420  06C9  0020               	movlb	0	; select bank0
  8421  06CA  0824               	movf	??_pkdata_isfull+1,w
  8422  06CB  0626               	xorwf	??_pkdata_isfull+3,w
  8423  06CC  1D03               	skipz
  8424  06CD  2ED0               	goto	u3175
  8425  06CE  0823               	movf	??_pkdata_isfull,w
  8426  06CF  0625               	xorwf	??_pkdata_isfull+2,w
  8427  06D0                     u3175:	
  8428  06D0  1903               	skipnz
  8429  06D1  2ED9               	goto	l2958
  8430  06D2  085E               	movf	_pk_front,w
  8431  06D3  1D03               	btfss	3,2
  8432  06D4  2EDB               	goto	l2964
  8433  06D5  3004               	movlw	4
  8434  06D6  065D               	xorwf	_pk_rear,w
  8435  06D7  1D03               	btfss	3,2
  8436  06D8  2EDB               	goto	l2964
  8437  06D9                     l2958:	
  8438                           
  8439                           ;peak_filter.c: 11: return 1;
  8440  06D9  3001               	movlw	1
  8441  06DA  0008               	return
  8442  06DB                     l2964:	
  8443                           
  8444                           ;peak_filter.c: 12: else
  8445                           ;peak_filter.c: 13: return 0;
  8446  06DB  3000               	movlw	0
  8447  06DC  0008               	return
  8448  06DD                     __end_of_pkdata_isfull:	
  8449                           
  8450                           	psect	text12
  8451  04B1                     __ptext12:	
  8452 ;; *************** function _get_moving_average *****************
  8453 ;; Defined at:
  8454 ;;		line 49 in file "signal_processing.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;  datapoint       2   15[BANK0 ] unsigned int 
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;		None
  8459 ;; Return value:  Size  Location     Type
  8460 ;;                  3   15[BANK0 ] float 
  8461 ;; Registers used:
  8462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8463 ;; Tracked objects:
  8464 ;;		On entry : 0/0
  8465 ;;		On exit  : 0/0
  8466 ;;		Unchanged: 0/0
  8467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8468 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8470 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8471 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8472 ;;Total ram usage:        5 bytes
  8473 ;; Hardware stack levels used:    1
  8474 ;; Hardware stack levels required when called:    7
  8475 ;; This function calls:
  8476 ;;		___lwdiv
  8477 ;;		___lwtoft
  8478 ;;		_madata_insert
  8479 ;;		_madata_isfull
  8480 ;;		_madata_remove
  8481 ;; This function is called by:
  8482 ;;		_main
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486                           
  8487                           ;psect for function _get_moving_average
  8488  04B1                     _get_moving_average:	
  8489                           
  8490                           ;signal_processing.c: 50: madata_insert(datapoint);
  8491                           
  8492                           ;incstack = 0
  8493                           ; Regs used in _get_moving_average: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8494  04B1  0020               	movlb	0	; select bank0
  8495  04B2  0830               	movf	get_moving_average@datapoint+1,w
  8496  04B3  00AB               	movwf	madata_insert@element+1
  8497  04B4  082F               	movf	get_moving_average@datapoint,w
  8498  04B5  00AA               	movwf	madata_insert@element
  8499  04B6  3186  2671  3184   	fcall	_madata_insert
  8500                           
  8501                           ;signal_processing.c: 52: ma_window_sum += datapoint;
  8502  04B9  0020               	movlb	0	; select bank0
  8503  04BA  082F               	movf	get_moving_average@datapoint,w
  8504  04BB  07D0               	addwf	_ma_window_sum,f
  8505  04BC  0830               	movf	get_moving_average@datapoint+1,w
  8506  04BD  3DD1               	addwfc	_ma_window_sum+1,f
  8507                           
  8508                           ;signal_processing.c: 54: if (madata_isfull()) {
  8509  04BE  3186  26DD  3184   	fcall	_madata_isfull
  8510  04C1  3A00               	xorlw	0
  8511  04C2  1903               	skipnz
  8512  04C3  2CD4               	goto	l3292
  8513                           
  8514                           ;signal_processing.c: 56: ma_window_sum -= ma_data[ma_front];
  8515  04C4  0020               	movlb	0	; select bank0
  8516  04C5  355C               	lslf	_ma_front,w
  8517  04C6  3EA0               	addlw	(low (_ma_data| 0))& (0+255)
  8518  04C7  0086               	movwf	6
  8519  04C8  0187               	clrf	7
  8520  04C9  3F40               	moviw [0]fsr1
  8521  04CA  00B2               	movwf	??_get_moving_average
  8522  04CB  3F41               	moviw [1]fsr1
  8523  04CC  00B3               	movwf	??_get_moving_average+1
  8524  04CD  0832               	movf	??_get_moving_average,w
  8525  04CE  02D0               	subwf	_ma_window_sum,f
  8526  04CF  0833               	movf	??_get_moving_average+1,w
  8527  04D0  3BD1               	subwfb	_ma_window_sum+1,f
  8528                           
  8529                           ;signal_processing.c: 57: madata_remove();
  8530  04D1  3186  261F  3184   	fcall	_madata_remove
  8531  04D4                     l3292:	
  8532                           
  8533                           ;signal_processing.c: 58: }
  8534                           ;signal_processing.c: 61: return ma_window_sum / (((int)(50 * 0.5)+1)-1);
  8535  04D4  3019               	movlw	25
  8536  04D5  0020               	movlb	0	; select bank0
  8537  04D6  00A3               	movwf	___lwdiv@divisor
  8538  04D7  3000               	movlw	0
  8539  04D8  00A4               	movwf	___lwdiv@divisor+1
  8540  04D9  0851               	movf	_ma_window_sum+1,w
  8541  04DA  00A6               	movwf	___lwdiv@dividend+1
  8542  04DB  0850               	movf	_ma_window_sum,w
  8543  04DC  00A5               	movwf	___lwdiv@dividend
  8544  04DD  3185  2526  3184   	fcall	___lwdiv
  8545  04E0  0020               	movlb	0	; select bank0
  8546  04E1  0824               	movf	?___lwdiv+1,w
  8547  04E2  00AC               	movwf	___lwtoft@c+1
  8548  04E3  0823               	movf	?___lwdiv,w
  8549  04E4  00AB               	movwf	___lwtoft@c
  8550  04E5  318F  27EB         	fcall	___lwtoft
  8551  04E7  0020               	movlb	0	; select bank0
  8552  04E8  082B               	movf	?___lwtoft,w
  8553  04E9  00AF               	movwf	?_get_moving_average
  8554  04EA  082C               	movf	?___lwtoft+1,w
  8555  04EB  00B0               	movwf	?_get_moving_average+1
  8556  04EC  082D               	movf	?___lwtoft+2,w
  8557  04ED  00B1               	movwf	?_get_moving_average+2
  8558  04EE  0008               	return
  8559  04EF                     __end_of_get_moving_average:	
  8560                           
  8561                           	psect	text13
  8562  061F                     __ptext13:	
  8563 ;; *************** function _madata_remove *****************
  8564 ;; Defined at:
  8565 ;;		line 36 in file "moving_avg_filter.c"
  8566 ;; Parameters:    Size  Location     Type
  8567 ;;		None
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;  element         2   11[BANK0 ] unsigned int 
  8570 ;; Return value:  Size  Location     Type
  8571 ;;                  1    wreg      unsigned char 
  8572 ;; Registers used:
  8573 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8574 ;; Tracked objects:
  8575 ;;		On entry : 0/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8580 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8581 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8582 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8583 ;;Total ram usage:        3 bytes
  8584 ;; Hardware stack levels used:    1
  8585 ;; Hardware stack levels required when called:    6
  8586 ;; This function calls:
  8587 ;;		___awmod
  8588 ;;		_madata_isempty
  8589 ;; This function is called by:
  8590 ;;		_get_moving_average
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           
  8595                           ;psect for function _madata_remove
  8596  061F                     _madata_remove:	
  8597                           
  8598                           ;moving_avg_filter.c: 37: uint16_t element;
  8599                           ;moving_avg_filter.c: 38: if (madata_isempty()) {
  8600                           
  8601                           ;incstack = 0
  8602                           ; Regs used in _madata_remove: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8603  061F  318F  2793  3186   	fcall	_madata_isempty
  8604  0622  3A00               	xorlw	0
  8605  0623  1D03               	btfss	3,2
  8606  0624  0008               	return
  8607                           
  8608                           ;moving_avg_filter.c: 41: element = ma_data[ma_front];
  8609                           
  8610                           ;moving_avg_filter.c: 40: } else {
  8611                           
  8612                           ;moving_avg_filter.c: 39: return 0;
  8613                           ;	Return value of _madata_remove is never used
  8614  0625  0020               	movlb	0	; select bank0
  8615  0626  355C               	lslf	_ma_front,w
  8616  0627  3EA0               	addlw	(low (_ma_data| 0))& (0+255)
  8617  0628  0086               	movwf	6
  8618  0629  0187               	clrf	7
  8619  062A  3F40               	moviw [0]fsr1
  8620  062B  00AB               	movwf	madata_remove@element
  8621  062C  3F41               	moviw [1]fsr1
  8622  062D  00AC               	movwf	madata_remove@element+1
  8623                           
  8624                           ;moving_avg_filter.c: 42: if (ma_front == ma_rear) {
  8625  062E  085C               	movf	_ma_front,w
  8626  062F  065B               	xorwf	_ma_rear,w
  8627  0630  1D03               	skipz
  8628  0631  2E37               	goto	l3152
  8629                           
  8630                           ;moving_avg_filter.c: 43: ma_front = -1;
  8631  0632  01DC               	clrf	_ma_front
  8632  0633  03DC               	decf	_ma_front,f
  8633                           
  8634                           ;moving_avg_filter.c: 44: ma_rear = -1;
  8635  0634  01DB               	clrf	_ma_rear
  8636  0635  03DB               	decf	_ma_rear,f
  8637                           
  8638                           ;moving_avg_filter.c: 45: } else {
  8639  0636  0008               	return
  8640  0637                     l3152:	
  8641                           
  8642                           ;moving_avg_filter.c: 46: ma_front = (ma_front + 1) % ((int)(50 * 0.5)+1);
  8643  0637  301A               	movlw	26
  8644  0638  00A3               	movwf	___awmod@divisor
  8645  0639  3000               	movlw	0
  8646  063A  00A4               	movwf	___awmod@divisor+1
  8647  063B  3001               	movlw	1
  8648  063C  075C               	addwf	_ma_front,w
  8649  063D  00A5               	movwf	___awmod@dividend
  8650  063E  01A6               	clrf	___awmod@dividend+1
  8651  063F  1803               	skipnc
  8652  0640  0AA6               	incf	___awmod@dividend+1,f
  8653  0641  1BDC               	btfsc	_ma_front,7
  8654  0642  03A6               	decf	___awmod@dividend+1,f
  8655  0643  3184  2426         	fcall	___awmod
  8656  0645  0020               	movlb	0	; select bank0
  8657  0646  0823               	movf	?___awmod,w
  8658  0647  00AA               	movwf	??_madata_remove
  8659  0648  082A               	movf	??_madata_remove,w
  8660  0649  00DC               	movwf	_ma_front
  8661                           
  8662                           ;moving_avg_filter.c: 47: }
  8663                           ;moving_avg_filter.c: 48: return 1;
  8664                           ;	Return value of _madata_remove is never used
  8665  064A  0008               	return
  8666  064B                     __end_of_madata_remove:	
  8667                           
  8668                           	psect	text14
  8669  0F93                     __ptext14:	
  8670 ;; *************** function _madata_isempty *****************
  8671 ;; Defined at:
  8672 ;;		line 16 in file "moving_avg_filter.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;		None
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;		None
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  1    wreg      unsigned char 
  8679 ;; Registers used:
  8680 ;;		wreg, status,2, status,0
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8690 ;;Total ram usage:        0 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; Hardware stack levels required when called:    5
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_madata_remove
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           
  8701                           ;psect for function _madata_isempty
  8702  0F93                     _madata_isempty:	
  8703                           
  8704                           ;moving_avg_filter.c: 17: if (ma_front == -1)
  8705                           
  8706                           ;incstack = 0
  8707                           ; Regs used in _madata_isempty: [wreg+status,2+status,0]
  8708  0F93  0020               	movlb	0	; select bank0
  8709  0F94  0A5C               	incf	_ma_front,w
  8710  0F95  1D03               	btfss	3,2
  8711  0F96  2F99               	goto	l2948
  8712                           
  8713                           ;moving_avg_filter.c: 18: return 1;
  8714  0F97  3001               	movlw	1
  8715  0F98  0008               	return
  8716  0F99                     l2948:	
  8717                           
  8718                           ;moving_avg_filter.c: 19: else
  8719                           ;moving_avg_filter.c: 20: return 0;
  8720  0F99  3000               	movlw	0
  8721  0F9A  0008               	return
  8722  0F9B                     __end_of_madata_isempty:	
  8723                           
  8724                           	psect	text15
  8725  0671                     __ptext15:	
  8726 ;; *************** function _madata_insert *****************
  8727 ;; Defined at:
  8728 ;;		line 23 in file "moving_avg_filter.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  element         2   10[BANK0 ] unsigned int 
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;		None
  8733 ;; Return value:  Size  Location     Type
  8734 ;;                  1    wreg      unsigned char 
  8735 ;; Registers used:
  8736 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8737 ;; Tracked objects:
  8738 ;;		On entry : 0/0
  8739 ;;		On exit  : 0/0
  8740 ;;		Unchanged: 0/0
  8741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8742 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8744 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8745 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8746 ;;Total ram usage:        3 bytes
  8747 ;; Hardware stack levels used:    1
  8748 ;; Hardware stack levels required when called:    6
  8749 ;; This function calls:
  8750 ;;		___awmod
  8751 ;;		_madata_isfull
  8752 ;; This function is called by:
  8753 ;;		_get_moving_average
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757                           
  8758                           ;psect for function _madata_insert
  8759  0671                     _madata_insert:	
  8760                           
  8761                           ;moving_avg_filter.c: 24: if (madata_isfull()) {
  8762                           
  8763                           ;incstack = 0
  8764                           ; Regs used in _madata_insert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8765  0671  3186  26DD  3186   	fcall	_madata_isfull
  8766  0674  3A00               	xorlw	0
  8767  0675  1D03               	btfss	3,2
  8768  0676  0008               	return
  8769                           
  8770                           ;moving_avg_filter.c: 28: if (ma_front == -1)
  8771                           
  8772                           ;moving_avg_filter.c: 27: } else {
  8773                           
  8774                           ;moving_avg_filter.c: 26: return 0;
  8775                           ;	Return value of _madata_insert is never used
  8776  0677  0020               	movlb	0	; select bank0
  8777  0678  0A5C               	incf	_ma_front,w
  8778  0679  1903               	btfsc	3,2
  8779                           
  8780                           ;moving_avg_filter.c: 29: ma_front = 0;
  8781  067A  01DC               	clrf	_ma_front
  8782                           
  8783                           ;moving_avg_filter.c: 30: ma_rear = (ma_rear + 1) % ((int)(50 * 0.5)+1);
  8784  067B  301A               	movlw	26
  8785  067C  00A3               	movwf	___awmod@divisor
  8786  067D  3000               	movlw	0
  8787  067E  00A4               	movwf	___awmod@divisor+1
  8788  067F  3001               	movlw	1
  8789  0680  075B               	addwf	_ma_rear,w
  8790  0681  00A5               	movwf	___awmod@dividend
  8791  0682  01A6               	clrf	___awmod@dividend+1
  8792  0683  1803               	skipnc
  8793  0684  0AA6               	incf	___awmod@dividend+1,f
  8794  0685  1BDB               	btfsc	_ma_rear,7
  8795  0686  03A6               	decf	___awmod@dividend+1,f
  8796  0687  3184  2426         	fcall	___awmod
  8797  0689  0020               	movlb	0	; select bank0
  8798  068A  0823               	movf	?___awmod,w
  8799  068B  00AC               	movwf	??_madata_insert
  8800  068C  082C               	movf	??_madata_insert,w
  8801  068D  00DB               	movwf	_ma_rear
  8802                           
  8803                           ;moving_avg_filter.c: 31: ma_data[ma_rear] = element;
  8804  068E  355B               	lslf	_ma_rear,w
  8805  068F  3EA0               	addlw	(low (_ma_data| 0))& (0+255)
  8806  0690  0086               	movwf	6
  8807  0691  0187               	clrf	7
  8808  0692  082A               	movf	madata_insert@element,w
  8809  0693  3FC0               	movwi [0]fsr1
  8810  0694  082B               	movf	madata_insert@element+1,w
  8811  0695  3FC1               	movwi [1]fsr1
  8812                           
  8813                           ;moving_avg_filter.c: 32: return 1;
  8814                           ;	Return value of _madata_insert is never used
  8815  0696  0008               	return
  8816  0697                     __end_of_madata_insert:	
  8817                           
  8818                           	psect	text16
  8819  06DD                     __ptext16:	
  8820 ;; *************** function _madata_isfull *****************
  8821 ;; Defined at:
  8822 ;;		line 9 in file "moving_avg_filter.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;		None
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;		None
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  1    wreg      unsigned char 
  8829 ;; Registers used:
  8830 ;;		wreg, status,2, status,0
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8838 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8839 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8840 ;;Total ram usage:        4 bytes
  8841 ;; Hardware stack levels used:    1
  8842 ;; Hardware stack levels required when called:    5
  8843 ;; This function calls:
  8844 ;;		Nothing
  8845 ;; This function is called by:
  8846 ;;		_madata_insert
  8847 ;;		_get_moving_average
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           
  8852                           ;psect for function _madata_isfull
  8853  06DD                     _madata_isfull:	
  8854                           
  8855                           ;moving_avg_filter.c: 10: if ((ma_front == ma_rear + 1) || (ma_front == 0 && ma_rear == 
      +                          ((int)(50 * 0.5)+1) - 1))
  8856                           
  8857                           ;incstack = 0
  8858                           ; Regs used in _madata_isfull: [wreg+status,2+status,0]
  8859  06DD  0020               	movlb	0	; select bank0
  8860  06DE  085C               	movf	_ma_front,w
  8861  06DF  00A3               	movwf	??_madata_isfull
  8862  06E0  01A4               	clrf	??_madata_isfull+1
  8863  06E1  1BA3               	btfsc	??_madata_isfull,7
  8864  06E2  03A4               	decf	??_madata_isfull+1,f
  8865  06E3  3001               	movlw	1
  8866  06E4  075B               	addwf	_ma_rear,w
  8867  06E5  00A5               	movwf	??_madata_isfull+2
  8868  06E6  01A6               	clrf	??_madata_isfull+3
  8869  06E7  1803               	skipnc
  8870  06E8  0AA6               	incf	??_madata_isfull+3,f
  8871  06E9  1BDB               	btfsc	_ma_rear,7
  8872  06EA  03A6               	decf	??_madata_isfull+3,f
  8873  06EB  0020               	movlb	0	; select bank0
  8874  06EC  0824               	movf	??_madata_isfull+1,w
  8875  06ED  0626               	xorwf	??_madata_isfull+3,w
  8876  06EE  1D03               	skipz
  8877  06EF  2EF2               	goto	u3125
  8878  06F0  0823               	movf	??_madata_isfull,w
  8879  06F1  0625               	xorwf	??_madata_isfull+2,w
  8880  06F2                     u3125:	
  8881  06F2  1903               	skipnz
  8882  06F3  2EFB               	goto	l2930
  8883  06F4  085C               	movf	_ma_front,w
  8884  06F5  1D03               	btfss	3,2
  8885  06F6  2EFD               	goto	l2936
  8886  06F7  3019               	movlw	25
  8887  06F8  065B               	xorwf	_ma_rear,w
  8888  06F9  1D03               	btfss	3,2
  8889  06FA  2EFD               	goto	l2936
  8890  06FB                     l2930:	
  8891                           
  8892                           ;moving_avg_filter.c: 11: return 1;
  8893  06FB  3001               	movlw	1
  8894  06FC  0008               	return
  8895  06FD                     l2936:	
  8896                           
  8897                           ;moving_avg_filter.c: 12: else
  8898                           ;moving_avg_filter.c: 13: return 0;
  8899  06FD  3000               	movlw	0
  8900  06FE  0008               	return
  8901  06FF                     __end_of_madata_isfull:	
  8902                           
  8903                           	psect	text17
  8904  0426                     __ptext17:	
  8905 ;; *************** function ___awmod *****************
  8906 ;; Defined at:
  8907 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awmod.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;  divisor         2    3[BANK0 ] int 
  8910 ;;  dividend        2    5[BANK0 ] int 
  8911 ;; Auto vars:     Size  Location     Type
  8912 ;;  sign            1    9[BANK0 ] unsigned char 
  8913 ;;  counter         1    8[BANK0 ] unsigned char 
  8914 ;; Return value:  Size  Location     Type
  8915 ;;                  2    3[BANK0 ] int 
  8916 ;; Registers used:
  8917 ;;		wreg, status,2, status,0
  8918 ;; Tracked objects:
  8919 ;;		On entry : 0/0
  8920 ;;		On exit  : 0/0
  8921 ;;		Unchanged: 0/0
  8922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8923 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8925 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8926 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8927 ;;Total ram usage:        7 bytes
  8928 ;; Hardware stack levels used:    1
  8929 ;; Hardware stack levels required when called:    5
  8930 ;; This function calls:
  8931 ;;		Nothing
  8932 ;; This function is called by:
  8933 ;;		_main
  8934 ;;		_madata_insert
  8935 ;;		_madata_remove
  8936 ;;		_pkdata_insert
  8937 ;;		_pkdata_remove
  8938 ;;		_sbuf_remove
  8939 ;;		_get_neutral_peaktopeak
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           
  8944                           ;psect for function ___awmod
  8945  0426                     ___awmod:	
  8946                           
  8947                           ;incstack = 0
  8948                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8949  0426  0020               	movlb	0	; select bank0
  8950  0427  01A9               	clrf	___awmod@sign
  8951  0428  1FA6               	btfss	___awmod@dividend+1,7
  8952  0429  2C31               	goto	l3020
  8953  042A  09A5               	comf	___awmod@dividend,f
  8954  042B  09A6               	comf	___awmod@dividend+1,f
  8955  042C  0AA5               	incf	___awmod@dividend,f
  8956  042D  1903               	skipnz
  8957  042E  0AA6               	incf	___awmod@dividend+1,f
  8958  042F  01A9               	clrf	___awmod@sign
  8959  0430  0AA9               	incf	___awmod@sign,f
  8960  0431                     l3020:	
  8961  0431  1FA4               	btfss	___awmod@divisor+1,7
  8962  0432  2C38               	goto	l3024
  8963  0433  09A3               	comf	___awmod@divisor,f
  8964  0434  09A4               	comf	___awmod@divisor+1,f
  8965  0435  0AA3               	incf	___awmod@divisor,f
  8966  0436  1903               	skipnz
  8967  0437  0AA4               	incf	___awmod@divisor+1,f
  8968  0438                     l3024:	
  8969  0438  0823               	movf	___awmod@divisor,w
  8970  0439  0424               	iorwf	___awmod@divisor+1,w
  8971  043A  1903               	btfsc	3,2
  8972  043B  2C5F               	goto	l3042
  8973  043C  01A8               	clrf	___awmod@counter
  8974  043D  0AA8               	incf	___awmod@counter,f
  8975  043E                     l3032:	
  8976  043E  1BA4               	btfsc	___awmod@divisor+1,7
  8977  043F  2C4A               	goto	l3034
  8978  0440  3001               	movlw	1
  8979  0441                     u3365:	
  8980  0441  35A3               	lslf	___awmod@divisor,f
  8981  0442  0DA4               	rlf	___awmod@divisor+1,f
  8982  0443  0B89               	decfsz	9,f
  8983  0444  2C41               	goto	u3365
  8984  0445  3001               	movlw	1
  8985  0446  00A7               	movwf	??___awmod
  8986  0447  0827               	movf	??___awmod,w
  8987  0448  07A8               	addwf	___awmod@counter,f
  8988  0449  2C3E               	goto	l3032
  8989  044A                     l3034:	
  8990  044A  0824               	movf	___awmod@divisor+1,w
  8991  044B  0226               	subwf	___awmod@dividend+1,w
  8992  044C  1D03               	skipz
  8993  044D  2C50               	goto	u3385
  8994  044E  0823               	movf	___awmod@divisor,w
  8995  044F  0225               	subwf	___awmod@dividend,w
  8996  0450                     u3385:	
  8997  0450  1C03               	skipc
  8998  0451  2C56               	goto	l3038
  8999  0452  0823               	movf	___awmod@divisor,w
  9000  0453  02A5               	subwf	___awmod@dividend,f
  9001  0454  0824               	movf	___awmod@divisor+1,w
  9002  0455  3BA6               	subwfb	___awmod@dividend+1,f
  9003  0456                     l3038:	
  9004  0456  3001               	movlw	1
  9005  0457                     u3395:	
  9006  0457  36A4               	lsrf	___awmod@divisor+1,f
  9007  0458  0CA3               	rrf	___awmod@divisor,f
  9008  0459  0B89               	decfsz	9,f
  9009  045A  2C57               	goto	u3395
  9010  045B  3001               	movlw	1
  9011  045C  02A8               	subwf	___awmod@counter,f
  9012  045D  1D03               	btfss	3,2
  9013  045E  2C4A               	goto	l3034
  9014  045F                     l3042:	
  9015  045F  0829               	movf	___awmod@sign,w
  9016  0460  1903               	btfsc	3,2
  9017  0461  2C67               	goto	l3046
  9018  0462  09A5               	comf	___awmod@dividend,f
  9019  0463  09A6               	comf	___awmod@dividend+1,f
  9020  0464  0AA5               	incf	___awmod@dividend,f
  9021  0465  1903               	skipnz
  9022  0466  0AA6               	incf	___awmod@dividend+1,f
  9023  0467                     l3046:	
  9024  0467  0826               	movf	___awmod@dividend+1,w
  9025  0468  00A4               	movwf	?___awmod+1
  9026  0469  0825               	movf	___awmod@dividend,w
  9027  046A  00A3               	movwf	?___awmod
  9028  046B  0008               	return
  9029  046C                     __end_of___awmod:	
  9030                           
  9031                           	psect	text18
  9032  0FEB                     __ptext18:	
  9033 ;; *************** function ___lwtoft *****************
  9034 ;; Defined at:
  9035 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;  c               2   11[BANK0 ] unsigned int 
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;		None
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  3   11[BANK0 ] float 
  9042 ;; Registers used:
  9043 ;;		wreg, status,2, status,0, pclath, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9049 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9051 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9052 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9053 ;;Total ram usage:        4 bytes
  9054 ;; Hardware stack levels used:    1
  9055 ;; Hardware stack levels required when called:    6
  9056 ;; This function calls:
  9057 ;;		___ftpack
  9058 ;; This function is called by:
  9059 ;;		_get_moving_average
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           
  9064                           ;psect for function ___lwtoft
  9065  0FEB                     ___lwtoft:	
  9066                           
  9067                           ;incstack = 0
  9068                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  9069  0FEB  0020               	movlb	0	; select bank0
  9070  0FEC  082B               	movf	___lwtoft@c,w
  9071  0FED  00A3               	movwf	___ftpack@arg
  9072  0FEE  082C               	movf	___lwtoft@c+1,w
  9073  0FEF  00A4               	movwf	___ftpack@arg+1
  9074  0FF0  01A5               	clrf	___ftpack@arg+2
  9075  0FF1  308E               	movlw	142
  9076  0FF2  00AE               	movwf	??___lwtoft
  9077  0FF3  082E               	movf	??___lwtoft,w
  9078  0FF4  00A6               	movwf	___ftpack@exp
  9079  0FF5  01A7               	clrf	___ftpack@sign
  9080  0FF6  3183  23C1         	fcall	___ftpack
  9081  0FF8  0020               	movlb	0	; select bank0
  9082  0FF9  0823               	movf	?___ftpack,w
  9083  0FFA  00AB               	movwf	?___lwtoft
  9084  0FFB  0824               	movf	?___ftpack+1,w
  9085  0FFC  00AC               	movwf	?___lwtoft+1
  9086  0FFD  0825               	movf	?___ftpack+2,w
  9087  0FFE  00AD               	movwf	?___lwtoft+2
  9088  0FFF  0008               	return
  9089  1000                     __end_of___lwtoft:	
  9090                           
  9091                           	psect	text19
  9092  0526                     __ptext19:	
  9093 ;; *************** function ___lwdiv *****************
  9094 ;; Defined at:
  9095 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;  divisor         2    3[BANK0 ] unsigned int 
  9098 ;;  dividend        2    5[BANK0 ] unsigned int 
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;  quotient        2    9[BANK0 ] unsigned int 
  9101 ;;  counter         1    8[BANK0 ] unsigned char 
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  2    3[BANK0 ] unsigned int 
  9104 ;; Registers used:
  9105 ;;		wreg, status,2, status,0
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9111 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9112 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9114 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9115 ;;Total ram usage:        8 bytes
  9116 ;; Hardware stack levels used:    1
  9117 ;; Hardware stack levels required when called:    5
  9118 ;; This function calls:
  9119 ;;		Nothing
  9120 ;; This function is called by:
  9121 ;;		_get_moving_average
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           
  9126                           ;psect for function ___lwdiv
  9127  0526                     ___lwdiv:	
  9128                           
  9129                           ;incstack = 0
  9130                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9131  0526  0020               	movlb	0	; select bank0
  9132  0527  01A9               	clrf	___lwdiv@quotient
  9133  0528  01AA               	clrf	___lwdiv@quotient+1
  9134  0529  0823               	movf	___lwdiv@divisor,w
  9135  052A  0424               	iorwf	___lwdiv@divisor+1,w
  9136  052B  1903               	btfsc	3,2
  9137  052C  2D56               	goto	l3222
  9138  052D  01A8               	clrf	___lwdiv@counter
  9139  052E  0AA8               	incf	___lwdiv@counter,f
  9140  052F                     l3210:	
  9141  052F  1BA4               	btfsc	___lwdiv@divisor+1,7
  9142  0530  2D3B               	goto	l3212
  9143  0531  3001               	movlw	1
  9144  0532                     u3565:	
  9145  0532  35A3               	lslf	___lwdiv@divisor,f
  9146  0533  0DA4               	rlf	___lwdiv@divisor+1,f
  9147  0534  0B89               	decfsz	9,f
  9148  0535  2D32               	goto	u3565
  9149  0536  3001               	movlw	1
  9150  0537  00A7               	movwf	??___lwdiv
  9151  0538  0827               	movf	??___lwdiv,w
  9152  0539  07A8               	addwf	___lwdiv@counter,f
  9153  053A  2D2F               	goto	l3210
  9154  053B                     l3212:	
  9155  053B  3001               	movlw	1
  9156  053C                     u3585:	
  9157  053C  35A9               	lslf	___lwdiv@quotient,f
  9158  053D  0DAA               	rlf	___lwdiv@quotient+1,f
  9159  053E  0B89               	decfsz	9,f
  9160  053F  2D3C               	goto	u3585
  9161  0540  0824               	movf	___lwdiv@divisor+1,w
  9162  0541  0226               	subwf	___lwdiv@dividend+1,w
  9163  0542  1D03               	skipz
  9164  0543  2D46               	goto	u3595
  9165  0544  0823               	movf	___lwdiv@divisor,w
  9166  0545  0225               	subwf	___lwdiv@dividend,w
  9167  0546                     u3595:	
  9168  0546  1C03               	skipc
  9169  0547  2D4D               	goto	l3218
  9170  0548  0823               	movf	___lwdiv@divisor,w
  9171  0549  02A5               	subwf	___lwdiv@dividend,f
  9172  054A  0824               	movf	___lwdiv@divisor+1,w
  9173  054B  3BA6               	subwfb	___lwdiv@dividend+1,f
  9174  054C  1429               	bsf	___lwdiv@quotient,0
  9175  054D                     l3218:	
  9176  054D  3001               	movlw	1
  9177  054E                     u3605:	
  9178  054E  36A4               	lsrf	___lwdiv@divisor+1,f
  9179  054F  0CA3               	rrf	___lwdiv@divisor,f
  9180  0550  0B89               	decfsz	9,f
  9181  0551  2D4E               	goto	u3605
  9182  0552  3001               	movlw	1
  9183  0553  02A8               	subwf	___lwdiv@counter,f
  9184  0554  1D03               	btfss	3,2
  9185  0555  2D3B               	goto	l3212
  9186  0556                     l3222:	
  9187  0556  082A               	movf	___lwdiv@quotient+1,w
  9188  0557  00A4               	movwf	?___lwdiv+1
  9189  0558  0829               	movf	___lwdiv@quotient,w
  9190  0559  00A3               	movwf	?___lwdiv
  9191  055A  0008               	return
  9192  055B                     __end_of___lwdiv:	
  9193                           
  9194                           	psect	text20
  9195  0FCA                     __ptext20:	
  9196 ;; *************** function _abs *****************
  9197 ;; Defined at:
  9198 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\abs.c"
  9199 ;; Parameters:    Size  Location     Type
  9200 ;;  a               2    3[BANK0 ] int 
  9201 ;; Auto vars:     Size  Location     Type
  9202 ;;		None
  9203 ;; Return value:  Size  Location     Type
  9204 ;;                  2    3[BANK0 ] int 
  9205 ;; Registers used:
  9206 ;;		wreg, status,2, status,0
  9207 ;; Tracked objects:
  9208 ;;		On entry : 0/0
  9209 ;;		On exit  : 0/0
  9210 ;;		Unchanged: 0/0
  9211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9212 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9214 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9215 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9216 ;;Total ram usage:        4 bytes
  9217 ;; Hardware stack levels used:    1
  9218 ;; Hardware stack levels required when called:    5
  9219 ;; This function calls:
  9220 ;;		Nothing
  9221 ;; This function is called by:
  9222 ;;		_main
  9223 ;; This function uses a non-reentrant model
  9224 ;;
  9225                           
  9226                           
  9227                           ;psect for function _abs
  9228  0FCA                     _abs:	
  9229                           
  9230                           ;incstack = 0
  9231                           ; Regs used in _abs: [wreg+status,2+status,0]
  9232  0FCA  0020               	movlb	0	; select bank0
  9233  0FCB  1FA4               	btfss	abs@a+1,7
  9234  0FCC  0008               	return
  9235  0FCD  0923               	comf	abs@a,w
  9236  0FCE  00A5               	movwf	??_abs
  9237  0FCF  0924               	comf	abs@a+1,w
  9238  0FD0  00A6               	movwf	??_abs+1
  9239  0FD1  0AA5               	incf	??_abs,f
  9240  0FD2  1903               	skipnz
  9241  0FD3  0AA6               	incf	??_abs+1,f
  9242  0FD4  0825               	movf	??_abs,w
  9243  0FD5  00A3               	movwf	?_abs
  9244  0FD6  0826               	movf	??_abs+1,w
  9245  0FD7  00A4               	movwf	?_abs+1
  9246  0FD8  0008               	return
  9247  0FD9                     __end_of_abs:	
  9248                           
  9249                           	psect	text21
  9250  033A                     __ptext21:	
  9251 ;; *************** function ___fttol *****************
  9252 ;; Defined at:
  9253 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
  9254 ;; Parameters:    Size  Location     Type
  9255 ;;  f1              3   20[BANK0 ] float 
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;  lval            4   29[BANK0 ] unsigned long 
  9258 ;;  exp1            1   33[BANK0 ] unsigned char 
  9259 ;;  sign1           1   28[BANK0 ] unsigned char 
  9260 ;; Return value:  Size  Location     Type
  9261 ;;                  4   20[BANK0 ] long 
  9262 ;; Registers used:
  9263 ;;		wreg, status,2, status,0
  9264 ;; Tracked objects:
  9265 ;;		On entry : 0/0
  9266 ;;		On exit  : 0/0
  9267 ;;		Unchanged: 0/0
  9268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9269 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9270 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9271 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9272 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9273 ;;Total ram usage:       14 bytes
  9274 ;; Hardware stack levels used:    1
  9275 ;; Hardware stack levels required when called:    5
  9276 ;; This function calls:
  9277 ;;		Nothing
  9278 ;; This function is called by:
  9279 ;;		_main
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           
  9283                           
  9284                           ;psect for function ___fttol
  9285  033A                     ___fttol:	
  9286                           
  9287                           ;incstack = 0
  9288                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9289  033A  0020               	movlb	0	; select bank0
  9290  033B  0834               	movf	___fttol@f1,w
  9291  033C  00B8               	movwf	??___fttol
  9292  033D  0835               	movf	___fttol@f1+1,w
  9293  033E  00B9               	movwf	??___fttol+1
  9294  033F  0836               	movf	___fttol@f1+2,w
  9295  0340  00BA               	movwf	??___fttol+2
  9296  0341  1003               	clrc
  9297  0342  0D39               	rlf	??___fttol+1,w
  9298  0343  0D3A               	rlf	??___fttol+2,w
  9299  0344  00BB               	movwf	??___fttol+3
  9300  0345  083B               	movf	??___fttol+3,w
  9301  0346  00C1               	movwf	___fttol@exp1
  9302  0347  0841               	movf	___fttol@exp1,w
  9303  0348  1D03               	btfss	3,2
  9304  0349  2B53               	goto	l3394
  9305  034A  3000               	movlw	0
  9306  034B  00B7               	movwf	?___fttol+3
  9307  034C  3000               	movlw	0
  9308  034D  00B6               	movwf	?___fttol+2
  9309  034E  3000               	movlw	0
  9310  034F  00B5               	movwf	?___fttol+1
  9311  0350  3000               	movlw	0
  9312  0351  00B4               	movwf	?___fttol
  9313  0352  0008               	return
  9314  0353                     l3394:	
  9315  0353  0834               	movf	___fttol@f1,w
  9316  0354  00B8               	movwf	??___fttol
  9317  0355  0835               	movf	___fttol@f1+1,w
  9318  0356  00B9               	movwf	??___fttol+1
  9319  0357  0836               	movf	___fttol@f1+2,w
  9320  0358  00BA               	movwf	??___fttol+2
  9321  0359  3017               	movlw	23
  9322  035A                     u3965:	
  9323  035A  36BA               	lsrf	??___fttol+2,f
  9324  035B  0CB9               	rrf	??___fttol+1,f
  9325  035C  0CB8               	rrf	??___fttol,f
  9326  035D  0B89               	decfsz	9,f
  9327  035E  2B5A               	goto	u3965
  9328  035F  0838               	movf	??___fttol,w
  9329  0360  00BB               	movwf	??___fttol+3
  9330  0361  083B               	movf	??___fttol+3,w
  9331  0362  00BC               	movwf	___fttol@sign1
  9332  0363  17B5               	bsf	___fttol@f1+1,7
  9333  0364  30FF               	movlw	255
  9334  0365  05B4               	andwf	___fttol@f1,f
  9335  0366  30FF               	movlw	255
  9336  0367  05B5               	andwf	___fttol@f1+1,f
  9337  0368  3000               	movlw	0
  9338  0369  05B6               	andwf	___fttol@f1+2,f
  9339  036A  0834               	movf	___fttol@f1,w
  9340  036B  00BD               	movwf	___fttol@lval
  9341  036C  0835               	movf	___fttol@f1+1,w
  9342  036D  00BE               	movwf	___fttol@lval+1
  9343  036E  0836               	movf	___fttol@f1+2,w
  9344  036F  00BF               	movwf	___fttol@lval+2
  9345  0370  01C0               	clrf	___fttol@lval+3
  9346  0371  308E               	movlw	142
  9347  0372  02C1               	subwf	___fttol@exp1,f
  9348  0373  1FC1               	btfss	___fttol@exp1,7
  9349  0374  2B91               	goto	l3414
  9350  0375  0841               	movf	___fttol@exp1,w
  9351  0376  3A80               	xorlw	128
  9352  0377  3E8F               	addlw	143
  9353  0378  1803               	skipnc
  9354  0379  2B83               	goto	l3412
  9355  037A  3000               	movlw	0
  9356  037B  00B7               	movwf	?___fttol+3
  9357  037C  3000               	movlw	0
  9358  037D  00B6               	movwf	?___fttol+2
  9359  037E  3000               	movlw	0
  9360  037F  00B5               	movwf	?___fttol+1
  9361  0380  3000               	movlw	0
  9362  0381  00B4               	movwf	?___fttol
  9363  0382  0008               	return
  9364  0383                     l3412:	
  9365  0383  3001               	movlw	1
  9366  0384                     u3995:	
  9367  0384  36C0               	lsrf	___fttol@lval+3,f
  9368  0385  0CBF               	rrf	___fttol@lval+2,f
  9369  0386  0CBE               	rrf	___fttol@lval+1,f
  9370  0387  0CBD               	rrf	___fttol@lval,f
  9371  0388  0B89               	decfsz	9,f
  9372  0389  2B84               	goto	u3995
  9373  038A  3001               	movlw	1
  9374  038B  00B8               	movwf	??___fttol
  9375  038C  0838               	movf	??___fttol,w
  9376  038D  07C1               	addwf	___fttol@exp1,f
  9377  038E  1903               	btfsc	3,2
  9378  038F  2BAA               	goto	l3422
  9379  0390  2B83               	goto	l3412
  9380  0391                     l3414:	
  9381  0391  3018               	movlw	24
  9382  0392  0241               	subwf	___fttol@exp1,w
  9383  0393  1C03               	skipc
  9384  0394  2BA7               	goto	l1042
  9385  0395  3000               	movlw	0
  9386  0396  00B7               	movwf	?___fttol+3
  9387  0397  3000               	movlw	0
  9388  0398  00B6               	movwf	?___fttol+2
  9389  0399  3000               	movlw	0
  9390  039A  00B5               	movwf	?___fttol+1
  9391  039B  3000               	movlw	0
  9392  039C  00B4               	movwf	?___fttol
  9393  039D  0008               	return
  9394  039E                     l3420:	
  9395  039E  3001               	movlw	1
  9396  039F                     u4025:	
  9397  039F  35BD               	lslf	___fttol@lval,f
  9398  03A0  0DBE               	rlf	___fttol@lval+1,f
  9399  03A1  0DBF               	rlf	___fttol@lval+2,f
  9400  03A2  0DC0               	rlf	___fttol@lval+3,f
  9401  03A3  0B89               	decfsz	9,f
  9402  03A4  2B9F               	goto	u4025
  9403  03A5  3001               	movlw	1
  9404  03A6  02C1               	subwf	___fttol@exp1,f
  9405  03A7                     l1042:	
  9406  03A7  0841               	movf	___fttol@exp1,w
  9407  03A8  1D03               	btfss	3,2
  9408  03A9  2B9E               	goto	l3420
  9409  03AA                     l3422:	
  9410  03AA  083C               	movf	___fttol@sign1,w
  9411  03AB  1903               	btfsc	3,2
  9412  03AC  2BB8               	goto	l3426
  9413  03AD  09BD               	comf	___fttol@lval,f
  9414  03AE  09BE               	comf	___fttol@lval+1,f
  9415  03AF  09BF               	comf	___fttol@lval+2,f
  9416  03B0  09C0               	comf	___fttol@lval+3,f
  9417  03B1  0ABD               	incf	___fttol@lval,f
  9418  03B2  1903               	skipnz
  9419  03B3  0ABE               	incf	___fttol@lval+1,f
  9420  03B4  1903               	skipnz
  9421  03B5  0ABF               	incf	___fttol@lval+2,f
  9422  03B6  1903               	skipnz
  9423  03B7  0AC0               	incf	___fttol@lval+3,f
  9424  03B8                     l3426:	
  9425  03B8  0840               	movf	___fttol@lval+3,w
  9426  03B9  00B7               	movwf	?___fttol+3
  9427  03BA  083F               	movf	___fttol@lval+2,w
  9428  03BB  00B6               	movwf	?___fttol+2
  9429  03BC  083E               	movf	___fttol@lval+1,w
  9430  03BD  00B5               	movwf	?___fttol+1
  9431  03BE  083D               	movf	___fttol@lval,w
  9432  03BF  00B4               	movwf	?___fttol
  9433  03C0  0008               	return
  9434  03C1                     __end_of___fttol:	
  9435                           
  9436                           	psect	text22
  9437  01BC                     __ptext22:	
  9438 ;; *************** function ___ftadd *****************
  9439 ;; Defined at:
  9440 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;  f1              3   11[BANK0 ] float 
  9443 ;;  f2              3   14[BANK0 ] float 
  9444 ;; Auto vars:     Size  Location     Type
  9445 ;;  exp1            1   23[BANK0 ] unsigned char 
  9446 ;;  exp2            1   22[BANK0 ] unsigned char 
  9447 ;;  sign            1   21[BANK0 ] unsigned char 
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  3   11[BANK0 ] float 
  9450 ;; Registers used:
  9451 ;;		wreg, status,2, status,0, pclath, cstack
  9452 ;; Tracked objects:
  9453 ;;		On entry : 0/0
  9454 ;;		On exit  : 0/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9457 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;Total ram usage:       13 bytes
  9462 ;; Hardware stack levels used:    1
  9463 ;; Hardware stack levels required when called:    6
  9464 ;; This function calls:
  9465 ;;		___ftpack
  9466 ;; This function is called by:
  9467 ;;		_main
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           
  9472                           ;psect for function ___ftadd
  9473  01BC                     ___ftadd:	
  9474                           
  9475                           ;incstack = 0
  9476                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9477  01BC  0020               	movlb	0	; select bank0
  9478  01BD  082B               	movf	___ftadd@f1,w
  9479  01BE  00B1               	movwf	??___ftadd
  9480  01BF  082C               	movf	___ftadd@f1+1,w
  9481  01C0  00B2               	movwf	??___ftadd+1
  9482  01C1  082D               	movf	___ftadd@f1+2,w
  9483  01C2  00B3               	movwf	??___ftadd+2
  9484  01C3  1003               	clrc
  9485  01C4  0D32               	rlf	??___ftadd+1,w
  9486  01C5  0D33               	rlf	??___ftadd+2,w
  9487  01C6  00B4               	movwf	??___ftadd+3
  9488  01C7  0834               	movf	??___ftadd+3,w
  9489  01C8  00B7               	movwf	___ftadd@exp1
  9490  01C9  082E               	movf	___ftadd@f2,w
  9491  01CA  00B1               	movwf	??___ftadd
  9492  01CB  082F               	movf	___ftadd@f2+1,w
  9493  01CC  00B2               	movwf	??___ftadd+1
  9494  01CD  0830               	movf	___ftadd@f2+2,w
  9495  01CE  00B3               	movwf	??___ftadd+2
  9496  01CF  1003               	clrc
  9497  01D0  0D32               	rlf	??___ftadd+1,w
  9498  01D1  0D33               	rlf	??___ftadd+2,w
  9499  01D2  00B4               	movwf	??___ftadd+3
  9500  01D3  0834               	movf	??___ftadd+3,w
  9501  01D4  00B6               	movwf	___ftadd@exp2
  9502  01D5  0837               	movf	___ftadd@exp1,w
  9503  01D6  1903               	btfsc	3,2
  9504  01D7  29E4               	goto	l3324
  9505  01D8  0836               	movf	___ftadd@exp2,w
  9506  01D9  0237               	subwf	___ftadd@exp1,w
  9507  01DA  1803               	skipnc
  9508  01DB  29EB               	goto	l3328
  9509  01DC  0337               	decf	___ftadd@exp1,w
  9510  01DD  3AFF               	xorlw	255
  9511  01DE  0736               	addwf	___ftadd@exp2,w
  9512  01DF  00B1               	movwf	??___ftadd
  9513  01E0  3019               	movlw	25
  9514  01E1  0231               	subwf	??___ftadd,w
  9515  01E2  1C03               	skipc
  9516  01E3  29EB               	goto	l3328
  9517  01E4                     l3324:	
  9518  01E4  082E               	movf	___ftadd@f2,w
  9519  01E5  00AB               	movwf	?___ftadd
  9520  01E6  082F               	movf	___ftadd@f2+1,w
  9521  01E7  00AC               	movwf	?___ftadd+1
  9522  01E8  0830               	movf	___ftadd@f2+2,w
  9523  01E9  00AD               	movwf	?___ftadd+2
  9524  01EA  0008               	return
  9525  01EB                     l3328:	
  9526  01EB  0836               	movf	___ftadd@exp2,w
  9527  01EC  1903               	btfsc	3,2
  9528  01ED  0008               	return
  9529  01EE  0837               	movf	___ftadd@exp1,w
  9530  01EF  0236               	subwf	___ftadd@exp2,w
  9531  01F0  1803               	skipnc
  9532  01F1  29FA               	goto	l3334
  9533  01F2  0336               	decf	___ftadd@exp2,w
  9534  01F3  3AFF               	xorlw	255
  9535  01F4  0737               	addwf	___ftadd@exp1,w
  9536  01F5  00B1               	movwf	??___ftadd
  9537  01F6  3019               	movlw	25
  9538  01F7  0231               	subwf	??___ftadd,w
  9539  01F8  1803               	btfsc	3,0
  9540  01F9  0008               	return
  9541  01FA                     l3334:	
  9542  01FA  3006               	movlw	6
  9543  01FB  00B1               	movwf	??___ftadd
  9544  01FC  0831               	movf	??___ftadd,w
  9545  01FD  00B5               	movwf	___ftadd@sign
  9546  01FE  1BAD               	btfsc	___ftadd@f1+2,7
  9547  01FF  17B5               	bsf	___ftadd@sign,7
  9548  0200  1BB0               	btfsc	___ftadd@f2+2,7
  9549  0201  1735               	bsf	___ftadd@sign,6
  9550  0202  17AC               	bsf	___ftadd@f1+1,7
  9551  0203  30FF               	movlw	255
  9552  0204  05AB               	andwf	___ftadd@f1,f
  9553  0205  30FF               	movlw	255
  9554  0206  05AC               	andwf	___ftadd@f1+1,f
  9555  0207  3000               	movlw	0
  9556  0208  05AD               	andwf	___ftadd@f1+2,f
  9557  0209  17AF               	bsf	___ftadd@f2+1,7
  9558  020A  30FF               	movlw	255
  9559  020B  05AE               	andwf	___ftadd@f2,f
  9560  020C  30FF               	movlw	255
  9561  020D  05AF               	andwf	___ftadd@f2+1,f
  9562  020E  3000               	movlw	0
  9563  020F  05B0               	andwf	___ftadd@f2+2,f
  9564  0210  0836               	movf	___ftadd@exp2,w
  9565  0211  0237               	subwf	___ftadd@exp1,w
  9566  0212  1803               	skipnc
  9567  0213  2A36               	goto	l3356
  9568  0214                     l3346:	
  9569  0214  3001               	movlw	1
  9570  0215                     u3815:	
  9571  0215  35AE               	lslf	___ftadd@f2,f
  9572  0216  0DAF               	rlf	___ftadd@f2+1,f
  9573  0217  0DB0               	rlf	___ftadd@f2+2,f
  9574  0218  0B89               	decfsz	9,f
  9575  0219  2A15               	goto	u3815
  9576  021A  3001               	movlw	1
  9577  021B  02B6               	subwf	___ftadd@exp2,f
  9578  021C  0836               	movf	___ftadd@exp2,w
  9579  021D  0637               	xorwf	___ftadd@exp1,w
  9580  021E  1903               	skipnz
  9581  021F  2A31               	goto	l3354
  9582  0220  3001               	movlw	1
  9583  0221  02B5               	subwf	___ftadd@sign,f
  9584  0222  0835               	movf	___ftadd@sign,w
  9585  0223  3907               	andlw	7
  9586  0224  1903               	btfsc	3,2
  9587  0225  2A31               	goto	l3354
  9588  0226  2A14               	goto	l3346
  9589  0227                     l3352:	
  9590  0227  3001               	movlw	1
  9591  0228                     u3845:	
  9592  0228  36AD               	lsrf	___ftadd@f1+2,f
  9593  0229  0CAC               	rrf	___ftadd@f1+1,f
  9594  022A  0CAB               	rrf	___ftadd@f1,f
  9595  022B  0B89               	decfsz	9,f
  9596  022C  2A28               	goto	u3845
  9597  022D  3001               	movlw	1
  9598  022E  00B1               	movwf	??___ftadd
  9599  022F  0831               	movf	??___ftadd,w
  9600  0230  07B7               	addwf	___ftadd@exp1,f
  9601  0231                     l3354:	
  9602  0231  0837               	movf	___ftadd@exp1,w
  9603  0232  0636               	xorwf	___ftadd@exp2,w
  9604  0233  1903               	btfsc	3,2
  9605  0234  2A5B               	goto	l982
  9606  0235  2A27               	goto	l3352
  9607  0236                     l3356:	
  9608  0236  0837               	movf	___ftadd@exp1,w
  9609  0237  0236               	subwf	___ftadd@exp2,w
  9610  0238  1803               	skipnc
  9611  0239  2A5B               	goto	l982
  9612  023A                     l3358:	
  9613  023A  3001               	movlw	1
  9614  023B                     u3875:	
  9615  023B  35AB               	lslf	___ftadd@f1,f
  9616  023C  0DAC               	rlf	___ftadd@f1+1,f
  9617  023D  0DAD               	rlf	___ftadd@f1+2,f
  9618  023E  0B89               	decfsz	9,f
  9619  023F  2A3B               	goto	u3875
  9620  0240  3001               	movlw	1
  9621  0241  02B7               	subwf	___ftadd@exp1,f
  9622  0242  0836               	movf	___ftadd@exp2,w
  9623  0243  0637               	xorwf	___ftadd@exp1,w
  9624  0244  1903               	skipnz
  9625  0245  2A57               	goto	l3366
  9626  0246  3001               	movlw	1
  9627  0247  02B5               	subwf	___ftadd@sign,f
  9628  0248  0835               	movf	___ftadd@sign,w
  9629  0249  3907               	andlw	7
  9630  024A  1903               	btfsc	3,2
  9631  024B  2A57               	goto	l3366
  9632  024C  2A3A               	goto	l3358
  9633  024D                     l3364:	
  9634  024D  3001               	movlw	1
  9635  024E                     u3905:	
  9636  024E  36B0               	lsrf	___ftadd@f2+2,f
  9637  024F  0CAF               	rrf	___ftadd@f2+1,f
  9638  0250  0CAE               	rrf	___ftadd@f2,f
  9639  0251  0B89               	decfsz	9,f
  9640  0252  2A4E               	goto	u3905
  9641  0253  3001               	movlw	1
  9642  0254  00B1               	movwf	??___ftadd
  9643  0255  0831               	movf	??___ftadd,w
  9644  0256  07B6               	addwf	___ftadd@exp2,f
  9645  0257                     l3366:	
  9646  0257  0837               	movf	___ftadd@exp1,w
  9647  0258  0636               	xorwf	___ftadd@exp2,w
  9648  0259  1D03               	skipz
  9649  025A  2A4D               	goto	l3364
  9650  025B                     l982:	
  9651  025B  1FB5               	btfss	___ftadd@sign,7
  9652  025C  2A6D               	goto	l3370
  9653  025D  30FF               	movlw	255
  9654  025E  06AB               	xorwf	___ftadd@f1,f
  9655  025F  30FF               	movlw	255
  9656  0260  06AC               	xorwf	___ftadd@f1+1,f
  9657  0261  30FF               	movlw	255
  9658  0262  06AD               	xorwf	___ftadd@f1+2,f
  9659  0263  3001               	movlw	1
  9660  0264  07AB               	addwf	___ftadd@f1,f
  9661  0265  3000               	movlw	0
  9662  0266  1803               	skipnc
  9663  0267  3001               	movlw	1
  9664  0268  07AC               	addwf	___ftadd@f1+1,f
  9665  0269  3000               	movlw	0
  9666  026A  1803               	skipnc
  9667  026B  3001               	movlw	1
  9668  026C  07AD               	addwf	___ftadd@f1+2,f
  9669  026D                     l3370:	
  9670  026D  1F35               	btfss	___ftadd@sign,6
  9671  026E  2A7F               	goto	l3374
  9672  026F  30FF               	movlw	255
  9673  0270  06AE               	xorwf	___ftadd@f2,f
  9674  0271  30FF               	movlw	255
  9675  0272  06AF               	xorwf	___ftadd@f2+1,f
  9676  0273  30FF               	movlw	255
  9677  0274  06B0               	xorwf	___ftadd@f2+2,f
  9678  0275  3001               	movlw	1
  9679  0276  07AE               	addwf	___ftadd@f2,f
  9680  0277  3000               	movlw	0
  9681  0278  1803               	skipnc
  9682  0279  3001               	movlw	1
  9683  027A  07AF               	addwf	___ftadd@f2+1,f
  9684  027B  3000               	movlw	0
  9685  027C  1803               	skipnc
  9686  027D  3001               	movlw	1
  9687  027E  07B0               	addwf	___ftadd@f2+2,f
  9688  027F                     l3374:	
  9689  027F  01B5               	clrf	___ftadd@sign
  9690  0280  082B               	movf	___ftadd@f1,w
  9691  0281  07AE               	addwf	___ftadd@f2,f
  9692  0282  082C               	movf	___ftadd@f1+1,w
  9693  0283  3DAF               	addwfc	___ftadd@f2+1,f
  9694  0284  082D               	movf	___ftadd@f1+2,w
  9695  0285  3DB0               	addwfc	___ftadd@f2+2,f
  9696  0286  1FB0               	btfss	___ftadd@f2+2,7
  9697  0287  2A9A               	goto	l3384
  9698  0288  30FF               	movlw	255
  9699  0289  06AE               	xorwf	___ftadd@f2,f
  9700  028A  30FF               	movlw	255
  9701  028B  06AF               	xorwf	___ftadd@f2+1,f
  9702  028C  30FF               	movlw	255
  9703  028D  06B0               	xorwf	___ftadd@f2+2,f
  9704  028E  3001               	movlw	1
  9705  028F  07AE               	addwf	___ftadd@f2,f
  9706  0290  3000               	movlw	0
  9707  0291  1803               	skipnc
  9708  0292  3001               	movlw	1
  9709  0293  07AF               	addwf	___ftadd@f2+1,f
  9710  0294  3000               	movlw	0
  9711  0295  1803               	skipnc
  9712  0296  3001               	movlw	1
  9713  0297  07B0               	addwf	___ftadd@f2+2,f
  9714  0298  01B5               	clrf	___ftadd@sign
  9715  0299  0AB5               	incf	___ftadd@sign,f
  9716  029A                     l3384:	
  9717  029A  082E               	movf	___ftadd@f2,w
  9718  029B  00A3               	movwf	___ftpack@arg
  9719  029C  082F               	movf	___ftadd@f2+1,w
  9720  029D  00A4               	movwf	___ftpack@arg+1
  9721  029E  0830               	movf	___ftadd@f2+2,w
  9722  029F  00A5               	movwf	___ftpack@arg+2
  9723  02A0  0837               	movf	___ftadd@exp1,w
  9724  02A1  00B1               	movwf	??___ftadd
  9725  02A2  0831               	movf	??___ftadd,w
  9726  02A3  00A6               	movwf	___ftpack@exp
  9727  02A4  0835               	movf	___ftadd@sign,w
  9728  02A5  00B2               	movwf	??___ftadd+1
  9729  02A6  0832               	movf	??___ftadd+1,w
  9730  02A7  00A7               	movwf	___ftpack@sign
  9731  02A8  3183  23C1         	fcall	___ftpack
  9732  02AA  0020               	movlb	0	; select bank0
  9733  02AB  0823               	movf	?___ftpack,w
  9734  02AC  00AB               	movwf	?___ftadd
  9735  02AD  0824               	movf	?___ftpack+1,w
  9736  02AE  00AC               	movwf	?___ftadd+1
  9737  02AF  0825               	movf	?___ftpack+2,w
  9738  02B0  00AD               	movwf	?___ftadd+2
  9739  02B1  0008               	return
  9740  02B2                     __end_of___ftadd:	
  9741                           
  9742                           	psect	text23
  9743  03C1                     __ptext23:	
  9744 ;; *************** function ___ftpack *****************
  9745 ;; Defined at:
  9746 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
  9747 ;; Parameters:    Size  Location     Type
  9748 ;;  arg             3    3[BANK0 ] unsigned um
  9749 ;;  exp             1    6[BANK0 ] unsigned char 
  9750 ;;  sign            1    7[BANK0 ] unsigned char 
  9751 ;; Auto vars:     Size  Location     Type
  9752 ;;		None
  9753 ;; Return value:  Size  Location     Type
  9754 ;;                  3    3[BANK0 ] float 
  9755 ;; Registers used:
  9756 ;;		wreg, status,2, status,0
  9757 ;; Tracked objects:
  9758 ;;		On entry : 0/0
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9762 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9764 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9765 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9766 ;;Total ram usage:        8 bytes
  9767 ;; Hardware stack levels used:    1
  9768 ;; Hardware stack levels required when called:    5
  9769 ;; This function calls:
  9770 ;;		Nothing
  9771 ;; This function is called by:
  9772 ;;		___ftadd
  9773 ;;		___lwtoft
  9774 ;; This function uses a non-reentrant model
  9775 ;;
  9776                           
  9777                           
  9778                           ;psect for function ___ftpack
  9779  03C1                     ___ftpack:	
  9780                           
  9781                           ;incstack = 0
  9782                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9783  03C1  0020               	movlb	0	; select bank0
  9784  03C2  0826               	movf	___ftpack@exp,w
  9785  03C3  1903               	btfsc	3,2
  9786  03C4  2BCA               	goto	l2984
  9787  03C5  0825               	movf	___ftpack@arg+2,w
  9788  03C6  0424               	iorwf	___ftpack@arg+1,w
  9789  03C7  0423               	iorwf	___ftpack@arg,w
  9790  03C8  1D03               	skipz
  9791  03C9  2BDB               	goto	l2990
  9792  03CA                     l2984:	
  9793  03CA  3000               	movlw	0
  9794  03CB  00A3               	movwf	?___ftpack
  9795  03CC  3000               	movlw	0
  9796  03CD  00A4               	movwf	?___ftpack+1
  9797  03CE  3000               	movlw	0
  9798  03CF  00A5               	movwf	?___ftpack+2
  9799  03D0  0008               	return
  9800  03D1                     l2988:	
  9801  03D1  3001               	movlw	1
  9802  03D2  00A8               	movwf	??___ftpack
  9803  03D3  0828               	movf	??___ftpack,w
  9804  03D4  07A6               	addwf	___ftpack@exp,f
  9805  03D5  3001               	movlw	1
  9806  03D6                     u3235:	
  9807  03D6  36A5               	lsrf	___ftpack@arg+2,f
  9808  03D7  0CA4               	rrf	___ftpack@arg+1,f
  9809  03D8  0CA3               	rrf	___ftpack@arg,f
  9810  03D9  0B89               	decfsz	9,f
  9811  03DA  2BD6               	goto	u3235
  9812  03DB                     l2990:	
  9813  03DB  30FE               	movlw	254
  9814  03DC  0525               	andwf	___ftpack@arg+2,w
  9815  03DD  1903               	btfsc	3,2
  9816  03DE  2BF4               	goto	l951
  9817  03DF  2BD1               	goto	l2988
  9818  03E0                     l2992:	
  9819  03E0  3001               	movlw	1
  9820  03E1  00A8               	movwf	??___ftpack
  9821  03E2  0828               	movf	??___ftpack,w
  9822  03E3  07A6               	addwf	___ftpack@exp,f
  9823  03E4  3001               	movlw	1
  9824  03E5  07A3               	addwf	___ftpack@arg,f
  9825  03E6  3000               	movlw	0
  9826  03E7  1803               	skipnc
  9827  03E8  3001               	movlw	1
  9828  03E9  07A4               	addwf	___ftpack@arg+1,f
  9829  03EA  3000               	movlw	0
  9830  03EB  1803               	skipnc
  9831  03EC  3001               	movlw	1
  9832  03ED  07A5               	addwf	___ftpack@arg+2,f
  9833  03EE  3001               	movlw	1
  9834  03EF                     u3255:	
  9835  03EF  36A5               	lsrf	___ftpack@arg+2,f
  9836  03F0  0CA4               	rrf	___ftpack@arg+1,f
  9837  03F1  0CA3               	rrf	___ftpack@arg,f
  9838  03F2  0B89               	decfsz	9,f
  9839  03F3  2BEF               	goto	u3255
  9840  03F4                     l951:	
  9841  03F4  30FF               	movlw	255
  9842  03F5  0525               	andwf	___ftpack@arg+2,w
  9843  03F6  1903               	btfsc	3,2
  9844  03F7  2C01               	goto	l3000
  9845  03F8  2BE0               	goto	l2992
  9846  03F9                     l2998:	
  9847  03F9  3001               	movlw	1
  9848  03FA  02A6               	subwf	___ftpack@exp,f
  9849  03FB  3001               	movlw	1
  9850  03FC                     u3275:	
  9851  03FC  35A3               	lslf	___ftpack@arg,f
  9852  03FD  0DA4               	rlf	___ftpack@arg+1,f
  9853  03FE  0DA5               	rlf	___ftpack@arg+2,f
  9854  03FF  0B89               	decfsz	9,f
  9855  0400  2BFC               	goto	u3275
  9856  0401                     l3000:	
  9857  0401  1BA4               	btfsc	___ftpack@arg+1,7
  9858  0402  2C07               	goto	l958
  9859  0403  3002               	movlw	2
  9860  0404  0226               	subwf	___ftpack@exp,w
  9861  0405  1803               	skipnc
  9862  0406  2BF9               	goto	l2998
  9863  0407                     l958:	
  9864  0407  1826               	btfsc	___ftpack@exp,0
  9865  0408  2C0F               	goto	l959
  9866  0409  30FF               	movlw	255
  9867  040A  05A3               	andwf	___ftpack@arg,f
  9868  040B  307F               	movlw	127
  9869  040C  05A4               	andwf	___ftpack@arg+1,f
  9870  040D  30FF               	movlw	255
  9871  040E  05A5               	andwf	___ftpack@arg+2,f
  9872  040F                     l959:	
  9873  040F  1003               	clrc
  9874  0410  0CA6               	rrf	___ftpack@exp,f
  9875  0411  0826               	movf	___ftpack@exp,w
  9876  0412  00A8               	movwf	??___ftpack
  9877  0413  01A9               	clrf	??___ftpack+1
  9878  0414  01AA               	clrf	??___ftpack+2
  9879  0415  3010               	movlw	16
  9880  0416                     u3315:	
  9881  0416  35A8               	lslf	??___ftpack,f
  9882  0417  0DA9               	rlf	??___ftpack+1,f
  9883  0418  0DAA               	rlf	??___ftpack+2,f
  9884  0419  0B89               	decfsz	9,f
  9885  041A  2C16               	goto	u3315
  9886  041B  0828               	movf	??___ftpack,w
  9887  041C  04A3               	iorwf	___ftpack@arg,f
  9888  041D  0829               	movf	??___ftpack+1,w
  9889  041E  04A4               	iorwf	___ftpack@arg+1,f
  9890  041F  082A               	movf	??___ftpack+2,w
  9891  0420  04A5               	iorwf	___ftpack@arg+2,f
  9892  0421  0827               	movf	___ftpack@sign,w
  9893  0422  1903               	btfsc	3,2
  9894  0423  0008               	return
  9895  0424  17A5               	bsf	___ftpack@arg+2,7
  9896  0425  0008               	return
  9897  0426                     __end_of___ftpack:	
  9898                           
  9899                           	psect	text24
  9900  0F6F                     __ptext24:	
  9901 ;; *************** function _TMR6_Start *****************
  9902 ;; Defined at:
  9903 ;;		line 107 in file "mcc_generated_files/tmr6.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;		None
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;		None
  9908 ;; Return value:  Size  Location     Type
  9909 ;;                  1    wreg      void 
  9910 ;; Registers used:
  9911 ;;		None
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;Total ram usage:        0 bytes
  9922 ;; Hardware stack levels used:    1
  9923 ;; Hardware stack levels required when called:    5
  9924 ;; This function calls:
  9925 ;;		Nothing
  9926 ;; This function is called by:
  9927 ;;		_main
  9928 ;;		_TMR6_StartTimer
  9929 ;; This function uses a non-reentrant model
  9930 ;;
  9931                           
  9932                           
  9933                           ;psect for function _TMR6_Start
  9934  0F6F                     _TMR6_Start:	
  9935                           
  9936                           ;tmr6.c: 110: T6CONbits.TMR6ON = 1;
  9937                           
  9938                           ;incstack = 0
  9939                           ; Regs used in _TMR6_Start: []
  9940  0F6F  0025               	movlb	5	; select bank5
  9941  0F70  179A               	bsf	26,7	;volatile
  9942  0F71  0008               	return
  9943  0F72                     __end_of_TMR6_Start:	
  9944                           
  9945                           	psect	text25
  9946  0FD9                     __ptext25:	
  9947 ;; *************** function _SYSTEM_Initialize *****************
  9948 ;; Defined at:
  9949 ;;		line 88 in file "mcc_generated_files/mcc.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;		None
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;		None
  9954 ;; Return value:  Size  Location     Type
  9955 ;;                  1    wreg      void 
  9956 ;; Registers used:
  9957 ;;		wreg, status,2, status,0, pclath, cstack
  9958 ;; Tracked objects:
  9959 ;;		On entry : 0/0
  9960 ;;		On exit  : 0/0
  9961 ;;		Unchanged: 0/0
  9962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9967 ;;Total ram usage:        0 bytes
  9968 ;; Hardware stack levels used:    1
  9969 ;; Hardware stack levels required when called:    7
  9970 ;; This function calls:
  9971 ;;		_ADCC_Initialize
  9972 ;;		_EUSART_Initialize
  9973 ;;		_OSCILLATOR_Initialize
  9974 ;;		_PIN_MANAGER_Initialize
  9975 ;;		_PMD_Initialize
  9976 ;;		_TMR6_Initialize
  9977 ;; This function is called by:
  9978 ;;		_main
  9979 ;; This function uses a non-reentrant model
  9980 ;;
  9981                           
  9982                           
  9983                           ;psect for function _SYSTEM_Initialize
  9984  0FD9                     _SYSTEM_Initialize:	
  9985                           
  9986                           ;mcc.c: 90: PMD_Initialize();
  9987                           
  9988                           ;incstack = 0
  9989                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9990  0FD9  318F  278B  318F   	fcall	_PMD_Initialize
  9991                           
  9992                           ;mcc.c: 91: PIN_MANAGER_Initialize();
  9993  0FDC  3185  258F  318F   	fcall	_PIN_MANAGER_Initialize
  9994                           
  9995                           ;mcc.c: 92: OSCILLATOR_Initialize();
  9996  0FDF  318F  27B4  318F   	fcall	_OSCILLATOR_Initialize
  9997                           
  9998                           ;mcc.c: 93: ADCC_Initialize();
  9999  0FE2  3187  27C8  318F   	fcall	_ADCC_Initialize
 10000                           
 10001                           ;mcc.c: 94: TMR6_Initialize();
 10002  0FE5  3187  27B2  318F   	fcall	_TMR6_Initialize
 10003                           
 10004                           ;mcc.c: 95: EUSART_Initialize();
 10005  0FE8  3187  2798         	fcall	_EUSART_Initialize
 10006  0FEA  0008               	return
 10007  0FEB                     __end_of_SYSTEM_Initialize:	
 10008                           
 10009                           	psect	text26
 10010  07B2                     __ptext26:	
 10011 ;; *************** function _TMR6_Initialize *****************
 10012 ;; Defined at:
 10013 ;;		line 63 in file "mcc_generated_files/tmr6.c"
 10014 ;; Parameters:    Size  Location     Type
 10015 ;;		None
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;		None
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  1    wreg      void 
 10020 ;; Registers used:
 10021 ;;		wreg, status,2, status,0, pclath, cstack
 10022 ;; Tracked objects:
 10023 ;;		On entry : 0/0
 10024 ;;		On exit  : 0/0
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10031 ;;Total ram usage:        0 bytes
 10032 ;; Hardware stack levels used:    1
 10033 ;; Hardware stack levels required when called:    6
 10034 ;; This function calls:
 10035 ;;		_TMR6_SetInterruptHandler
 10036 ;; This function is called by:
 10037 ;;		_SYSTEM_Initialize
 10038 ;; This function uses a non-reentrant model
 10039 ;;
 10040                           
 10041                           
 10042                           ;psect for function _TMR6_Initialize
 10043  07B2                     _TMR6_Initialize:	
 10044                           
 10045                           ;tmr6.c: 68: T6CLKCON = 0x01;
 10046                           
 10047                           ;incstack = 0
 10048                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10049  07B2  3001               	movlw	1
 10050  07B3  0025               	movlb	5	; select bank5
 10051  07B4  009C               	movwf	28	;volatile
 10052                           
 10053                           ;tmr6.c: 71: T6HLT = 0x00;
 10054  07B5  019B               	clrf	27	;volatile
 10055                           
 10056                           ;tmr6.c: 74: T6RST = 0x00;
 10057  07B6  019D               	clrf	29	;volatile
 10058                           
 10059                           ;tmr6.c: 77: T6PR = 0x9B;
 10060  07B7  309B               	movlw	155
 10061  07B8  0099               	movwf	25	;volatile
 10062                           
 10063                           ;tmr6.c: 80: T6TMR = 0x00;
 10064  07B9  0198               	clrf	24	;volatile
 10065                           
 10066                           ;tmr6.c: 83: PIR4bits.TMR6IF = 0;
 10067  07BA  002E               	movlb	14	; select bank14
 10068  07BB  1290               	bcf	16,5	;volatile
 10069                           
 10070                           ;tmr6.c: 86: PIE4bits.TMR6IE = 1;
 10071  07BC  169A               	bsf	26,5	;volatile
 10072                           
 10073                           ;tmr6.c: 89: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 10074  07BD  3003               	movlw	low _TMR6_DefaultInterruptHandler
 10075  07BE  0020               	movlb	0	; select bank0
 10076  07BF  00A3               	movwf	TMR6_SetInterruptHandler@InterruptHandler
 10077  07C0  3000               	movlw	high _TMR6_DefaultInterruptHandler
 10078  07C1  00A4               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1
 10079  07C2  318F  27AB         	fcall	_TMR6_SetInterruptHandler
 10080                           
 10081                           ;tmr6.c: 92: T6CON = 0xE7;
 10082  07C4  30E7               	movlw	231
 10083  07C5  0025               	movlb	5	; select bank5
 10084  07C6  009A               	movwf	26	;volatile
 10085  07C7  0008               	return
 10086  07C8                     __end_of_TMR6_Initialize:	
 10087                           
 10088                           	psect	text27
 10089  0FAB                     __ptext27:	
 10090 ;; *************** function _TMR6_SetInterruptHandler *****************
 10091 ;; Defined at:
 10092 ;;		line 177 in file "mcc_generated_files/tmr6.c"
 10093 ;; Parameters:    Size  Location     Type
 10094 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 10095 ;;		 -> TMR6_DefaultInterruptHandler(1), TMR6_EMG_InterruptHandler(1), 
 10096 ;; Auto vars:     Size  Location     Type
 10097 ;;		None
 10098 ;; Return value:  Size  Location     Type
 10099 ;;                  1    wreg      void 
 10100 ;; Registers used:
 10101 ;;		wreg
 10102 ;; Tracked objects:
 10103 ;;		On entry : 0/0
 10104 ;;		On exit  : 0/0
 10105 ;;		Unchanged: 0/0
 10106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10107 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10110 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10111 ;;Total ram usage:        2 bytes
 10112 ;; Hardware stack levels used:    1
 10113 ;; Hardware stack levels required when called:    5
 10114 ;; This function calls:
 10115 ;;		Nothing
 10116 ;; This function is called by:
 10117 ;;		_main
 10118 ;;		_TMR6_Initialize
 10119 ;; This function uses a non-reentrant model
 10120 ;;
 10121                           
 10122                           
 10123                           ;psect for function _TMR6_SetInterruptHandler
 10124  0FAB                     _TMR6_SetInterruptHandler:	
 10125                           
 10126                           ;tmr6.c: 178: TMR6_InterruptHandler = InterruptHandler;
 10127                           
 10128                           ;incstack = 0
 10129                           ; Regs used in _TMR6_SetInterruptHandler: [wreg]
 10130  0FAB  0020               	movlb	0	; select bank0
 10131  0FAC  0824               	movf	TMR6_SetInterruptHandler@InterruptHandler+1,w
 10132  0FAD  0021               	movlb	1	; select bank1
 10133  0FAE  00E5               	movwf	(_TMR6_InterruptHandler+1)^(0+128)
 10134  0FAF  0020               	movlb	0	; select bank0
 10135  0FB0  0823               	movf	TMR6_SetInterruptHandler@InterruptHandler,w
 10136  0FB1  0021               	movlb	1	; select bank1
 10137  0FB2  00E4               	movwf	_TMR6_InterruptHandler^(0+128)
 10138  0FB3  0008               	return
 10139  0FB4                     __end_of_TMR6_SetInterruptHandler:	
 10140                           
 10141                           	psect	text28
 10142  0F8B                     __ptext28:	
 10143 ;; *************** function _PMD_Initialize *****************
 10144 ;; Defined at:
 10145 ;;		line 112 in file "mcc_generated_files/mcc.c"
 10146 ;; Parameters:    Size  Location     Type
 10147 ;;		None
 10148 ;; Auto vars:     Size  Location     Type
 10149 ;;		None
 10150 ;; Return value:  Size  Location     Type
 10151 ;;                  1    wreg      void 
 10152 ;; Registers used:
 10153 ;;		status,2
 10154 ;; Tracked objects:
 10155 ;;		On entry : 0/0
 10156 ;;		On exit  : 0/0
 10157 ;;		Unchanged: 0/0
 10158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10163 ;;Total ram usage:        0 bytes
 10164 ;; Hardware stack levels used:    1
 10165 ;; Hardware stack levels required when called:    5
 10166 ;; This function calls:
 10167 ;;		Nothing
 10168 ;; This function is called by:
 10169 ;;		_SYSTEM_Initialize
 10170 ;; This function uses a non-reentrant model
 10171 ;;
 10172                           
 10173                           
 10174                           ;psect for function _PMD_Initialize
 10175  0F8B                     _PMD_Initialize:	
 10176                           
 10177                           ;mcc.c: 115: PMD0 = 0x00;
 10178                           
 10179                           ;incstack = 0
 10180                           ; Regs used in _PMD_Initialize: [status,2]
 10181  0F8B  002F               	movlb	15	; select bank15
 10182  0F8C  0196               	clrf	22	;volatile
 10183                           
 10184                           ;mcc.c: 117: PMD1 = 0x00;
 10185  0F8D  0197               	clrf	23	;volatile
 10186                           
 10187                           ;mcc.c: 119: PMD2 = 0x00;
 10188  0F8E  0198               	clrf	24	;volatile
 10189                           
 10190                           ;mcc.c: 121: PMD3 = 0x00;
 10191  0F8F  0199               	clrf	25	;volatile
 10192                           
 10193                           ;mcc.c: 123: PMD4 = 0x00;
 10194  0F90  019A               	clrf	26	;volatile
 10195                           
 10196                           ;mcc.c: 125: PMD5 = 0x00;
 10197  0F91  019B               	clrf	27	;volatile
 10198  0F92  0008               	return
 10199  0F93                     __end_of_PMD_Initialize:	
 10200                           
 10201                           	psect	text29
 10202  058F                     __ptext29:	
 10203 ;; *************** function _PIN_MANAGER_Initialize *****************
 10204 ;; Defined at:
 10205 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;		None
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;		None
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  1    wreg      void 
 10212 ;; Registers used:
 10213 ;;		wreg, status,2, status,0
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10223 ;;Total ram usage:        0 bytes
 10224 ;; Hardware stack levels used:    1
 10225 ;; Hardware stack levels required when called:    5
 10226 ;; This function calls:
 10227 ;;		Nothing
 10228 ;; This function is called by:
 10229 ;;		_SYSTEM_Initialize
 10230 ;; This function uses a non-reentrant model
 10231 ;;
 10232                           
 10233                           
 10234                           ;psect for function _PIN_MANAGER_Initialize
 10235  058F                     _PIN_MANAGER_Initialize:	
 10236                           
 10237                           ;pin_manager.c: 57: LATE = 0x00;
 10238                           
 10239                           ;incstack = 0
 10240                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 10241  058F  0020               	movlb	0	; select bank0
 10242  0590  019A               	clrf	26	;volatile
 10243                           
 10244                           ;pin_manager.c: 58: LATD = 0x00;
 10245  0591  0199               	clrf	25	;volatile
 10246                           
 10247                           ;pin_manager.c: 59: LATA = 0x00;
 10248  0592  0196               	clrf	22	;volatile
 10249                           
 10250                           ;pin_manager.c: 60: LATB = 0x00;
 10251  0593  0197               	clrf	23	;volatile
 10252                           
 10253                           ;pin_manager.c: 61: LATC = 0x00;
 10254  0594  0198               	clrf	24	;volatile
 10255                           
 10256                           ;pin_manager.c: 66: TRISE = 0x07;
 10257  0595  3007               	movlw	7
 10258  0596  0095               	movwf	21	;volatile
 10259                           
 10260                           ;pin_manager.c: 67: TRISA = 0x7F;
 10261  0597  307F               	movlw	127
 10262  0598  0091               	movwf	17	;volatile
 10263                           
 10264                           ;pin_manager.c: 68: TRISB = 0xFF;
 10265  0599  30FF               	movlw	255
 10266  059A  0092               	movwf	18	;volatile
 10267                           
 10268                           ;pin_manager.c: 69: TRISC = 0xBF;
 10269  059B  30BF               	movlw	191
 10270  059C  0093               	movwf	19	;volatile
 10271                           
 10272                           ;pin_manager.c: 70: TRISD = 0xFF;
 10273  059D  30FF               	movlw	255
 10274  059E  0094               	movwf	20	;volatile
 10275                           
 10276                           ;pin_manager.c: 75: ANSELC = 0x5F;
 10277  059F  305F               	movlw	95
 10278  05A0  003E               	movlb	30	; select bank30
 10279  05A1  00CE               	movwf	78	;volatile
 10280                           
 10281                           ;pin_manager.c: 76: ANSELB = 0x6F;
 10282  05A2  306F               	movlw	111
 10283  05A3  00C3               	movwf	67	;volatile
 10284                           
 10285                           ;pin_manager.c: 77: ANSELD = 0xFF;
 10286  05A4  30FF               	movlw	255
 10287  05A5  00D9               	movwf	89	;volatile
 10288                           
 10289                           ;pin_manager.c: 78: ANSELE = 0x07;
 10290  05A6  3007               	movlw	7
 10291  05A7  00E4               	movwf	100	;volatile
 10292                           
 10293                           ;pin_manager.c: 79: ANSELA = 0xFF;
 10294  05A8  30FF               	movlw	255
 10295  05A9  00B8               	movwf	56	;volatile
 10296                           
 10297                           ;pin_manager.c: 84: WPUD = 0x00;
 10298  05AA  01DA               	clrf	90	;volatile
 10299                           
 10300                           ;pin_manager.c: 85: WPUE = 0x00;
 10301  05AB  01E5               	clrf	101	;volatile
 10302                           
 10303                           ;pin_manager.c: 86: WPUB = 0x00;
 10304  05AC  01C4               	clrf	68	;volatile
 10305                           
 10306                           ;pin_manager.c: 87: WPUA = 0x00;
 10307  05AD  01B9               	clrf	57	;volatile
 10308                           
 10309                           ;pin_manager.c: 88: WPUC = 0x00;
 10310  05AE  01CF               	clrf	79	;volatile
 10311                           
 10312                           ;pin_manager.c: 93: ODCONE = 0x00;
 10313  05AF  01E6               	clrf	102	;volatile
 10314                           
 10315                           ;pin_manager.c: 94: ODCONA = 0x00;
 10316  05B0  01BA               	clrf	58	;volatile
 10317                           
 10318                           ;pin_manager.c: 95: ODCONB = 0x00;
 10319  05B1  01C5               	clrf	69	;volatile
 10320                           
 10321                           ;pin_manager.c: 96: ODCONC = 0x00;
 10322  05B2  01D0               	clrf	80	;volatile
 10323                           
 10324                           ;pin_manager.c: 97: ODCOND = 0x00;
 10325  05B3  01DB               	clrf	91	;volatile
 10326                           
 10327                           ;pin_manager.c: 104: T6AINPPSbits.T6AINPPS = 0x0F;
 10328  05B4  003D               	movlb	29	; select bank29
 10329  05B5  081E               	movf	30,w	;volatile
 10330  05B6  39E0               	andlw	-32
 10331  05B7  380F               	iorlw	15
 10332  05B8  009E               	movwf	30	;volatile
 10333                           
 10334                           ;pin_manager.c: 105: RC6PPS = 0x10;
 10335  05B9  3010               	movlw	16
 10336  05BA  003E               	movlb	30	; select bank30
 10337  05BB  00A6               	movwf	38	;volatile
 10338                           
 10339                           ;pin_manager.c: 106: RXPPSbits.RXPPS = 0x17;
 10340  05BC  003D               	movlb	29	; select bank29
 10341  05BD  084B               	movf	75,w	;volatile
 10342  05BE  39E0               	andlw	-32
 10343  05BF  3817               	iorlw	23
 10344  05C0  00CB               	movwf	75	;volatile
 10345  05C1  0008               	return
 10346  05C2                     __end_of_PIN_MANAGER_Initialize:	
 10347                           
 10348                           	psect	text30
 10349  0FB4                     __ptext30:	
 10350 ;; *************** function _OSCILLATOR_Initialize *****************
 10351 ;; Defined at:
 10352 ;;		line 98 in file "mcc_generated_files/mcc.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;		None
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;		None
 10357 ;; Return value:  Size  Location     Type
 10358 ;;                  1    wreg      void 
 10359 ;; Registers used:
 10360 ;;		wreg, status,2
 10361 ;; Tracked objects:
 10362 ;;		On entry : 0/0
 10363 ;;		On exit  : 0/0
 10364 ;;		Unchanged: 0/0
 10365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10370 ;;Total ram usage:        0 bytes
 10371 ;; Hardware stack levels used:    1
 10372 ;; Hardware stack levels required when called:    5
 10373 ;; This function calls:
 10374 ;;		Nothing
 10375 ;; This function is called by:
 10376 ;;		_SYSTEM_Initialize
 10377 ;; This function uses a non-reentrant model
 10378 ;;
 10379                           
 10380                           
 10381                           ;psect for function _OSCILLATOR_Initialize
 10382  0FB4                     _OSCILLATOR_Initialize:	
 10383                           
 10384                           ;mcc.c: 101: OSCCON1 = 0x60;
 10385                           
 10386                           ;incstack = 0
 10387                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10388  0FB4  3060               	movlw	96
 10389  0FB5  0031               	movlb	17	; select bank17
 10390  0FB6  008D               	movwf	13	;volatile
 10391                           
 10392                           ;mcc.c: 103: OSCCON3 = 0x00;
 10393  0FB7  018F               	clrf	15	;volatile
 10394                           
 10395                           ;mcc.c: 105: OSCEN = 0x00;
 10396  0FB8  0191               	clrf	17	;volatile
 10397                           
 10398                           ;mcc.c: 107: OSCFRQ = 0x05;
 10399  0FB9  3005               	movlw	5
 10400  0FBA  0093               	movwf	19	;volatile
 10401                           
 10402                           ;mcc.c: 109: OSCTUNE = 0x20;
 10403  0FBB  3020               	movlw	32
 10404  0FBC  0092               	movwf	18	;volatile
 10405  0FBD  0008               	return
 10406  0FBE                     __end_of_OSCILLATOR_Initialize:	
 10407                           
 10408                           	psect	text31
 10409  0798                     __ptext31:	
 10410 ;; *************** function _EUSART_Initialize *****************
 10411 ;; Defined at:
 10412 ;;		line 72 in file "mcc_generated_files/eusart.c"
 10413 ;; Parameters:    Size  Location     Type
 10414 ;;		None
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;		None
 10417 ;; Return value:  Size  Location     Type
 10418 ;;                  1    wreg      void 
 10419 ;; Registers used:
 10420 ;;		wreg, status,2
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10428 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10429 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10430 ;;Total ram usage:        1 bytes
 10431 ;; Hardware stack levels used:    1
 10432 ;; Hardware stack levels required when called:    5
 10433 ;; This function calls:
 10434 ;;		Nothing
 10435 ;; This function is called by:
 10436 ;;		_SYSTEM_Initialize
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           
 10441                           ;psect for function _EUSART_Initialize
 10442  0798                     _EUSART_Initialize:	
 10443                           
 10444                           ;eusart.c: 75: PIE3bits.RCIE = 0;
 10445                           
 10446                           ;incstack = 0
 10447                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 10448  0798  002E               	movlb	14	; select bank14
 10449  0799  1299               	bcf	25,5	;volatile
 10450                           
 10451                           ;eusart.c: 76: PIE3bits.TXIE = 0;
 10452  079A  1219               	bcf	25,4	;volatile
 10453                           
 10454                           ;eusart.c: 80: BAUD1CON = 0x08;
 10455  079B  3008               	movlw	8
 10456  079C  0022               	movlb	2	; select bank2
 10457  079D  009F               	movwf	31	;volatile
 10458                           
 10459                           ;eusart.c: 83: RC1STA = 0x90;
 10460  079E  3090               	movlw	144
 10461  079F  009D               	movwf	29	;volatile
 10462                           
 10463                           ;eusart.c: 86: TX1STA = 0x24;
 10464  07A0  3024               	movlw	36
 10465  07A1  009E               	movwf	30	;volatile
 10466                           
 10467                           ;eusart.c: 89: SP1BRGL = 0xCF;
 10468  07A2  30CF               	movlw	207
 10469  07A3  009B               	movwf	27	;volatile
 10470                           
 10471                           ;eusart.c: 92: SP1BRGH = 0x00;
 10472  07A4  019C               	clrf	28	;volatile
 10473                           
 10474                           ;eusart.c: 96: eusartTxHead = 0;
 10475  07A5  0020               	movlb	0	; select bank0
 10476  07A6  01D6               	clrf	_eusartTxHead	;volatile
 10477                           
 10478                           ;eusart.c: 97: eusartTxTail = 0;
 10479  07A7  01D5               	clrf	_eusartTxTail	;volatile
 10480                           
 10481                           ;eusart.c: 98: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 10482  07A8  3008               	movlw	8
 10483  07A9  00A3               	movwf	??_EUSART_Initialize
 10484  07AA  0823               	movf	??_EUSART_Initialize,w
 10485  07AB  00E1               	movwf	_eusartTxBufferRemaining	;volatile
 10486                           
 10487                           ;eusart.c: 100: eusartRxHead = 0;
 10488  07AC  01D4               	clrf	_eusartRxHead	;volatile
 10489                           
 10490                           ;eusart.c: 101: eusartRxTail = 0;
 10491  07AD  01D3               	clrf	_eusartRxTail	;volatile
 10492                           
 10493                           ;eusart.c: 102: eusartRxCount = 0;
 10494  07AE  01D2               	clrf	_eusartRxCount	;volatile
 10495                           
 10496                           ;eusart.c: 105: PIE3bits.RCIE = 1;
 10497  07AF  002E               	movlb	14	; select bank14
 10498  07B0  1699               	bsf	25,5	;volatile
 10499  07B1  0008               	return
 10500  07B2                     __end_of_EUSART_Initialize:	
 10501                           
 10502                           	psect	text32
 10503  07C8                     __ptext32:	
 10504 ;; *************** function _ADCC_Initialize *****************
 10505 ;; Defined at:
 10506 ;;		line 62 in file "mcc_generated_files/adcc.c"
 10507 ;; Parameters:    Size  Location     Type
 10508 ;;		None
 10509 ;; Auto vars:     Size  Location     Type
 10510 ;;		None
 10511 ;; Return value:  Size  Location     Type
 10512 ;;                  1    wreg      void 
 10513 ;; Registers used:
 10514 ;;		wreg, status,2
 10515 ;; Tracked objects:
 10516 ;;		On entry : 0/0
 10517 ;;		On exit  : 0/0
 10518 ;;		Unchanged: 0/0
 10519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10524 ;;Total ram usage:        0 bytes
 10525 ;; Hardware stack levels used:    1
 10526 ;; Hardware stack levels required when called:    5
 10527 ;; This function calls:
 10528 ;;		Nothing
 10529 ;; This function is called by:
 10530 ;;		_SYSTEM_Initialize
 10531 ;; This function uses a non-reentrant model
 10532 ;;
 10533                           
 10534                           
 10535                           ;psect for function _ADCC_Initialize
 10536  07C8                     _ADCC_Initialize:	
 10537                           
 10538                           ;adcc.c: 66: ADLTHL = 0x00;
 10539                           
 10540                           ;incstack = 0
 10541                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10542  07C8  0022               	movlb	2	; select bank2
 10543  07C9  018E               	clrf	14	;volatile
 10544                           
 10545                           ;adcc.c: 68: ADLTHH = 0x00;
 10546  07CA  018F               	clrf	15	;volatile
 10547                           
 10548                           ;adcc.c: 70: ADUTHL = 0x00;
 10549  07CB  0190               	clrf	16	;volatile
 10550                           
 10551                           ;adcc.c: 72: ADUTHH = 0x00;
 10552  07CC  0191               	clrf	17	;volatile
 10553                           
 10554                           ;adcc.c: 74: ADSTPTL = 0x00;
 10555  07CD  0192               	clrf	18	;volatile
 10556                           
 10557                           ;adcc.c: 76: ADSTPTH = 0x00;
 10558  07CE  0193               	clrf	19	;volatile
 10559                           
 10560                           ;adcc.c: 78: ADRPT = 0x00;
 10561  07CF  018D               	clrf	13	;volatile
 10562                           
 10563                           ;adcc.c: 80: ADPCH = 0x00;
 10564  07D0  0021               	movlb	1	; select bank1
 10565  07D1  019E               	clrf	30	;volatile
 10566                           
 10567                           ;adcc.c: 82: ADCAP = 0x00;
 10568  07D2  019B               	clrf	27	;volatile
 10569                           
 10570                           ;adcc.c: 84: ADCON1 = 0x00;
 10571  07D3  0194               	clrf	20	;volatile
 10572                           
 10573                           ;adcc.c: 86: ADCON2 = 0x00;
 10574  07D4  0195               	clrf	21	;volatile
 10575                           
 10576                           ;adcc.c: 88: ADCON3 = 0x00;
 10577  07D5  0196               	clrf	22	;volatile
 10578                           
 10579                           ;adcc.c: 90: ADSTAT = 0x00;
 10580  07D6  0197               	clrf	23	;volatile
 10581                           
 10582                           ;adcc.c: 92: ADREF = 0x00;
 10583  07D7  019A               	clrf	26	;volatile
 10584                           
 10585                           ;adcc.c: 94: ADACT = 0x00;
 10586  07D8  0199               	clrf	25	;volatile
 10587                           
 10588                           ;adcc.c: 96: ADCLK = 0x07;
 10589  07D9  3007               	movlw	7
 10590  07DA  0098               	movwf	24	;volatile
 10591                           
 10592                           ;adcc.c: 98: ADCON0 = 0x80;
 10593  07DB  3080               	movlw	128
 10594  07DC  0093               	movwf	19	;volatile
 10595  07DD  0008               	return
 10596  07DE                     __end_of_ADCC_Initialize:	
 10597                           
 10598                           	psect	intentry
 10599  0004                     __pintentry:	
 10600 ;; *************** function _INTERRUPT_InterruptManager *****************
 10601 ;; Defined at:
 10602 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;		None
 10605 ;; Auto vars:     Size  Location     Type
 10606 ;;		None
 10607 ;; Return value:  Size  Location     Type
 10608 ;;                  1    wreg      void 
 10609 ;; Registers used:
 10610 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10611 ;; Tracked objects:
 10612 ;;		On entry : 0/0
 10613 ;;		On exit  : 0/0
 10614 ;;		Unchanged: 0/0
 10615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10618 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10619 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10620 ;;Total ram usage:        1 bytes
 10621 ;; Hardware stack levels used:    1
 10622 ;; Hardware stack levels required when called:    4
 10623 ;; This function calls:
 10624 ;;		_EUSART_Receive_ISR
 10625 ;;		_EUSART_Transmit_ISR
 10626 ;;		_TMR6_ISR
 10627 ;; This function is called by:
 10628 ;;		Interrupt level 1
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632  0004                     _INTERRUPT_InterruptManager:	
 10633                           
 10634                           ;incstack = 0
 10635  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10636                           
 10637                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10638  0005  3180               	pagesel	$
 10639  0006  0020               	movlb	0	; select bank0
 10640  0007  087F               	movf	127,w
 10641  0008  00A2               	movwf	??_INTERRUPT_InterruptManager
 10642                           
 10643                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1)
 10644  0009  1F0B               	btfss	11,6	;volatile
 10645  000A  281F               	goto	i1l326
 10646                           
 10647                           ;interrupt_manager.c: 55: {
 10648                           ;interrupt_manager.c: 56: if(PIE3bits.TXIE == 1 && PIR3bits.TXIF == 1)
 10649  000B  002E               	movlb	14	; select bank14
 10650  000C  1A19               	btfsc	25,4	;volatile
 10651  000D  1E0F               	btfss	15,4	;volatile
 10652  000E  2813               	goto	i1l319
 10653                           
 10654                           ;interrupt_manager.c: 57: {
 10655                           ;interrupt_manager.c: 58: EUSART_Transmit_ISR();
 10656  000F  3187  2760  3180   	fcall	_EUSART_Transmit_ISR
 10657                           
 10658                           ;interrupt_manager.c: 59: }
 10659  0012  281F               	goto	i1l326
 10660  0013                     i1l319:	
 10661                           
 10662                           ;interrupt_manager.c: 60: else if(PIE3bits.RCIE == 1 && PIR3bits.RCIF == 1)
 10663  0013  1A99               	btfsc	25,5	;volatile
 10664  0014  1E8F               	btfss	15,5	;volatile
 10665  0015  281A               	goto	i1l321
 10666                           
 10667                           ;interrupt_manager.c: 61: {
 10668                           ;interrupt_manager.c: 62: EUSART_Receive_ISR();
 10669  0016  3187  277D  3180   	fcall	_EUSART_Receive_ISR
 10670                           
 10671                           ;interrupt_manager.c: 63: }
 10672  0019  281F               	goto	i1l326
 10673  001A                     i1l321:	
 10674                           
 10675                           ;interrupt_manager.c: 64: else if(PIE4bits.TMR6IE == 1 && PIR4bits.TMR6IF == 1)
 10676  001A  1A9A               	btfsc	26,5	;volatile
 10677  001B  1E90               	btfss	16,5	;volatile
 10678  001C  281F               	goto	i1l326
 10679                           
 10680                           ;interrupt_manager.c: 65: {
 10681                           ;interrupt_manager.c: 66: TMR6_ISR();
 10682  001D  3187  27F3         	fcall	_TMR6_ISR
 10683  001F                     i1l326:	
 10684                           ;interrupt_manager.c: 73: else
 10685                           ;interrupt_manager.c: 74: {
 10686                           
 10687                           ;interrupt_manager.c: 71: }
 10688                           ;interrupt_manager.c: 72: }
 10689                           
 10690                           ;interrupt_manager.c: 68: else
 10691                           ;interrupt_manager.c: 69: {
 10692                           
 10693                           ;interrupt_manager.c: 67: }
 10694                           
 10695  001F  0020               	movlb	0	; select bank0
 10696  0020  0822               	movf	??_INTERRUPT_InterruptManager,w
 10697  0021  00FF               	movwf	127
 10698  0022  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10699  0023  0009               	retfie
 10700  0024                     __end_of_INTERRUPT_InterruptManager:	
 10701                           
 10702                           	psect	text34
 10703  07F3                     __ptext34:	
 10704 ;; *************** function _TMR6_ISR *****************
 10705 ;; Defined at:
 10706 ;;		line 164 in file "mcc_generated_files/tmr6.c"
 10707 ;; Parameters:    Size  Location     Type
 10708 ;;		None
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;		None
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      void 
 10713 ;; Registers used:
 10714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10724 ;;Total ram usage:        0 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; Hardware stack levels required when called:    3
 10727 ;; This function calls:
 10728 ;;		Absolute function
 10729 ;;		_TMR6_DefaultInterruptHandler
 10730 ;;		_TMR6_EMG_InterruptHandler
 10731 ;; This function is called by:
 10732 ;;		_INTERRUPT_InterruptManager
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736                           
 10737                           ;psect for function _TMR6_ISR
 10738  07F3                     _TMR6_ISR:	
 10739                           
 10740                           ;tmr6.c: 168: PIR4bits.TMR6IF = 0;
 10741                           
 10742                           ;incstack = 0
 10743                           ; Regs used in _TMR6_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10744  07F3  002E               	movlb	14	; select bank14
 10745  07F4  1290               	bcf	16,5	;volatile
 10746                           
 10747                           ;tmr6.c: 170: if(TMR6_InterruptHandler)
 10748  07F5  0021               	movlb	1	; select bank1
 10749  07F6  0864               	movf	_TMR6_InterruptHandler^(0+128),w
 10750  07F7  0465               	iorwf	(_TMR6_InterruptHandler+1)^(0+128),w
 10751  07F8  1903               	btfsc	3,2
 10752  07F9  0008               	return
 10753                           
 10754                           ;tmr6.c: 171: {
 10755                           ;tmr6.c: 172: TMR6_InterruptHandler();
 10756  07FA  0865               	movf	(_TMR6_InterruptHandler+1)^(0+128),w
 10757  07FB  008A               	movwf	10
 10758  07FC  0864               	movf	_TMR6_InterruptHandler^(0+128),w
 10759  07FD  000A               	callw
 10760  07FE  3187               	pagesel	$
 10761  07FF  0008               	return
 10762  0800                     __end_of_TMR6_ISR:	
 10763                           
 10764                           	psect	text35
 10765  0003                     __ptext35:	
 10766 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 10767 ;; Defined at:
 10768 ;;		line 181 in file "mcc_generated_files/tmr6.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;		None
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;		None
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  1    wreg      void 
 10775 ;; Registers used:
 10776 ;;		None
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10786 ;;Total ram usage:        0 bytes
 10787 ;; Hardware stack levels used:    1
 10788 ;; This function calls:
 10789 ;;		Nothing
 10790 ;; This function is called by:
 10791 ;;		_TMR6_Initialize
 10792 ;;		_TMR6_ISR
 10793 ;; This function uses a non-reentrant model
 10794 ;;
 10795                           
 10796                           
 10797                           ;psect for function _TMR6_DefaultInterruptHandler
 10798  0003                     _TMR6_DefaultInterruptHandler:	
 10799                           
 10800                           ;incstack = 0
 10801                           ; Regs used in _TMR6_DefaultInterruptHandler: []
 10802  0003  0008               	return
 10803  0004                     __end_of_TMR6_DefaultInterruptHandler:	
 10804                           
 10805                           	psect	text36
 10806  06FF                     __ptext36:	
 10807 ;; *************** function _TMR6_EMG_InterruptHandler *****************
 10808 ;; Defined at:
 10809 ;;		line 80 in file "main.c"
 10810 ;; Parameters:    Size  Location     Type
 10811 ;;		None
 10812 ;; Auto vars:     Size  Location     Type
 10813 ;;  adval           2    0[BANK0 ] unsigned int 
 10814 ;; Return value:  Size  Location     Type
 10815 ;;                  1    wreg      void 
 10816 ;; Registers used:
 10817 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10818 ;; Tracked objects:
 10819 ;;		On entry : 0/0
 10820 ;;		On exit  : 0/0
 10821 ;;		Unchanged: 0/0
 10822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10824 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10826 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10827 ;;Total ram usage:        2 bytes
 10828 ;; Hardware stack levels used:    1
 10829 ;; Hardware stack levels required when called:    2
 10830 ;; This function calls:
 10831 ;;		_ADCC_GetConversionResult
 10832 ;;		_ADCC_StartConversion
 10833 ;;		_sbuf_insert
 10834 ;;		i1___lwdiv
 10835 ;; This function is called by:
 10836 ;;		_main
 10837 ;;		_TMR6_ISR
 10838 ;; This function uses a non-reentrant model
 10839 ;;
 10840                           
 10841                           
 10842                           ;psect for function _TMR6_EMG_InterruptHandler
 10843  06FF                     _TMR6_EMG_InterruptHandler:	
 10844                           
 10845                           ;main.c: 82: if (start_flag == 1) {
 10846                           
 10847                           ;incstack = 0
 10848                           ; Regs used in _TMR6_EMG_InterruptHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 10849  06FF  0020               	movlb	0	; select bank0
 10850  0700  035A               	decf	_start_flag,w
 10851  0701  1D03               	btfss	3,2
 10852  0702  0008               	return
 10853                           
 10854                           ;main.c: 84: ADCC_StartConversion(EMG_RA2);
 10855  0703  3002               	movlw	2
 10856  0704  318F  2784  3186   	fcall	_ADCC_StartConversion
 10857                           
 10858                           ;main.c: 86: adc_result_t adval = ADCC_GetConversionResult();
 10859  0707  318F  2772  3186   	fcall	_ADCC_GetConversionResult
 10860  070A  0871               	movf	?_ADCC_GetConversionResult+1,w
 10861  070B  0020               	movlb	0	; select bank0
 10862  070C  00A1               	movwf	TMR6_EMG_InterruptHandler@adval+1
 10863  070D  0870               	movf	?_ADCC_GetConversionResult,w
 10864  070E  00A0               	movwf	TMR6_EMG_InterruptHandler@adval
 10865                           
 10866                           ;main.c: 92: sbuf_insert(adval/100);
 10867  070F  3064               	movlw	100
 10868  0710  00F0               	movwf	i1___lwdiv@divisor
 10869  0711  3000               	movlw	0
 10870  0712  00F1               	movwf	i1___lwdiv@divisor+1
 10871  0713  0821               	movf	TMR6_EMG_InterruptHandler@adval+1,w
 10872  0714  00F3               	movwf	i1___lwdiv@dividend+1
 10873  0715  0820               	movf	TMR6_EMG_InterruptHandler@adval,w
 10874  0716  00F2               	movwf	i1___lwdiv@dividend
 10875  0717  3185  255B  3186   	fcall	i1___lwdiv
 10876  071A  0871               	movf	?i1___lwdiv+1,w
 10877  071B  00F9               	movwf	sbuf_insert@element+1
 10878  071C  0870               	movf	?i1___lwdiv,w
 10879  071D  00F8               	movwf	sbuf_insert@element
 10880  071E  3185  25C2         	fcall	_sbuf_insert
 10881  0720  0008               	return
 10882  0721                     __end_of_TMR6_EMG_InterruptHandler:	
 10883                           
 10884                           	psect	text37
 10885  055B                     __ptext37:	
 10886 ;; *************** function i1___lwdiv *****************
 10887 ;; Defined at:
 10888 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
 10889 ;; Parameters:    Size  Location     Type
 10890 ;;  divisor         2    0[COMMON] unsigned int 
 10891 ;;  dividend        2    2[COMMON] unsigned int 
 10892 ;; Auto vars:     Size  Location     Type
 10893 ;;  __lwdiv         2    5[COMMON] unsigned int 
 10894 ;;  __lwdiv         1    7[COMMON] unsigned char 
 10895 ;; Return value:  Size  Location     Type
 10896 ;;                  2    0[COMMON] unsigned int 
 10897 ;; Registers used:
 10898 ;;		wreg, status,2, status,0
 10899 ;; Tracked objects:
 10900 ;;		On entry : 0/0
 10901 ;;		On exit  : 0/0
 10902 ;;		Unchanged: 0/0
 10903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10904 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10905 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10906 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10907 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10908 ;;Total ram usage:        8 bytes
 10909 ;; Hardware stack levels used:    1
 10910 ;; This function calls:
 10911 ;;		Nothing
 10912 ;; This function is called by:
 10913 ;;		_TMR6_EMG_InterruptHandler
 10914 ;; This function uses a non-reentrant model
 10915 ;;
 10916                           
 10917                           
 10918                           ;psect for function i1___lwdiv
 10919  055B                     i1___lwdiv:	
 10920                           
 10921                           ;incstack = 0
 10922                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
 10923  055B  01F5               	clrf	i1___lwdiv@quotient
 10924  055C  01F6               	clrf	i1___lwdiv@quotient+1
 10925  055D  0870               	movf	i1___lwdiv@divisor,w
 10926  055E  0471               	iorwf	i1___lwdiv@divisor+1,w
 10927  055F  1903               	btfsc	3,2
 10928  0560  2D8A               	goto	i1l2340
 10929  0561  01F7               	clrf	i1___lwdiv@counter
 10930  0562  0AF7               	incf	i1___lwdiv@counter,f
 10931  0563                     i1l2328:	
 10932  0563  1BF1               	btfsc	i1___lwdiv@divisor+1,7
 10933  0564  2D6F               	goto	i1l2330
 10934  0565  3001               	movlw	1
 10935  0566                     u206_25:	
 10936  0566  35F0               	lslf	i1___lwdiv@divisor,f
 10937  0567  0DF1               	rlf	i1___lwdiv@divisor+1,f
 10938  0568  0B89               	decfsz	9,f
 10939  0569  2D66               	goto	u206_25
 10940  056A  3001               	movlw	1
 10941  056B  00F4               	movwf	??i1___lwdiv
 10942  056C  0874               	movf	??i1___lwdiv,w
 10943  056D  07F7               	addwf	i1___lwdiv@counter,f
 10944  056E  2D63               	goto	i1l2328
 10945  056F                     i1l2330:	
 10946  056F  3001               	movlw	1
 10947  0570                     u208_25:	
 10948  0570  35F5               	lslf	i1___lwdiv@quotient,f
 10949  0571  0DF6               	rlf	i1___lwdiv@quotient+1,f
 10950  0572  0B89               	decfsz	9,f
 10951  0573  2D70               	goto	u208_25
 10952  0574  0871               	movf	i1___lwdiv@divisor+1,w
 10953  0575  0273               	subwf	i1___lwdiv@dividend+1,w
 10954  0576  1D03               	skipz
 10955  0577  2D7A               	goto	u209_25
 10956  0578  0870               	movf	i1___lwdiv@divisor,w
 10957  0579  0272               	subwf	i1___lwdiv@dividend,w
 10958  057A                     u209_25:	
 10959  057A  1C03               	skipc
 10960  057B  2D81               	goto	i1l2336
 10961  057C  0870               	movf	i1___lwdiv@divisor,w
 10962  057D  02F2               	subwf	i1___lwdiv@dividend,f
 10963  057E  0871               	movf	i1___lwdiv@divisor+1,w
 10964  057F  3BF3               	subwfb	i1___lwdiv@dividend+1,f
 10965  0580  1475               	bsf	i1___lwdiv@quotient,0
 10966  0581                     i1l2336:	
 10967  0581  3001               	movlw	1
 10968  0582                     u210_25:	
 10969  0582  36F1               	lsrf	i1___lwdiv@divisor+1,f
 10970  0583  0CF0               	rrf	i1___lwdiv@divisor,f
 10971  0584  0B89               	decfsz	9,f
 10972  0585  2D82               	goto	u210_25
 10973  0586  3001               	movlw	1
 10974  0587  02F7               	subwf	i1___lwdiv@counter,f
 10975  0588  1D03               	btfss	3,2
 10976  0589  2D6F               	goto	i1l2330
 10977  058A                     i1l2340:	
 10978  058A  0876               	movf	i1___lwdiv@quotient+1,w
 10979  058B  00F1               	movwf	?i1___lwdiv+1
 10980  058C  0875               	movf	i1___lwdiv@quotient,w
 10981  058D  00F0               	movwf	?i1___lwdiv
 10982  058E  0008               	return
 10983  058F                     __end_ofi1___lwdiv:	
 10984                           
 10985                           	psect	text38
 10986  05C2                     __ptext38:	
 10987 ;; *************** function _sbuf_insert *****************
 10988 ;; Defined at:
 10989 ;;		line 25 in file "signal_buffer.c"
 10990 ;; Parameters:    Size  Location     Type
 10991 ;;  element         2    8[COMMON] unsigned int 
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;		None
 10994 ;; Return value:  Size  Location     Type
 10995 ;;                  1    wreg      unsigned char 
 10996 ;; Registers used:
 10997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10998 ;; Tracked objects:
 10999 ;;		On entry : 0/0
 11000 ;;		On exit  : 0/0
 11001 ;;		Unchanged: 0/0
 11002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11005 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11006 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11007 ;;Total ram usage:        6 bytes
 11008 ;; Hardware stack levels used:    1
 11009 ;; Hardware stack levels required when called:    1
 11010 ;; This function calls:
 11011 ;;		_sbuf_isfull
 11012 ;;		i1___awmod
 11013 ;; This function is called by:
 11014 ;;		_TMR6_EMG_InterruptHandler
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           
 11019                           ;psect for function _sbuf_insert
 11020  05C2                     _sbuf_insert:	
 11021                           
 11022                           ;signal_buffer.c: 26: if (sbuf_isfull()) {
 11023                           
 11024                           ;incstack = 0
 11025                           ; Regs used in _sbuf_insert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11026  05C2  3187  2721  3185   	fcall	_sbuf_isfull
 11027  05C5  3A00               	xorlw	0
 11028  05C6  1D03               	btfss	3,2
 11029  05C7  0008               	return
 11030                           
 11031                           ;signal_buffer.c: 31: else {
 11032                           ;signal_buffer.c: 33: if (sb_front == -1)
 11033                           
 11034                           ;signal_buffer.c: 29: }
 11035                           
 11036                           ;signal_buffer.c: 28: return 0;
 11037                           ;	Return value of _sbuf_insert is never used
 11038  05C8  0020               	movlb	0	; select bank0
 11039  05C9  0A60               	incf	_sb_front,w
 11040  05CA  1903               	btfsc	3,2
 11041                           
 11042                           ;signal_buffer.c: 34: sb_front = 0;
 11043  05CB  01E0               	clrf	_sb_front
 11044                           
 11045                           ;signal_buffer.c: 36: sb_rear = (sb_rear + 1) % 50;
 11046  05CC  3032               	movlw	50
 11047  05CD  00F0               	movwf	i1___awmod@divisor
 11048  05CE  3000               	movlw	0
 11049  05CF  00F1               	movwf	i1___awmod@divisor+1
 11050  05D0  3001               	movlw	1
 11051  05D1  075F               	addwf	_sb_rear,w
 11052  05D2  00F2               	movwf	i1___awmod@dividend
 11053  05D3  01F3               	clrf	i1___awmod@dividend+1
 11054  05D4  1803               	skipnc
 11055  05D5  0AF3               	incf	i1___awmod@dividend+1,f
 11056  05D6  1BDF               	btfsc	_sb_rear,7
 11057  05D7  03F3               	decf	i1___awmod@dividend+1,f
 11058  05D8  3184  246C         	fcall	i1___awmod
 11059  05DA  0870               	movf	?i1___awmod,w
 11060  05DB  00FA               	movwf	??_sbuf_insert
 11061  05DC  087A               	movf	??_sbuf_insert,w
 11062  05DD  0020               	movlb	0	; select bank0
 11063  05DE  00DF               	movwf	_sb_rear
 11064                           
 11065                           ;signal_buffer.c: 37: sb_data[sb_rear] = element;
 11066  05DF  085F               	movf	_sb_rear,w
 11067  05E0  00FA               	movwf	??_sbuf_insert
 11068  05E1  01FB               	clrf	??_sbuf_insert+1
 11069  05E2  35FA               	lslf	??_sbuf_insert,f
 11070  05E3  0DFB               	rlf	??_sbuf_insert+1,f
 11071  05E4  308C               	movlw	140
 11072  05E5  00FC               	movwf	??_sbuf_insert+2
 11073  05E6  3023               	movlw	35
 11074  05E7  00FD               	movwf	??_sbuf_insert+3
 11075  05E8  087A               	movf	??_sbuf_insert,w
 11076  05E9  077C               	addwf	??_sbuf_insert+2,w
 11077  05EA  0086               	movwf	6
 11078  05EB  087B               	movf	??_sbuf_insert+1,w
 11079  05EC  3D7D               	addwfc	??_sbuf_insert+3,w
 11080  05ED  0087               	movwf	7
 11081  05EE  0878               	movf	sbuf_insert@element,w
 11082  05EF  3FC0               	movwi [0]fsr1
 11083  05F0  0879               	movf	sbuf_insert@element+1,w
 11084  05F1  3FC1               	movwi [1]fsr1
 11085                           
 11086                           ;signal_buffer.c: 38: return 1;
 11087                           ;	Return value of _sbuf_insert is never used
 11088  05F2  0008               	return
 11089  05F3                     __end_of_sbuf_insert:	
 11090                           
 11091                           	psect	text39
 11092  046C                     __ptext39:	
 11093 ;; *************** function i1___awmod *****************
 11094 ;; Defined at:
 11095 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awmod.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;  divisor         2    0[COMMON] int 
 11098 ;;  dividend        2    2[COMMON] int 
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;  __awmod         1    6[COMMON] unsigned char 
 11101 ;;  __awmod         1    5[COMMON] unsigned char 
 11102 ;; Return value:  Size  Location     Type
 11103 ;;                  2    0[COMMON] int 
 11104 ;; Registers used:
 11105 ;;		wreg, status,2, status,0
 11106 ;; Tracked objects:
 11107 ;;		On entry : 0/0
 11108 ;;		On exit  : 0/0
 11109 ;;		Unchanged: 0/0
 11110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11113 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11114 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11115 ;;Total ram usage:        7 bytes
 11116 ;; Hardware stack levels used:    1
 11117 ;; This function calls:
 11118 ;;		Nothing
 11119 ;; This function is called by:
 11120 ;;		_sbuf_insert
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           
 11124                           
 11125                           ;psect for function i1___awmod
 11126  046C                     i1___awmod:	
 11127                           
 11128                           ;incstack = 0
 11129                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
 11130  046C  01F6               	clrf	i1___awmod@sign
 11131  046D  1FF3               	btfss	i1___awmod@dividend+1,7
 11132  046E  2C76               	goto	i1l2116
 11133  046F  09F2               	comf	i1___awmod@dividend,f
 11134  0470  09F3               	comf	i1___awmod@dividend+1,f
 11135  0471  0AF2               	incf	i1___awmod@dividend,f
 11136  0472  1903               	skipnz
 11137  0473  0AF3               	incf	i1___awmod@dividend+1,f
 11138  0474  01F6               	clrf	i1___awmod@sign
 11139  0475  0AF6               	incf	i1___awmod@sign,f
 11140  0476                     i1l2116:	
 11141  0476  1FF1               	btfss	i1___awmod@divisor+1,7
 11142  0477  2C7D               	goto	i1l2120
 11143  0478  09F0               	comf	i1___awmod@divisor,f
 11144  0479  09F1               	comf	i1___awmod@divisor+1,f
 11145  047A  0AF0               	incf	i1___awmod@divisor,f
 11146  047B  1903               	skipnz
 11147  047C  0AF1               	incf	i1___awmod@divisor+1,f
 11148  047D                     i1l2120:	
 11149  047D  0870               	movf	i1___awmod@divisor,w
 11150  047E  0471               	iorwf	i1___awmod@divisor+1,w
 11151  047F  1903               	btfsc	3,2
 11152  0480  2CA4               	goto	i1l2138
 11153  0481  01F5               	clrf	i1___awmod@counter
 11154  0482  0AF5               	incf	i1___awmod@counter,f
 11155  0483                     i1l2128:	
 11156  0483  1BF1               	btfsc	i1___awmod@divisor+1,7
 11157  0484  2C8F               	goto	i1l2130
 11158  0485  3001               	movlw	1
 11159  0486                     u162_25:	
 11160  0486  35F0               	lslf	i1___awmod@divisor,f
 11161  0487  0DF1               	rlf	i1___awmod@divisor+1,f
 11162  0488  0B89               	decfsz	9,f
 11163  0489  2C86               	goto	u162_25
 11164  048A  3001               	movlw	1
 11165  048B  00F4               	movwf	??i1___awmod
 11166  048C  0874               	movf	??i1___awmod,w
 11167  048D  07F5               	addwf	i1___awmod@counter,f
 11168  048E  2C83               	goto	i1l2128
 11169  048F                     i1l2130:	
 11170  048F  0871               	movf	i1___awmod@divisor+1,w
 11171  0490  0273               	subwf	i1___awmod@dividend+1,w
 11172  0491  1D03               	skipz
 11173  0492  2C95               	goto	u164_25
 11174  0493  0870               	movf	i1___awmod@divisor,w
 11175  0494  0272               	subwf	i1___awmod@dividend,w
 11176  0495                     u164_25:	
 11177  0495  1C03               	skipc
 11178  0496  2C9B               	goto	i1l2134
 11179  0497  0870               	movf	i1___awmod@divisor,w
 11180  0498  02F2               	subwf	i1___awmod@dividend,f
 11181  0499  0871               	movf	i1___awmod@divisor+1,w
 11182  049A  3BF3               	subwfb	i1___awmod@dividend+1,f
 11183  049B                     i1l2134:	
 11184  049B  3001               	movlw	1
 11185  049C                     u165_25:	
 11186  049C  36F1               	lsrf	i1___awmod@divisor+1,f
 11187  049D  0CF0               	rrf	i1___awmod@divisor,f
 11188  049E  0B89               	decfsz	9,f
 11189  049F  2C9C               	goto	u165_25
 11190  04A0  3001               	movlw	1
 11191  04A1  02F5               	subwf	i1___awmod@counter,f
 11192  04A2  1D03               	btfss	3,2
 11193  04A3  2C8F               	goto	i1l2130
 11194  04A4                     i1l2138:	
 11195  04A4  0876               	movf	i1___awmod@sign,w
 11196  04A5  1903               	btfsc	3,2
 11197  04A6  2CAC               	goto	i1l2142
 11198  04A7  09F2               	comf	i1___awmod@dividend,f
 11199  04A8  09F3               	comf	i1___awmod@dividend+1,f
 11200  04A9  0AF2               	incf	i1___awmod@dividend,f
 11201  04AA  1903               	skipnz
 11202  04AB  0AF3               	incf	i1___awmod@dividend+1,f
 11203  04AC                     i1l2142:	
 11204  04AC  0873               	movf	i1___awmod@dividend+1,w
 11205  04AD  00F1               	movwf	?i1___awmod+1
 11206  04AE  0872               	movf	i1___awmod@dividend,w
 11207  04AF  00F0               	movwf	?i1___awmod
 11208  04B0  0008               	return
 11209  04B1                     __end_ofi1___awmod:	
 11210                           
 11211                           	psect	text40
 11212  0721                     __ptext40:	
 11213 ;; *************** function _sbuf_isfull *****************
 11214 ;; Defined at:
 11215 ;;		line 9 in file "signal_buffer.c"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;		None
 11218 ;; Auto vars:     Size  Location     Type
 11219 ;;		None
 11220 ;; Return value:  Size  Location     Type
 11221 ;;                  1    wreg      unsigned char 
 11222 ;; Registers used:
 11223 ;;		wreg, status,2, status,0
 11224 ;; Tracked objects:
 11225 ;;		On entry : 0/0
 11226 ;;		On exit  : 0/0
 11227 ;;		Unchanged: 0/0
 11228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11231 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11232 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11233 ;;Total ram usage:        4 bytes
 11234 ;; Hardware stack levels used:    1
 11235 ;; This function calls:
 11236 ;;		Nothing
 11237 ;; This function is called by:
 11238 ;;		_sbuf_insert
 11239 ;; This function uses a non-reentrant model
 11240 ;;
 11241                           
 11242                           
 11243                           ;psect for function _sbuf_isfull
 11244  0721                     _sbuf_isfull:	
 11245                           
 11246                           ;signal_buffer.c: 10: if ((sb_front == sb_rear + 1) || (sb_front == 0 && sb_rear == 50 -
      +                           1))
 11247                           
 11248                           ;incstack = 0
 11249                           ; Regs used in _sbuf_isfull: [wreg+status,2+status,0]
 11250  0721  0020               	movlb	0	; select bank0
 11251  0722  0860               	movf	_sb_front,w
 11252  0723  00F0               	movwf	??_sbuf_isfull
 11253  0724  01F1               	clrf	??_sbuf_isfull+1
 11254  0725  1BF0               	btfsc	??_sbuf_isfull,7
 11255  0726  03F1               	decf	??_sbuf_isfull+1,f
 11256  0727  3001               	movlw	1
 11257  0728  075F               	addwf	_sb_rear,w
 11258  0729  00F2               	movwf	??_sbuf_isfull+2
 11259  072A  01F3               	clrf	??_sbuf_isfull+3
 11260  072B  1803               	skipnc
 11261  072C  0AF3               	incf	??_sbuf_isfull+3,f
 11262  072D  1BDF               	btfsc	_sb_rear,7
 11263  072E  03F3               	decf	??_sbuf_isfull+3,f
 11264  072F  0871               	movf	??_sbuf_isfull+1,w
 11265  0730  0673               	xorwf	??_sbuf_isfull+3,w
 11266  0731  1D03               	skipz
 11267  0732  2F35               	goto	u156_25
 11268  0733  0870               	movf	??_sbuf_isfull,w
 11269  0734  0672               	xorwf	??_sbuf_isfull+2,w
 11270  0735                     u156_25:	
 11271  0735  1903               	skipnz
 11272  0736  2F3F               	goto	i1l2098
 11273  0737  0020               	movlb	0	; select bank0
 11274  0738  0860               	movf	_sb_front,w
 11275  0739  1D03               	btfss	3,2
 11276  073A  2F41               	goto	i1l2104
 11277  073B  3031               	movlw	49
 11278  073C  065F               	xorwf	_sb_rear,w
 11279  073D  1D03               	btfss	3,2
 11280  073E  2F41               	goto	i1l2104
 11281  073F                     i1l2098:	
 11282                           
 11283                           ;signal_buffer.c: 11: return 1;
 11284  073F  3001               	movlw	1
 11285  0740  0008               	return
 11286  0741                     i1l2104:	
 11287                           
 11288                           ;signal_buffer.c: 12: else
 11289                           ;signal_buffer.c: 13: return 0;
 11290  0741  3000               	movlw	0
 11291  0742  0008               	return
 11292  0743                     __end_of_sbuf_isfull:	
 11293                           
 11294                           	psect	text41
 11295  0F84                     __ptext41:	
 11296 ;; *************** function _ADCC_StartConversion *****************
 11297 ;; Defined at:
 11298 ;;		line 103 in file "mcc_generated_files/adcc.c"
 11299 ;; Parameters:    Size  Location     Type
 11300 ;;  channel         1    wreg     enum E14958
 11301 ;; Auto vars:     Size  Location     Type
 11302 ;;  channel         1    0[COMMON] enum E14958
 11303 ;; Return value:  Size  Location     Type
 11304 ;;                  1    wreg      void 
 11305 ;; Registers used:
 11306 ;;		wreg
 11307 ;; Tracked objects:
 11308 ;;		On entry : 0/0
 11309 ;;		On exit  : 0/0
 11310 ;;		Unchanged: 0/0
 11311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11316 ;;Total ram usage:        1 bytes
 11317 ;; Hardware stack levels used:    1
 11318 ;; This function calls:
 11319 ;;		Nothing
 11320 ;; This function is called by:
 11321 ;;		_TMR6_EMG_InterruptHandler
 11322 ;; This function uses a non-reentrant model
 11323 ;;
 11324                           
 11325                           
 11326                           ;psect for function _ADCC_StartConversion
 11327  0F84                     _ADCC_StartConversion:	
 11328                           
 11329                           ;incstack = 0
 11330                           ; Regs used in _ADCC_StartConversion: [wreg]
 11331                           ;ADCC_StartConversion@channel stored from wreg
 11332  0F84  00F0               	movwf	ADCC_StartConversion@channel
 11333                           
 11334                           ;adcc.c: 106: ADPCH = channel;
 11335  0F85  0870               	movf	ADCC_StartConversion@channel,w
 11336  0F86  0021               	movlb	1	; select bank1
 11337  0F87  009E               	movwf	30	;volatile
 11338                           
 11339                           ;adcc.c: 109: ADCON0bits.ADON = 1;
 11340  0F88  1793               	bsf	19,7	;volatile
 11341                           
 11342                           ;adcc.c: 112: ADCON0bits.ADGO = 1;
 11343  0F89  1413               	bsf	19,0	;volatile
 11344  0F8A  0008               	return
 11345  0F8B                     __end_of_ADCC_StartConversion:	
 11346                           
 11347                           	psect	text42
 11348  0F72                     __ptext42:	
 11349 ;; *************** function _ADCC_GetConversionResult *****************
 11350 ;; Defined at:
 11351 ;;		line 121 in file "mcc_generated_files/adcc.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;		None
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;		None
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  2    0[COMMON] unsigned int 
 11358 ;; Registers used:
 11359 ;;		wreg
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11369 ;;Total ram usage:        2 bytes
 11370 ;; Hardware stack levels used:    1
 11371 ;; This function calls:
 11372 ;;		Nothing
 11373 ;; This function is called by:
 11374 ;;		_TMR6_EMG_InterruptHandler
 11375 ;; This function uses a non-reentrant model
 11376 ;;
 11377                           
 11378                           
 11379                           ;psect for function _ADCC_GetConversionResult
 11380  0F72                     _ADCC_GetConversionResult:	
 11381                           
 11382                           ;adcc.c: 124: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11383                           
 11384                           ;incstack = 0
 11385                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 11386  0F72  0021               	movlb	1	; select bank1
 11387  0F73  080D               	movf	13,w	;volatile
 11388  0F74  00F1               	movwf	?_ADCC_GetConversionResult+1
 11389  0F75  080C               	movf	12,w	;volatile
 11390  0F76  00F0               	movwf	?_ADCC_GetConversionResult
 11391  0F77  0008               	return
 11392  0F78                     __end_of_ADCC_GetConversionResult:	
 11393                           
 11394                           	psect	text43
 11395  0760                     __ptext43:	
 11396 ;; *************** function _EUSART_Transmit_ISR *****************
 11397 ;; Defined at:
 11398 ;;		line 161 in file "mcc_generated_files/eusart.c"
 11399 ;; Parameters:    Size  Location     Type
 11400 ;;		None
 11401 ;; Auto vars:     Size  Location     Type
 11402 ;;		None
 11403 ;; Return value:  Size  Location     Type
 11404 ;;                  1    wreg      void 
 11405 ;; Registers used:
 11406 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11407 ;; Tracked objects:
 11408 ;;		On entry : 0/0
 11409 ;;		On exit  : 0/0
 11410 ;;		Unchanged: 0/0
 11411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11415 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11416 ;;Total ram usage:        1 bytes
 11417 ;; Hardware stack levels used:    1
 11418 ;; This function calls:
 11419 ;;		Nothing
 11420 ;; This function is called by:
 11421 ;;		_INTERRUPT_InterruptManager
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           
 11426                           ;psect for function _EUSART_Transmit_ISR
 11427  0760                     _EUSART_Transmit_ISR:	
 11428                           
 11429                           ;eusart.c: 165: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 11430                           
 11431                           ;incstack = 0
 11432                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 11433  0760  3008               	movlw	8
 11434  0761  0020               	movlb	0	; select bank0
 11435  0762  0261               	subwf	_eusartTxBufferRemaining,w	;volatile
 11436  0763  1803               	skipnc
 11437  0764  2F7A               	goto	i1l531
 11438                           
 11439                           ;eusart.c: 166: {
 11440                           ;eusart.c: 167: TX1REG = eusartTxBuffer[eusartTxTail++];
 11441  0765  0855               	movf	_eusartTxTail,w
 11442  0766  3EDC               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 11443  0767  0086               	movwf	6
 11444  0768  0187               	clrf	7
 11445  0769  0801               	movf	1,w
 11446  076A  0022               	movlb	2	; select bank2
 11447  076B  009A               	movwf	26	;volatile
 11448  076C  3001               	movlw	1
 11449  076D  00F0               	movwf	??_EUSART_Transmit_ISR
 11450  076E  0870               	movf	??_EUSART_Transmit_ISR,w
 11451  076F  0020               	movlb	0	; select bank0
 11452  0770  07D5               	addwf	_eusartTxTail,f	;volatile
 11453                           
 11454                           ;eusart.c: 168: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 11455  0771  3008               	movlw	8
 11456  0772  0255               	subwf	_eusartTxTail,w	;volatile
 11457  0773  1803               	btfsc	3,0
 11458                           
 11459                           ;eusart.c: 169: {
 11460                           ;eusart.c: 170: eusartTxTail = 0;
 11461  0774  01D5               	clrf	_eusartTxTail	;volatile
 11462                           
 11463                           ;eusart.c: 171: }
 11464                           ;eusart.c: 172: eusartTxBufferRemaining++;
 11465  0775  3001               	movlw	1
 11466  0776  00F0               	movwf	??_EUSART_Transmit_ISR
 11467  0777  0870               	movf	??_EUSART_Transmit_ISR,w
 11468  0778  07E1               	addwf	_eusartTxBufferRemaining,f	;volatile
 11469                           
 11470                           ;eusart.c: 173: }
 11471  0779  0008               	return
 11472  077A                     i1l531:	
 11473                           
 11474                           ;eusart.c: 174: else
 11475                           ;eusart.c: 175: {
 11476                           ;eusart.c: 176: PIE3bits.TXIE = 0;
 11477  077A  002E               	movlb	14	; select bank14
 11478  077B  1219               	bcf	25,4	;volatile
 11479  077C  0008               	return
 11480  077D                     __end_of_EUSART_Transmit_ISR:	
 11481                           
 11482                           	psect	text44
 11483  077D                     __ptext44:	
 11484 ;; *************** function _EUSART_Receive_ISR *****************
 11485 ;; Defined at:
 11486 ;;		line 180 in file "mcc_generated_files/eusart.c"
 11487 ;; Parameters:    Size  Location     Type
 11488 ;;		None
 11489 ;; Auto vars:     Size  Location     Type
 11490 ;;		None
 11491 ;; Return value:  Size  Location     Type
 11492 ;;                  1    wreg      void 
 11493 ;; Registers used:
 11494 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11495 ;; Tracked objects:
 11496 ;;		On entry : 0/0
 11497 ;;		On exit  : 0/0
 11498 ;;		Unchanged: 0/0
 11499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11502 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11503 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11504 ;;Total ram usage:        1 bytes
 11505 ;; Hardware stack levels used:    1
 11506 ;; This function calls:
 11507 ;;		Nothing
 11508 ;; This function is called by:
 11509 ;;		_INTERRUPT_InterruptManager
 11510 ;; This function uses a non-reentrant model
 11511 ;;
 11512                           
 11513                           
 11514                           ;psect for function _EUSART_Receive_ISR
 11515  077D                     _EUSART_Receive_ISR:	
 11516                           
 11517                           ;eusart.c: 183: if(1 == RC1STAbits.OERR)
 11518                           
 11519                           ;incstack = 0
 11520                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 11521  077D  0022               	movlb	2	; select bank2
 11522  077E  1C9D               	btfss	29,1	;volatile
 11523  077F  2F82               	goto	i1l2636
 11524                           
 11525                           ;eusart.c: 184: {
 11526                           ;eusart.c: 187: RC1STAbits.CREN = 0;
 11527  0780  121D               	bcf	29,4	;volatile
 11528                           
 11529                           ;eusart.c: 188: RC1STAbits.CREN = 1;
 11530  0781  161D               	bsf	29,4	;volatile
 11531  0782                     i1l2636:	
 11532                           
 11533                           ;eusart.c: 189: }
 11534                           ;eusart.c: 192: eusartRxBuffer[eusartRxHead++] = RC1REG;
 11535  0782  0819               	movf	25,w	;volatile
 11536  0783  00F0               	movwf	??_EUSART_Receive_ISR
 11537  0784  0020               	movlb	0	; select bank0
 11538  0785  0854               	movf	_eusartRxHead,w
 11539  0786  3ED4               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 11540  0787  0086               	movwf	6
 11541  0788  0187               	clrf	7
 11542  0789  0870               	movf	??_EUSART_Receive_ISR,w
 11543  078A  0081               	movwf	1
 11544  078B  3001               	movlw	1
 11545  078C  00F0               	movwf	??_EUSART_Receive_ISR
 11546  078D  0870               	movf	??_EUSART_Receive_ISR,w
 11547  078E  07D4               	addwf	_eusartRxHead,f	;volatile
 11548                           
 11549                           ;eusart.c: 193: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 11550  078F  3008               	movlw	8
 11551  0790  0254               	subwf	_eusartRxHead,w	;volatile
 11552  0791  1803               	btfsc	3,0
 11553                           
 11554                           ;eusart.c: 194: {
 11555                           ;eusart.c: 195: eusartRxHead = 0;
 11556  0792  01D4               	clrf	_eusartRxHead	;volatile
 11557                           
 11558                           ;eusart.c: 196: }
 11559                           ;eusart.c: 197: eusartRxCount++;
 11560  0793  3001               	movlw	1
 11561  0794  00F0               	movwf	??_EUSART_Receive_ISR
 11562  0795  0870               	movf	??_EUSART_Receive_ISR,w
 11563  0796  07D2               	addwf	_eusartRxCount,f	;volatile
 11564  0797  0008               	return
 11565  0798                     __end_of_EUSART_Receive_ISR:	
 11566  007E                     btemp	set	126	;btemp
 11567  007E                     int$flags	set	126
 11568  007E                     wtemp0	set	126


Data Sizes:
    Strings     4
    Constant    0
    Data        6
    BSS         89
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      66
    BANK1            80      0      70
    BANK2            80     14      14
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), TMR6_EMG_InterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR6_DefaultInterruptHandler(), TMR6_EMG_InterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR6_EMG_InterruptHandler->_sbuf_insert
    _sbuf_insert->i1___lwdiv

Critical Paths under _main in BANK0

    _main->___fttol
    _sbuf_remove->___awmod
    _printf->_putch
    _putch->_EUSART_Write
    _get_neutral_peaktopeak->_pkdata_insert
    _get_neutral_peaktopeak->_pkdata_remove
    _pkdata_remove->___awmod
    _pkdata_insert->___awmod
    _get_moving_average->___lwtoft
    _madata_remove->___awmod
    _madata_insert->___awmod
    ___lwtoft->___ftpack
    ___lwtoft->___lwdiv
    ___fttol->_get_moving_average
    ___ftadd->___ftpack
    _TMR6_Initialize->_TMR6_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR6_ISR->_TMR6_EMG_InterruptHandler

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   20672
                                             34 BANK0      4     4      0
                                              0 BANK2     14    14      0
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
                         _TMR6_Start
                            ___awmod
                            ___ftadd
                            ___fttol
                                _abs
                 _get_moving_average
             _get_neutral_peaktopeak
                             _printf
                          _sbuf_peek
                        _sbuf_remove
 ---------------------------------------------------------------------------------
 (1) _sbuf_remove                                          6     6      0    1598
                                             10 BANK0      6     6      0
                            ___awmod
                       _sbuf_isempty
 ---------------------------------------------------------------------------------
 (2) _sbuf_isempty                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sbuf_peek                                            6     4      2       0
                                              3 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _printf                                              19    17      2     469
                                              6 BANK0      7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                              5 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_neutral_peaktopeak                              13    11      2    5366
                                             13 BANK0     13    11      2
                            ___awmod
                      _pkdata_insert
                      _pkdata_isfull
                      _pkdata_remove
 ---------------------------------------------------------------------------------
 (2) _pkdata_remove                                        3     3      0    1598
                                             10 BANK0      3     3      0
                            ___awmod
                     _pkdata_isempty
 ---------------------------------------------------------------------------------
 (3) _pkdata_isempty                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pkdata_insert                                        3     1      2    1703
                                             10 BANK0      3     1      2
                            ___awmod
                      _pkdata_isfull
 ---------------------------------------------------------------------------------
 (2) _pkdata_isfull                                        4     4      0       0
                                              3 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _get_moving_average                                   5     2      3    6371
                                             15 BANK0      5     2      3
                            ___lwdiv
                           ___lwtoft
                                _abs (ARG)
                      _madata_insert
                      _madata_isfull
                      _madata_remove
 ---------------------------------------------------------------------------------
 (2) _madata_remove                                        3     3      0    1598
                                             10 BANK0      3     3      0
                            ___awmod
                     _madata_isempty
 ---------------------------------------------------------------------------------
 (3) _madata_isempty                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _madata_insert                                        3     1      2    1703
                                             10 BANK0      3     1      2
                            ___awmod
                      _madata_isfull
 ---------------------------------------------------------------------------------
 (2) _madata_isfull                                        4     4      0       0
                                              3 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1595
                                              3 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2452
                                             11 BANK0      4     1      3
                           ___ftpack
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     479
                                              3 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     170
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     448
                                             20 BANK0     14    10      4
                                _abs (ARG)
                 _get_moving_average (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    3837
                                             11 BANK0     13     7      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2344
                                              3 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _TMR6_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     185
                    _ADCC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     185
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             2     0      2     185
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0     693
                                              2 BANK0      1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0     693
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
          _TMR6_EMG_InterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR6_EMG_InterruptHandler                            2     2      0     693
                                              0 BANK0      2     2      0
           _ADCC_GetConversionResult
               _ADCC_StartConversion
                        _sbuf_insert
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (7) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _sbuf_insert                                          6     4      2     434
                                              8 COMMON     6     4      2
                        _sbuf_isfull
                          i1___awmod
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) i1___awmod                                            7     3      4     348
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (8) _sbuf_isfull                                          4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (7) _ADCC_StartConversion                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR6_Start
   ___awmod
   ___ftadd
     ___ftpack
   ___fttol
     _abs (ARG)
     _get_moving_average (ARG)
       ___lwdiv
       ___lwtoft
         ___ftpack
         ___lwdiv (ARG)
       _abs (ARG)
       _madata_insert (ARG)
         ___awmod
         _madata_isfull
       _madata_isfull (ARG)
       _madata_remove (ARG)
         ___awmod
         _madata_isempty
   _abs
   _get_moving_average
     ___lwdiv
     ___lwtoft
       ___ftpack
       ___lwdiv (ARG)
     _abs (ARG)
     _madata_insert (ARG)
       ___awmod
       _madata_isfull
     _madata_isfull (ARG)
     _madata_remove (ARG)
       ___awmod
       _madata_isempty
   _get_neutral_peaktopeak
     ___awmod
     _pkdata_insert
       ___awmod
       _pkdata_isfull
     _pkdata_isfull
     _pkdata_remove
       ___awmod
       _pkdata_isempty
   _printf
     _putch
       _EUSART_Write
   _sbuf_peek
   _sbuf_remove
     ___awmod
     _sbuf_isempty

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR6_ISR
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _TMR6_EMG_InterruptHandler *
       _ADCC_GetConversionResult
       _ADCC_StartConversion
       _sbuf_insert
         _sbuf_isfull
         i1___awmod
         i1___lwdiv (ARG)
       i1___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      42       5       82.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      E       E       9       17.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Mar 20 10:12:51 2018

                                       _i 0059                               __CFG_CP$OFF 0000  
                          ?_madata_insert 002A                            ?_madata_isfull 0070  
                          ?_madata_remove 0070                              ___ftadd@exp1 0037  
                            ___ftadd@exp2 0036                               __CFG_LVP$ON 0000  
                            ___ftadd@sign 0035                                       l135 017C  
                                     l519 06A4                                       l951 03F4  
                                     l687 0300                                       l958 0407  
                                     l982 025B                                       l959 040F  
                            __CFG_CPD$OFF 0000                                       _PR6 0299  
                   __end_of_pkdata_insert 0671                     __end_of_pkdata_isfull 06DD  
                                     _abs 0FCA                     __end_of_pkdata_remove 061F  
                  _get_neutral_peaktopeak 02B2                   __size_of_PMD_Initialize 0008  
                            ___awmod@sign 0029                              __CFG_BORV$LO 0000  
                                     wreg 0009                           ?_madata_isempty 0070  
                            __CFG_ZCD$OFF 0000                                      l1042 03A7  
                                    ?_abs 0023                                      l3000 0401  
                                    l3020 0431                                      l3032 043E  
                                    l3024 0438                                      l3210 052F  
                                    l3034 044A                                      l3042 045F  
                                    l3212 053B                                      l3300 0748  
                                    l3222 0556                                      l3046 0467  
                                    l3038 0456                                      l3152 0637  
                                    l3218 054D                                      l3314 0512  
                                    l3324 01E4                                      l3420 039E  
                                    l3412 0383                                      l3500 0162  
                                    l3334 01FA                                      l3422 03AA  
                                    l3414 0391                                      l3270 0329  
                                    l3254 02C3                                      l3352 0227  
                                    l3328 01EB                                      l3184 060B  
                                    l3520 0193                                      l3370 026D  
                                    l3354 0231                                      l3346 0214  
                                    l3426 03B8                                      l3266 0318  
                                    l3514 0187                                      l3364 024D  
                                    l3356 0236                                      l3292 04D4  
                                    l3196 0FA9                                      l3524 01B8  
                                    l3374 027F                                      l3366 0257  
                                    l3358 023A                                      l3454 0085  
                    _ADCC_StartConversion 0F84                                      l3384 029A  
                                    l3464 00A5                                      l3456 0091  
                                    l3448 0072                                      l3394 0353  
                                    l2930 06FB                                      l2922 06B8  
                                    l3490 014A                                      l3474 00D4  
                                    l2908 0699                                      l2936 06FD  
                                    l2948 0F99                                      l2964 06DB  
                                    l2990 03DB                                      l2958 06D9  
                                    l2992 03E0                                      l2984 03CA  
                                    l2976 0FA1                                      l2988 03D1  
                                    l2998 03F9                                      STR_1 1002  
                                    STR_2 1000                                      STR_3 1000  
                                    STR_4 1002                                      _LATA 0016  
                                    _LATB 0017                                      _LATC 0018  
                                    _LATD 0019                                      _LATE 001A  
                                    u3125 06F2                                      u4025 039F  
                                    u3315 0416                                      u3235 03D6  
                                    u4115 00BB                                      u4060 0083  
                           _ma_window_sum 0050                                      u4125 00E0  
                                    u3255 03EF                                      u3175 06D0  
                                    u3275 03FC                                      u3605 054E  
                                    u3365 0441                                      u4237 008B  
                                    u4247 009F                                      u3385 0450  
                                    _T6PR 0299                                      u3395 0457  
                                    u3635 02F6                                      _PMD0 0796  
                                    u3565 0532                                      u3645 030E  
                                    _PMD1 0797                                      _PMD2 0798  
                                    u3815 0215                                      u3655 02E6  
                                    _PMD3 0799                                      _PMD4 079A  
                                    u3905 024E                                      u3585 053C  
                                    _PMD5 079B                                      u3595 0546  
                                    u3845 0228                                      u3875 023B  
                                    u3965 035A                                      u3995 0384  
                                    _TMR6 0298                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                      sbuf_remove@element 002E                    __end_of_pkdata_isempty 0FA3  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                                    abs@a 0023                                      _main 005A  
                            ___ftpack@arg 0023                              ___ftpack@exp 0026  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
             __size_of_get_moving_average 003E                                      start 0024  
                           __CFG_CSWEN$ON 0000                             __CFG_MCLRE$ON 0000  
                            ___fttol@exp1 0041                                     ??_abs 0025  
                            ___fttol@lval 003D                 _TMR6_EMG_InterruptHandler 06FF  
                           ?_EUSART_Write 0070            __size_of_OSCILLATOR_Initialize 000A  
           __end_of_OSCILLATOR_Initialize 0FBE                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                                     _ADPRE 009C  
                         __end_of___ftadd 02B2                             __CFG_WDTE$OFF 0000  
                         __end_of___awmod 046C                                     _ADRPT 010D  
                         __end_of___fttol 03C1                                     _T6CON 029A  
                          __CFG_DEBUG$OFF 0000                           __end_of___lwdiv 055B  
                                   _T6HLT 029B                                     i1l321 001A  
                                   i1l326 001F                                     i1l319 0013  
                                   i1l531 077A                                     _T6TMR 0298  
                                   _T6RST 029D                                     _OSCEN 0891  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015         __size_of_TMR6_SetInterruptHandler 0009  
               ?_TMR6_SetInterruptHandler 0023                            i1___awmod@sign 0076  
                        __end_of_TMR6_ISR 0800                     ?_ADCC_StartConversion 0070  
                           ___ftpack@sign 0027                                     _putch 0F78  
                             ?_TMR6_Start 0070                                     pclath 000A  
                         ?_pkdata_isempty 0070                                     status 0003  
                                   wtemp0 007E                        __size_ofi1___awmod 0045  
                      __size_ofi1___lwdiv 0034            ??_TMR6_DefaultInterruptHandler 0070  
                         __initialization 0026                              __end_of_main 01BC  
                         ??_madata_insert 002C                           ??_madata_isfull 0023  
                          ??_EUSART_Write 0023                           ??_madata_remove 002A  
             ?_INTERRUPT_InterruptManager 0070                             main@datapoint 0129  
                                  ??_main 0042                             ___fttol@sign1 003C  
                         _TMR6_Initialize 07B2                      madata_remove@element 002B  
                           main@flex_flag 012B                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096               get_moving_average@datapoint 002F  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                                    _ANSELA 0F38  
                                  ?_putch 0070                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                          __end_of___ftpack 0426  
                      __CFG_RSTOSC$HFINT1 0000                                    _RC1REG 0119  
                                  _RC1STA 011D                                    i1l2104 0741  
                                  i1l2120 047D                                    i1l2130 048F  
                                  i1l2116 0476                                    i1l2142 04AC  
                                  i1l2134 049B                                    i1l2128 0483  
                                  _ODCONA 0F3A                                    i1l2138 04A4  
                                  i1l2330 056F                                    _ODCONB 0F45  
                                  _ODCONC 0F50                                    _RC6PPS 0F26  
                                  i1l2340 058A                                    _ODCOND 0F5B  
                                  _ODCONE 0F66                                    i1l2336 0581  
                                  i1l2328 0563                                    i1l2098 073F  
                                  i1l2636 0782                                    u210_25 0582  
                          __CFG_WDTCCS$SC 0000                                    u206_25 0566  
                                  u208_25 0570                                    u209_25 057A  
                                  u162_25 0486                                    u156_25 0735  
                                  u164_25 0495                                    u165_25 049C  
                        __end_of___lwtoft 1000                              ?_sbuf_insert 0078  
                                  _OSCFRQ 0893                              ?_sbuf_isfull 0070  
                                  _TX1REG 011A                              ?_sbuf_remove 0070  
                                  _TX1STA 011E                ??_ADCC_GetConversionResult 0072  
                          __CFG_PWRTE$OFF 0000         get_neutral_peaktopeak@lowest_peak 0037  
                               ??___ftadd 0031                            __CFG_STVREN$ON 0000  
                               ??___awmod 0027                                 ??___fttol 0038  
                               ??___lwdiv 0027                       _EUSART_Transmit_ISR 0760  
                     __size_of_TMR6_Start 0003                           ___awmod@divisor 0023  
                                  _sent_0 0057                                    _sent_1 0058  
                         ___awmod@counter 0028                                    _printf 0743  
                       __end_ofi1___awmod 04B1                           _ADCC_Initialize 07C8  
                          _PMD_Initialize 0F8B                         __end_ofi1___lwdiv 058F  
                  ??_ADCC_StartConversion 0070  TMR6_SetInterruptHandler@InterruptHandler 0023  
                    ?_EUSART_Transmit_ISR 0070                         _SYSTEM_Initialize 0FD9  
                 __end_of__initialization 0056                                ___ftadd@f1 002B  
                              ___ftadd@f2 002E                        ?_SYSTEM_Initialize 0070  
                              ___fttol@f1 0034                            __pcstackCOMMON 0070  
                            __pidataBANK0 0F7E                       ??_SYSTEM_Initialize 0025  
                               ?_TMR6_ISR 0070                             __end_of_putch 0F7E  
                 __end_of_TMR6_Initialize 07C8                   ?_get_neutral_peaktopeak 002D  
                  __end_of_PMD_Initialize 0F93                          ??_madata_isempty 0023  
                              ___lwtoft@c 002B                      pkdata_insert@element 002A  
             ADCC_StartConversion@channel 0070                 __end_of_SYSTEM_Initialize 0FEB  
                   ??_EUSART_Transmit_ISR 0070                                   ??_putch 0025  
                   main@neutral_datapoint 0123                                __pbssBANK0 0046  
                              __pbssBANK1 00A0                      __end_of_EUSART_Write 06BB  
             __size_of_EUSART_Receive_ISR 001B                                __pmaintext 005A  
                         __CFG_PPS1WAY$ON 0000          __end_of_TMR6_SetInterruptHandler 0FB4  
                 __end_of_ADCC_Initialize 07DE                                ??_TMR6_ISR 007E  
                              __pintentry 0004            __end_of_get_neutral_peaktopeak 033A  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                                 _ADPREVH 008F                        __size_of_sbuf_peek 0015  
                                 _ADPREVL 008E                                 ?___ftpack 0023  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                                 ?_printf 0026                           ?_PMD_Initialize 0070  
                               ?___lwtoft 002B                             _eusartRxCount 0052  
                                 _SP1BRGH 011C                                   _SP1BRGL 011B  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                           ?_sbuf_isempty 0070                                   _OSCTUNE 0892  
                        ??_pkdata_isempty 0023                              ??_TMR6_Start 0023  
              __end_of_get_moving_average 04EF                              _T6AINPPSbits 0E9E  
                    __size_of_sbuf_insert 0031                      __size_of_sbuf_isfull 0022  
                    __size_of_sbuf_remove 0037                    __size_of_pkdata_insert 0026  
                  __size_of_pkdata_isfull 0022                    __size_of_pkdata_remove 002C  
                    __CFG_SCANE$available 0000                                   ___ftadd 01BC  
                                 ___awmod 0426                                   ___fttol 033A  
                                 ___lwdiv 0526                                ??___ftpack 0028  
                        ?_TMR6_Initialize 0070                        __end_of_TMR6_Start 0F72  
                                 __ptext1 04EF                                   __ptext2 0FA3  
                                 __ptext3 07DE                                   __ptext4 0743  
                                 __ptext5 0F78                                   __ptext6 0697  
                                 __ptext7 02B2                                   __ptext8 05F3  
                                 __ptext9 0F9B                                   _ma_data 00A0  
                         __size_of_printf 001D                                   _ma_rear 005B  
                              ??___lwtoft 002E                         i1___lwdiv@divisor 0070  
                   _OSCILLATOR_Initialize 0FB4                              __size_of_abs 000F  
                                 _sb_data 238C                         i1___lwdiv@counter 0077  
                                 _pk_data 0046                                   _sb_rear 005F  
                        ___awmod@dividend 0025                                   _pk_rear 005D  
                          ??_sbuf_isempty 0023                  ??_PIN_MANAGER_Initialize 0023  
                               _T6CONbits 029A                                 _T6HLTbits 029B  
              __size_of_SYSTEM_Initialize 0012                                   clrloop0 0FBF  
                    end_of_initialization 0056                         __end_of_sbuf_peek 07F3  
                               _T6RSTbits 029D                         _EUSART_Initialize 0798  
                      ?_EUSART_Initialize 0070                                   printf@c 002C  
                                 printf@f 0026                          ?_ADCC_Initialize 0070  
                   __CFG_WDTCPS$WDTCPS_31 0000                     __end_of_madata_insert 0697  
                     ??_EUSART_Initialize 0023                     __end_of_madata_isfull 06FF  
                   __end_of_madata_remove 064B                                 _PORTBbits 000D  
                               _PORTCbits 000E                  _TMR6_SetInterruptHandler 0FAB  
                           _pkdata_insert 064B                             _pkdata_isfull 06BB  
                           _pkdata_remove 05F3                     __size_of_EUSART_Write 0024  
                      sbuf_insert@element 0078                                 i1___awmod 046C  
                               i1___lwdiv 055B                          __CFG_FEXTOSC$OFF 0000  
                              _start_flag 005A                                 _RXPPSbits 0ECB  
               __end_of_EUSART_Initialize 07B2                                main@result 012C  
         get_neutral_peaktopeak@datapoint 002D                              _EUSART_Write 0697  
                       __size_of_TMR6_ISR 000D                    ?_OSCILLATOR_Initialize 0070  
       __size_of_ADCC_GetConversionResult 0006                 ?_ADCC_GetConversionResult 0070  
                          ?_pkdata_insert 002A                            __end_of_printf 0760  
                          ?_pkdata_isfull 0070                         main@motor_started 0128  
                          ?_pkdata_remove 0070                       start_initialization 0026  
         __size_of_PIN_MANAGER_Initialize 0033                               __end_of_abs 0FD9  
                              ?i1___awmod 0070                                ?i1___lwdiv 0070  
           __size_of_ADCC_StartConversion 0007                               putch@txData 0025  
                        __CFG_LPBOREN$OFF 0000                      __end_of_sbuf_isempty 0FAB  
      get_neutral_peaktopeak@highest_peak 0035                          ??_PMD_Initialize 0023  
                             __pdataBANK0 005B                        i1___awmod@dividend 0072  
                                ??_printf 0028                      madata_insert@element 002A  
                       __size_of___ftpack 0065                               __pbssBIGRAM 238C  
             __end_of_EUSART_Transmit_ISR 077D                                 ___latbits 0002  
                       __size_of___lwtoft 0015                             __pcstackBANK0 0020  
                           __pcstackBANK2 0120                __end_of_EUSART_Receive_ISR 0798  
              __size_of_EUSART_Initialize 001A                     _TMR6_InterruptHandler 00E4  
                               __pnvBANK0 0061                                 __pnvBANK1 00E4  
                        ___lwdiv@dividend 0025                    _PIN_MANAGER_Initialize 058F  
                 get_neutral_peaktopeak@i 0039                                  ?___ftadd 002B  
                      _get_moving_average 04B1                                  ?___awmod 0023  
                                ?___fttol 0034                                  ?___lwdiv 0023  
                            _eusartRxHead 0054                              _eusartTxHead 0056  
                            _eusartRxTail 0053                              _eusartTxTail 0055  
            ??_INTERRUPT_InterruptManager 0022                           ??_pkdata_insert 002C  
                         ??_pkdata_isfull 0023                           ??_pkdata_remove 002A  
                 _eusartTxBufferRemaining 0061                       ?_get_moving_average 002F  
                                _BAUD1CON 011F                               ??i1___awmod 0074  
                        ___lwdiv@quotient 0029                               ??i1___lwdiv 0074  
           get_neutral_peaktopeak@neutral 0033        __size_of_TMR6_EMG_InterruptHandler 0022  
                 __size_of_madata_isempty 0008                            __size_of_putch 0006  
              ?_TMR6_EMG_InterruptHandler 0070                                  _T6CLKCON 029C  
                          _eusartRxBuffer 00D4                             ??_sbuf_insert 007A  
                           ??_sbuf_isfull 0070                             ??_sbuf_remove 002A  
                          _eusartTxBuffer 00DC                                  _LATAbits 0016  
                    ??_get_moving_average 0032                                 clear_ram0 0FBE  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                               _sbuf_peek 07DE       __size_of_INTERRUPT_InterruptManager 0020  
                                _PIR3bits 070F                                  _PIR4bits 0710  
              ??_TMR6_SetInterruptHandler 0025                                  _TMR6_ISR 07F3  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                               main@count 0126                  __size_of_TMR6_Initialize 0016  
                        main@time_elapsed 0120         __end_of_TMR6_EMG_InterruptHandler 0721  
                   __size_of_sbuf_isempty 0008                   __size_of_pkdata_isempty 0008  
                ??_get_neutral_peaktopeak 002F                                _ADSTATbits 0097  
                              ?_sbuf_peek 0023          __end_of_ADCC_GetConversionResult 0F78  
                     __end_of_sbuf_insert 05F3                       __end_of_sbuf_isfull 0743  
                     __end_of_sbuf_remove 0526                         i1___awmod@divisor 0070  
                 ??_OSCILLATOR_Initialize 0023                         i1___awmod@counter 0075  
                        __size_of___ftadd 00F6                          __size_of___awmod 0046  
                        __size_of___fttol 0087                          __size_of___lwdiv 0035  
                                ___ftpack 03C1                                  ___lwtoft 0FEB  
                __size_of_ADCC_Initialize 0016                           ___lwdiv@divisor 0023  
          TMR6_EMG_InterruptHandler@adval 0020                              _sbuf_isempty 0FA3  
                         ___lwdiv@counter 0028                                  __ptext10 064B  
                                __ptext11 06BB                                  __ptext20 0FCA  
                                __ptext12 04B1                                  __ptext21 033A  
                                __ptext13 061F                                  __ptext30 0FB4  
                                __ptext22 01BC                                  __ptext14 0F93  
                                __ptext31 0798                                  __ptext23 03C1  
                                __ptext15 0671                                  __ptext40 0721  
                                __ptext32 07C8                                  __ptext24 0F6F  
                                __ptext16 06DD                                  __ptext41 0F84  
                                __ptext25 0FD9                                  __ptext17 0426  
                                __ptext42 0F72                                  __ptext34 07F3  
                                __ptext26 07B2                                  __ptext18 0FEB  
                                __ptext43 0760                                  __ptext35 0003  
                                __ptext27 0FAB                                  __ptext19 0526  
                                __ptext44 077D                                  __ptext36 06FF  
                                __ptext28 0F8B                                  __ptext37 055B  
                                __ptext29 058F                                  __ptext38 05C2  
                                __ptext39 046C                      pkdata_remove@element 002B  
                                _ma_front 005C                        i1___lwdiv@dividend 0072  
                           __size_of_main 0162                    __size_of_madata_insert 0026  
                  __size_of_madata_isfull 0022                                  _sb_front 0060  
                  __size_of_madata_remove 002C                                  _pk_front 005E  
                    __CFG_WDTCWS$WDTCWS_7 0000                                _RC1STAbits 011D  
            __end_of_ADCC_StartConversion 0F8B                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0024                _INTERRUPT_InterruptManager 0004  
                                main@mode 0125                        i1___lwdiv@quotient 0075  
                              _INTCONbits 000B                            _madata_isempty 0F93  
    __end_of_TMR6_DefaultInterruptHandler 0004     __size_of_TMR6_DefaultInterruptHandler 0001  
            _TMR6_DefaultInterruptHandler 0003                                  intlevel1 0000  
                             _sbuf_insert 05C2                               _sbuf_isfull 0721  
                             _sbuf_remove 04EF                   ?_PIN_MANAGER_Initialize 0070  
                       ??_TMR6_Initialize 0025                         __CFG_CLKOUTEN$OFF 0000  
                             ??_sbuf_peek 0025           __size_of_get_neutral_peaktopeak 0088  
                                printf@ap 002B                        _EUSART_Receive_ISR 077D  
                _ADCC_GetConversionResult 0F72                             __pstringtext1 1000  
                           __pstringtext2 1002                             __pstringtext3 0000  
                           _madata_insert 0671                             _madata_isfull 06DD  
                           _madata_remove 061F                       ?_EUSART_Receive_ISR 0070  
                  __end_of_madata_isempty 0F9B                                _TMR6_Start 0F6F  
                      EUSART_Write@txData 0024              __size_of_EUSART_Transmit_ISR 001D  
          __end_of_PIN_MANAGER_Initialize 05C2                         ??_ADCC_Initialize 0023  
             ??_TMR6_EMG_InterruptHandler 007E             ?_TMR6_DefaultInterruptHandler 0070  
                    ??_EUSART_Receive_ISR 0070                            _pkdata_isempty 0F9B  
